2020-03-03 14:05:32.970  INFO 4972 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 4972 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 14:05:32.974 DEBUG 4972 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 14:05:32.974  INFO 4972 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 14:05:36.621  INFO 4972 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 14:05:36.631  INFO 4972 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 14:05:36.631  INFO 4972 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 14:05:36.744  INFO 4972 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 14:05:36.745  INFO 4972 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3457 ms
2020-03-03 14:05:38.146  INFO 4972 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 14:05:38.284  INFO 4972 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 14:05:39.152  INFO 4972 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 14:05:39.249  INFO 4972 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 14:05:39.253  INFO 4972 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 7.625 seconds (JVM running for 9.253)
2020-03-03 15:10:49.911  INFO 13404 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13404 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:10:49.923 DEBUG 13404 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:10:49.923  INFO 13404 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:10:52.876  INFO 13404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:10:52.889  INFO 13404 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:10:52.889  INFO 13404 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:10:52.977  INFO 13404 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:10:52.978  INFO 13404 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2935 ms
2020-03-03 15:10:54.160  INFO 13404 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:10:54.292  INFO 13404 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:10:55.096  INFO 13404 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:10:55.209  INFO 13404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:10:55.212  INFO 13404 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 6.579 seconds (JVM running for 8.222)
2020-03-03 15:11:20.054  INFO 13404 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:11:20.054  INFO 13404 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:11:20.077  INFO 13404 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 23 ms
2020-03-03 15:11:20.154  INFO 13404 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:20.176  INFO 13404 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:11:20.210  INFO 13404 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:11:20.271  INFO 13404 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:11:20.272  WARN 13404 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:11:20.584  INFO 13404 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:11:20.924  INFO 13404 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:11:20.978  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/;jsessionid=EC66102C95663B6BCF1776ADF58F80B7', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:21.220  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:11:21.677 ERROR 13404 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:11:21.678 ERROR 13404 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:11:24.207  INFO 13404 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:24.208  INFO 13404 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:11:24.216  INFO 13404 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:11:24.272  INFO 13404 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:11:24.277  INFO 13404 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:24.381  INFO 13404 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:11:24.392 ERROR 13404 --- [http-nio-8081-exec-9] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-9] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:11:24.393 ERROR 13404 --- [http-nio-8081-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:11:28.045  INFO 13404 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:28.046  INFO 13404 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:11:28.055  INFO 13404 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:11:28.104  INFO 13404 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:11:28.110  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:28.222  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:11:28.231 ERROR 13404 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:11:28.232 ERROR 13404 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:11:29.685  INFO 13404 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:29.685  INFO 13404 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:11:29.697  INFO 13404 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:11:29.738  INFO 13404 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:11:29.745  INFO 13404 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:29.847  INFO 13404 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:11:29.856 ERROR 13404 --- [http-nio-8081-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-6] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:11:29.857 ERROR 13404 --- [http-nio-8081-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:11:57.141  INFO 13404 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:57.141  INFO 13404 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:11:57.155  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:11:57.200  INFO 13404 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:11:57.207  INFO 13404 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:11:57.308  INFO 13404 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:11:57.314 ERROR 13404 --- [http-nio-8081-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-4] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 23, col 29)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:11:57.315 ERROR 13404 --- [http-nio-8081-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:14:15.820  INFO 3192 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 3192 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:14:15.821 DEBUG 3192 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:14:15.821  INFO 3192 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:14:17.252  INFO 3192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:14:17.260  INFO 3192 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:14:17.260  INFO 3192 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:14:17.338  INFO 3192 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:14:17.339  INFO 3192 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1476 ms
2020-03-03 15:14:18.092  INFO 3192 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:14:18.198  INFO 3192 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:14:18.625  INFO 3192 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:14:18.702  INFO 3192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:14:18.705  INFO 3192 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.348 seconds (JVM running for 4.254)
2020-03-03 15:14:24.816  INFO 3192 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:14:24.816  INFO 3192 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:14:24.825  INFO 3192 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 15:14:24.864  INFO 3192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:14:24.870  INFO 3192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:14:24.900  INFO 3192 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:14:24.910  INFO 3192 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:14:24.911  WARN 3192 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:14:25.033  INFO 3192 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:14:25.301  INFO 3192 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:14:25.321  INFO 3192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:14:25.484  INFO 3192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:14:26.371  INFO 3192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:14:26.372  INFO 3192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:14:26.385  INFO 3192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:14:26.455  INFO 3192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:14:26.466  INFO 3192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:14:26.572  INFO 3192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:15:31.846  INFO 2296 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2296 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:15:31.847 DEBUG 2296 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:15:31.847  INFO 2296 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:15:33.262  INFO 2296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:15:33.271  INFO 2296 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:15:33.271  INFO 2296 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:15:33.347  INFO 2296 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:15:33.347  INFO 2296 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1457 ms
2020-03-03 15:15:34.111  INFO 2296 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:15:34.229  INFO 2296 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:15:34.655  INFO 2296 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:15:34.742  INFO 2296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:15:34.746  INFO 2296 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.376 seconds (JVM running for 4.614)
2020-03-03 15:15:38.025  INFO 2296 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:15:38.026  INFO 2296 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:15:38.035  INFO 2296 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 15:15:38.070  INFO 2296 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:15:38.075  INFO 2296 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:15:38.111  INFO 2296 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:15:38.116  INFO 2296 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:15:38.117  WARN 2296 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:15:38.235  INFO 2296 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:15:38.496  INFO 2296 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:15:38.517  INFO 2296 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:15:38.698  INFO 2296 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:15:38.984 ERROR 2296 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 25, col 33)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.id" (template: "index" - line 25, col 33)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2020-03-03 15:15:38.987 ERROR 2296 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:18:24.358  INFO 7576 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7576 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:18:24.359 DEBUG 7576 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:18:24.359  INFO 7576 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:18:25.769  INFO 7576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:18:25.777  INFO 7576 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:18:25.778  INFO 7576 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:18:25.855  INFO 7576 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:18:25.855  INFO 7576 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1452 ms
2020-03-03 15:18:26.606  INFO 7576 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:18:26.723  INFO 7576 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:18:27.149  INFO 7576 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:18:27.224  INFO 7576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:18:27.227  INFO 7576 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.358 seconds (JVM running for 4.245)
2020-03-03 15:18:35.579  INFO 7576 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:18:35.580  INFO 7576 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:18:35.592  INFO 7576 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-03-03 15:18:35.625  INFO 7576 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:18:35.631  INFO 7576 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:18:35.665  INFO 7576 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:18:35.671  INFO 7576 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:18:35.672  WARN 7576 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:18:35.822  INFO 7576 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:18:36.093  INFO 7576 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:18:36.117  INFO 7576 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:18:36.292  INFO 7576 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:24:35.132  INFO 11188 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11188 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:24:35.133 DEBUG 11188 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:24:35.134  INFO 11188 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:24:36.589  INFO 11188 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:24:36.599  INFO 11188 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:24:36.600  INFO 11188 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:24:36.684  INFO 11188 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:24:36.685  INFO 11188 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1505 ms
2020-03-03 15:24:37.457  INFO 11188 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:24:37.560  INFO 11188 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:24:37.974  INFO 11188 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:24:38.056  INFO 11188 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:24:38.059  INFO 11188 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.422 seconds (JVM running for 4.346)
2020-03-03 15:24:45.540  INFO 11188 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:24:45.540  INFO 11188 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:24:45.549  INFO 11188 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 15:24:45.586  INFO 11188 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:24:45.592  INFO 11188 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:24:45.619  INFO 11188 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:24:45.625  INFO 11188 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:24:45.627  WARN 11188 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:24:45.756  INFO 11188 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:24:46.039  INFO 11188 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:24:46.060  INFO 11188 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:24:46.251  INFO 11188 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:26:06.521  INFO 11136 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11136 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:26:06.522 DEBUG 11136 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:26:06.522  INFO 11136 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:26:08.082  INFO 11136 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:26:08.091  INFO 11136 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:26:08.092  INFO 11136 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:26:08.170  INFO 11136 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:26:08.170  INFO 11136 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1607 ms
2020-03-03 15:26:08.984  INFO 11136 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:26:09.096  INFO 11136 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:26:09.532  INFO 11136 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:26:09.620  INFO 11136 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:26:09.623  INFO 11136 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.645 seconds (JVM running for 4.579)
2020-03-03 15:26:13.957  INFO 11136 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:26:13.958  INFO 11136 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:26:13.973  INFO 11136 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-03-03 15:26:14.009  INFO 11136 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:26:14.015  INFO 11136 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:26:14.052  INFO 11136 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:26:14.058  INFO 11136 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:26:14.059  WARN 11136 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:26:14.179  INFO 11136 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:26:14.429  INFO 11136 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:26:14.453  INFO 11136 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:26:14.640  INFO 11136 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:27:10.593  INFO 12064 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12064 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:27:10.595 DEBUG 12064 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:27:10.595  INFO 12064 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:27:12.048  INFO 12064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:27:12.059  INFO 12064 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:27:12.060  INFO 12064 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:27:12.138  INFO 12064 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:27:12.139  INFO 12064 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1503 ms
2020-03-03 15:27:12.936  INFO 12064 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:27:13.048  INFO 12064 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:27:13.509  INFO 12064 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:27:13.603  INFO 12064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:27:13.606  INFO 12064 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.539 seconds (JVM running for 4.456)
2020-03-03 15:27:16.406  INFO 12064 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:27:16.406  INFO 12064 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:27:16.414  INFO 12064 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 15:27:16.451  INFO 12064 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:27:16.458  INFO 12064 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:27:16.486  INFO 12064 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:27:16.491  INFO 12064 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:27:16.492  WARN 12064 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:27:16.615  INFO 12064 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:27:16.863  INFO 12064 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:27:16.884  INFO 12064 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:27:17.099  INFO 12064 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:27:17.385 ERROR 12064 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "'window.open(www.baidu.com)" - line 1, col 1)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "'window.open(www.baidu.com)" - line 1, col 1)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:224)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 1, Column = 1) Incomplete structure: "'window.open(www.baidu.com)"
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 73 common frames omitted

2020-03-03 15:27:17.387 ERROR 12064 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.thymeleaf.templateparser.text.TextParseException: (Line = 1, Column = 1) Incomplete structure: "'window.open(www.baidu.com)"
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:224)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:28:21.175  INFO 8028 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 8028 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:28:21.176 DEBUG 8028 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:28:21.178  INFO 8028 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:28:22.602  INFO 8028 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:28:22.613  INFO 8028 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:28:22.614  INFO 8028 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:28:22.693  INFO 8028 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:28:22.693  INFO 8028 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1474 ms
2020-03-03 15:28:23.454  INFO 8028 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:28:23.563  INFO 8028 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:28:23.986  INFO 8028 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:28:24.066  INFO 8028 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:28:24.069  INFO 8028 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.383 seconds (JVM running for 4.243)
2020-03-03 15:28:28.716  INFO 8028 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:28:28.716  INFO 8028 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:28:28.725  INFO 8028 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 15:28:28.764  INFO 8028 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:28:28.770  INFO 8028 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:28:28.798  INFO 8028 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:28:28.810  INFO 8028 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:28:28.811  WARN 8028 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:28:28.935  INFO 8028 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:28:29.212  INFO 8028 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:28:29.233  INFO 8028 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:28:29.391  INFO 8028 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:28:29.684 ERROR 8028 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "'window.open(*www.baidu.com*)" - line 1, col 1)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "'window.open(*www.baidu.com*)" - line 1, col 1)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:224)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 1, Column = 1) Incomplete structure: "'window.open(*www.baidu.com*)"
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 73 common frames omitted

2020-03-03 15:28:29.686 ERROR 8028 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.thymeleaf.templateparser.text.TextParseException: (Line = 1, Column = 1) Incomplete structure: "'window.open(*www.baidu.com*)"
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:224)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:29:40.991  INFO 11016 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11016 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:29:40.995 DEBUG 11016 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:29:40.996  INFO 11016 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:29:43.293  INFO 11016 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:29:43.311  INFO 11016 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:29:43.312  INFO 11016 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:29:43.429  INFO 11016 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:29:43.429  INFO 11016 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2370 ms
2020-03-03 15:29:44.631  INFO 11016 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:29:44.822  INFO 11016 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:29:45.470  INFO 11016 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:29:45.594  INFO 11016 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:29:45.599  INFO 11016 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 5.36 seconds (JVM running for 7.259)
2020-03-03 15:29:47.440  INFO 11016 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:29:47.440  INFO 11016 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:29:47.451  INFO 11016 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 15:29:47.482  INFO 11016 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:29:47.488  INFO 11016 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:29:47.523  INFO 11016 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:29:47.529  INFO 11016 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:29:47.530  WARN 11016 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:29:47.723  INFO 11016 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:29:47.906  INFO 11016 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:29:47.924  INFO 11016 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:29:48.090  INFO 11016 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:31:13.939  INFO 4264 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 4264 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:31:13.940 DEBUG 4264 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:31:13.940  INFO 4264 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:31:15.361  INFO 4264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:31:15.369  INFO 4264 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:31:15.370  INFO 4264 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:31:15.445  INFO 4264 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:31:15.446  INFO 4264 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1465 ms
2020-03-03 15:31:16.171  INFO 4264 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:31:16.269  INFO 4264 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:31:16.749  INFO 4264 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:31:16.831  INFO 4264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:31:16.834  INFO 4264 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.38 seconds (JVM running for 4.356)
2020-03-03 15:31:19.538  INFO 4264 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:31:19.538  INFO 4264 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:31:19.549  INFO 4264 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 15:31:21.958  INFO 4264 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:31:21.969  INFO 4264 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:31:21.995  INFO 4264 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:31:22.002  INFO 4264 --- [http-nio-8081-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:31:22.004  WARN 4264 --- [http-nio-8081-exec-4] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:31:22.161  INFO 4264 --- [http-nio-8081-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:31:22.358  INFO 4264 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:31:22.374  INFO 4264 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:31:22.551  INFO 4264 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:31:23.864 ERROR 4264 --- [http-nio-8081-exec-9] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/$%7Bblog.id%7D,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "${blog.id}"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "${blog.id}"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:578)
	at java.lang.Long.valueOf(Long.java:803)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 15:31:23.871  WARN 4264 --- [http-nio-8081-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "${blog.id}"]
2020-03-03 15:31:23.987 ERROR 4264 --- [http-nio-8081-exec-5] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/lib/qrcode/qrcode.min.js,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "lib"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 15:31:23.988  WARN 4264 --- [http-nio-8081-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"]
2020-03-03 15:33:43.396  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12368 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:33:43.397 DEBUG 12368 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:33:43.397  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:33:44.830  INFO 12368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:33:44.843  INFO 12368 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:33:44.843  INFO 12368 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:33:44.920  INFO 12368 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:33:44.920  INFO 12368 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1481 ms
2020-03-03 15:33:45.688  INFO 12368 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:33:45.802  INFO 12368 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:33:46.223  INFO 12368 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:33:46.305  INFO 12368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:33:46.308  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.406 seconds (JVM running for 4.277)
2020-03-03 15:33:50.356  INFO 12368 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:33:50.357  INFO 12368 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:33:50.365  INFO 12368 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 15:33:50.401  INFO 12368 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:33:50.407  INFO 12368 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:33:50.437  INFO 12368 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:33:50.443  INFO 12368 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:33:50.448  WARN 12368 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:33:50.558  INFO 12368 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:33:50.803  INFO 12368 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:33:50.824  INFO 12368 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:33:50.975  INFO 12368 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:35:34.838  INFO 12456 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12456 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:35:34.839 DEBUG 12456 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:35:34.839  INFO 12456 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:35:36.303  INFO 12456 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:35:36.312  INFO 12456 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:35:36.312  INFO 12456 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:35:36.389  INFO 12456 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:35:36.390  INFO 12456 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1505 ms
2020-03-03 15:35:37.140  INFO 12456 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:35:37.247  INFO 12456 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:35:37.668  INFO 12456 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:35:37.757  INFO 12456 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:35:37.760  INFO 12456 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.417 seconds (JVM running for 4.294)
2020-03-03 15:35:40.206  INFO 12456 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:35:40.206  INFO 12456 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:35:40.217  INFO 12456 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 15:35:40.256  INFO 12456 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:35:40.271  INFO 12456 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:35:40.305  INFO 12456 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:35:40.310  INFO 12456 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:35:40.312  WARN 12456 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:35:40.437  INFO 12456 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:35:40.690  INFO 12456 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:35:40.714  INFO 12456 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=3, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:35:40.868  INFO 12456 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:35:45.928  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 15:35:45.952  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:35:56.580  INFO 12456 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:35:56.580  INFO 12456 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:35:56.593  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:35:56.643  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:35:56.649  INFO 12456 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:35:56.814  INFO 12456 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:36:00.397  INFO 12456 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:36:00.398  INFO 12456 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:36:00.410  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:36:00.451  INFO 12456 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:36:00.457  INFO 12456 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:36:00.614  INFO 12456 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:36:57.881  INFO 2920 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2920 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:36:57.881 DEBUG 2920 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:36:57.882  INFO 2920 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:36:59.336  INFO 2920 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:36:59.348  INFO 2920 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:36:59.348  INFO 2920 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:36:59.423  INFO 2920 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:36:59.423  INFO 2920 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1505 ms
2020-03-03 15:37:00.192  INFO 2920 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:37:00.298  INFO 2920 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:37:00.716  INFO 2920 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:37:00.801  INFO 2920 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:37:00.804  INFO 2920 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.432 seconds (JVM running for 4.308)
2020-03-03 15:37:04.951  INFO 2920 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:37:04.951  INFO 2920 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:37:04.962  INFO 2920 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 15:37:05.000  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:05.006  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:37:05.033  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:37:05.042  INFO 2920 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:37:05.044  WARN 2920 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:37:05.181  INFO 2920 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:37:05.453  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:37:05.475  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=4, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:05.699  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:37:08.194  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 15:37:08.219  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:37:10.744  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 15:37:10.774  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:37:12.536  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:12.547  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:37:12.557  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:37:12.615  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:37:12.622  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:12.676  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:37:13.642  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:13.646  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:tag/1/10/true/1
2020-03-03 15:37:13.659  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:37:13.756  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 15:37:13.763  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:13.803  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 15:37:14.731  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:14.731  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:37:14.741  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:37:14.785  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:37:14.793  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:14.894  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:37:16.564  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:16.565  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:37:16.584  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:37:16.633  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:37:16.638  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=6, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:37:16.787  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:37:19.686  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 15:37:19.714  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:38:00.099  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:00.104  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:38:00.116  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:00.131  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:00.136  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:00.199  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:03.238  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:03.247  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:tag/1/10/true/1
2020-03-03 15:38:03.256  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:03.292  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 15:38:03.300  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:03.362  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 15:38:04.467  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:04.472  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:38:04.479  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:04.493  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:04.499  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:04.546  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:33.122  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:33.131  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:38:33.137  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:33.147  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:33.153  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:33.192  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:38.179  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:38.188  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:38.197  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:38.267  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:39.325  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:39.344  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:39.350  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:39.404  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:41.773  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:41.786  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:41.792  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:41.845  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:42.816  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 3, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:42.821  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:42.827  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:42.879  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:43.906  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:43.946  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:43.953  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:44.015  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:44.531  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/5', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 5, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:44.542  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:44.551  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:44.605  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:45.678  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/6', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 6, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:45.683  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:45.692  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:45.744  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:46.598  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/8', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 8, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:46.606  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:46.617  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:46.662  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:47.070  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/9', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 9, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:47.081  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:47.090  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:47.136  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:47.637  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/10', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 10, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:47.642  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:47.648  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:47.697  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:48.181  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/28', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 28, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:48.185  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:48.191  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=0, startRow=0, endRow=0, total=0, pages=0, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=0, pages=0, reasonable=true, pageSizeZero=false}[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=[]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:48.244  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:48.826  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:48.842  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:48.849  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:48.900  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:49.514  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:49.521  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:49.530  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:49.581  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:38:50.001  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:38:50.015  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:38:50.020  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:38:50.074  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:07.354  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:07.354  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:39:07.367  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:39:07.400  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:39:07.406  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:07.494  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:39:09.678  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:09.685  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:39:09.694  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:09.703  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:09.709  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:09.751  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:25.033  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:25.048  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:25.054  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:25.100  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:26.685  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/13', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 13, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:26.692  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:26.697  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:26.751  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:27.354  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:27.367  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:27.374  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:27.431  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:28.014  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:28.023  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:28.036  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:28.083  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:28.705  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:28.720  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:28.729  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:28.783  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:29.135  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:29.142  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:29.147  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:29.200  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:29.771  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:29.786  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:29.798  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:29.847  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:32.518  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/18', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[18, {}]}
2020-03-03 15:39:32.535  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:39:36.870  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:36.883  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:36.891  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:36.945  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:41.431  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:41.452  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:41.458  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:41.510  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:43.925  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:43.926  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:39:43.935  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:39:43.969  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:39:43.975  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:44.095  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:39:45.265  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:45.269  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:39:45.278  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:45.288  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:45.294  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:45.334  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:49.560  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:49.602  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:39:49.609  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:49.646  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:39:55.055  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:55.065  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:tag/1/10/true/1
2020-03-03 15:39:55.074  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:39:55.103  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 15:39:55.108  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:55.125  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 15:39:56.036  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toArchives', args=[{}]}
2020-03-03 15:39:56.114  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:archives
2020-03-03 15:39:57.084  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 15:39:57.084  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:about
2020-03-03 15:39:58.580  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:58.581  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:39:58.592  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:39:58.627  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:39:58.633  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:39:58.713  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:40:11.497  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:11.501  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:40:11.516  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:40:11.530  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:40:11.535  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:11.570  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:40:12.303  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:12.304  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:40:12.312  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:40:12.351  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:40:12.357  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:12.441  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:40:24.277  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 15:40:24.277  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:about
2020-03-03 15:40:26.006  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:26.006  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:40:26.020  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:40:26.052  INFO 2920 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:40:26.057  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=7, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:26.145  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:40:27.592  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 15:40:27.607  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 15:40:46.203  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:46.207  INFO 2920 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:40:46.215  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:40:46.225  INFO 2920 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:40:46.232  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:46.268  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:40:48.122  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:40:48.131  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:40:48.137  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=1, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:48.190  INFO 2920 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:40:49.302  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:40:49.314  INFO 2920 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:40:49.326  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:49.372  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:40:50.304  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:40:50.339  INFO 2920 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:40:50.345  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:40:50.388  INFO 2920 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:41:34.050  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:41:34.080  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:41:34.088  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:41:34.134  INFO 2920 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:43:27.887  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@c8dbd0]}
2020-03-03 15:43:27.926  INFO 2920 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:43:27.932  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@c8dbd0, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:43:28.023  INFO 2920 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:45:06.879  INFO 4664 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 4664 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:45:06.880 DEBUG 4664 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:45:06.880  INFO 4664 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:45:08.329  INFO 4664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:45:08.340  INFO 4664 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:45:08.340  INFO 4664 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:45:08.414  INFO 4664 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:45:08.415  INFO 4664 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1490 ms
2020-03-03 15:45:09.198  INFO 4664 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:45:09.306  INFO 4664 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:45:09.738  INFO 4664 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:45:09.819  INFO 4664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:45:09.821  INFO 4664 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.407 seconds (JVM running for 4.272)
2020-03-03 15:45:13.516  INFO 4664 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:45:13.516  INFO 4664 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:45:13.526  INFO 4664 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 15:45:13.566  INFO 4664 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@17104e8, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:13.576  INFO 4664 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:45:13.577  WARN 4664 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:45:13.719  INFO 4664 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:45:13.909  INFO 4664 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 15:45:13.965  INFO 4664 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@17104e8]}
2020-03-03 15:45:14.042  INFO 4664 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:45:14.061  INFO 4664 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@17104e8, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:14.145  INFO 4664 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:45:15.453  INFO 4664 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:15.453  INFO 4664 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:45:15.473  INFO 4664 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:45:15.534  INFO 4664 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:45:15.542  INFO 4664 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:15.693  INFO 4664 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:45:18.929 ERROR 4664 --- [http-nio-8081-exec-7] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/type/1/10/true/%7Bid%7D(id=$%7Bblog.typeid%7D,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{id}(id=${blog.typeid}"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "{id}(id=${blog.typeid}"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.valueOf(Long.java:803)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 15:45:18.931  WARN 4664 --- [http-nio-8081-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{id}(id=${blog.typeid}"]
2020-03-03 15:45:37.084  INFO 4664 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:37.084  INFO 4664 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:45:37.094  INFO 4664 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:45:37.147  INFO 4664 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:45:37.153  INFO 4664 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:45:37.252  INFO 4664 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:46:58.556  INFO 10780 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10780 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:46:58.557 DEBUG 10780 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:46:58.557  INFO 10780 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:46:59.971  INFO 10780 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:46:59.983  INFO 10780 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:46:59.984  INFO 10780 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:47:00.062  INFO 10780 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:47:00.063  INFO 10780 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1467 ms
2020-03-03 15:47:00.827  INFO 10780 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:47:00.926  INFO 10780 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:47:01.364  INFO 10780 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:47:01.449  INFO 10780 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:47:01.452  INFO 10780 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.382 seconds (JVM running for 4.306)
2020-03-03 15:47:04.599  INFO 10780 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:47:04.599  INFO 10780 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:47:04.607  INFO 10780 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 15:47:04.644  INFO 10780 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:04.651  INFO 10780 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:47:04.684  INFO 10780 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:47:04.690  INFO 10780 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:47:04.691  WARN 10780 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:47:04.821  INFO 10780 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:47:05.110  INFO 10780 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:47:05.134  INFO 10780 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:05.341  INFO 10780 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:47:05.783 ERROR 10780 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.typeid" (template: "index" - line 53, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.typeid" (template: "index" - line 53, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 80 common frames omitted

2020-03-03 15:47:05.785 ERROR 10780 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:47:07.337  INFO 10780 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:07.338  INFO 10780 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:47:07.347  INFO 10780 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:47:07.413  INFO 10780 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:47:07.418  INFO 10780 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:07.520  INFO 10780 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:47:07.535 ERROR 10780 --- [http-nio-8081-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-7] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.typeid" (template: "index" - line 53, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.typeid" (template: "index" - line 53, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 80 common frames omitted

2020-03-03 15:47:07.536 ERROR 10780 --- [http-nio-8081-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:47:51.697  INFO 11660 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11660 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:47:51.698 DEBUG 11660 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:47:51.698  INFO 11660 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:47:53.112  INFO 11660 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:47:53.121  INFO 11660 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:47:53.121  INFO 11660 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:47:53.199  INFO 11660 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:47:53.199  INFO 11660 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1461 ms
2020-03-03 15:47:53.977  INFO 11660 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:47:54.092  INFO 11660 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:47:54.526  INFO 11660 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:47:54.622  INFO 11660 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:47:54.625  INFO 11660 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.434 seconds (JVM running for 4.312)
2020-03-03 15:47:56.571  INFO 11660 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:47:56.572  INFO 11660 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:47:56.582  INFO 11660 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 15:47:56.619  INFO 11660 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:56.625  INFO 11660 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:47:56.655  INFO 11660 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:47:56.664  INFO 11660 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:47:56.665  WARN 11660 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:47:56.775  INFO 11660 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:47:57.059  INFO 11660 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:47:57.081  INFO 11660 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:47:57.236  INFO 11660 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:47:57.514 ERROR 11660 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.type.typeid" (template: "index" - line 53, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.type.typeid" (template: "index" - line 53, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Type' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 80 common frames omitted

2020-03-03 15:47:57.516 ERROR 11660 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'typeid' cannot be found on object of type 'com.myblog.pojo.Type' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 15:48:26.271  INFO 11124 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11124 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:48:26.272 DEBUG 11124 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:48:26.272  INFO 11124 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:48:27.693  INFO 11124 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:48:27.703  INFO 11124 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:48:27.704  INFO 11124 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:48:27.781  INFO 11124 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:48:27.782  INFO 11124 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1467 ms
2020-03-03 15:48:28.524  INFO 11124 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:48:28.631  INFO 11124 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:48:29.036  INFO 11124 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:48:29.117  INFO 11124 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:48:29.120  INFO 11124 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.336 seconds (JVM running for 4.2)
2020-03-03 15:48:32.660  INFO 11124 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:48:32.661  INFO 11124 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:48:32.669  INFO 11124 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 15:48:32.704  INFO 11124 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:48:32.710  INFO 11124 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:48:32.736  INFO 11124 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:48:32.741  INFO 11124 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:48:32.742  WARN 11124 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:48:32.864  INFO 11124 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:48:33.127  INFO 11124 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:48:33.147  INFO 11124 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:48:33.292  INFO 11124 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:48:35.573 ERROR 11124 --- [http-nio-8081-exec-10] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/type/1/10/true/%7Btypeid%7D,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{typeid}"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "{typeid}"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.valueOf(Long.java:803)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 15:48:35.574  WARN 11124 --- [http-nio-8081-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{typeid}"]
2020-03-03 15:49:15.736  INFO 488 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 488 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 15:49:15.737 DEBUG 488 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 15:49:15.737  INFO 488 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 15:49:17.146  INFO 488 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 15:49:17.157  INFO 488 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 15:49:17.157  INFO 488 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 15:49:17.231  INFO 488 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 15:49:17.231  INFO 488 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1456 ms
2020-03-03 15:49:17.987  INFO 488 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 15:49:18.098  INFO 488 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 15:49:18.521  INFO 488 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 15:49:18.600  INFO 488 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 15:49:18.603  INFO 488 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.415 seconds (JVM running for 4.278)
2020-03-03 15:49:27.618  INFO 488 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 15:49:27.618  INFO 488 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 15:49:27.631  INFO 488 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-03-03 15:49:27.670  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:49:27.677  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:49:27.710  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:49:27.717  INFO 488 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 15:49:27.718  WARN 488 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 15:49:27.864  INFO 488 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 15:49:28.142  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:49:28.163  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:49:28.323  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:49:32.494  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 15:49:32.555  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:49:32.563  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:49:32.649  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:59:19.688  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 15:59:19.739  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 15:59:19.745  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:59:19.813  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:types
2020-03-03 15:59:23.826  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toArchives', args=[{}]}
2020-03-03 15:59:23.923  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:archives
2020-03-03 15:59:24.790  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:59:24.791  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 15:59:24.800  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 15:59:24.836  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 15:59:24.843  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 15:59:24.971  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 15:59:34.493  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 15:59:34.494  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:about
2020-03-03 15:59:53.949  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 15:59:53.950  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:about
2020-03-03 16:00:26.571  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 16:00:26.572  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:about
2020-03-03 16:00:27.583  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 16:00:27.583  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:about
2020-03-03 16:00:28.322  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 16:00:28.323  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:about
2020-03-03 16:00:29.366  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 16:00:29.366  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:about
2020-03-03 16:00:36.300  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toArchives', args=[{}]}
2020-03-03 16:00:36.370  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:archives
2020-03-03 16:00:37.145  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:37.149  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:tag/1/10/true/1
2020-03-03 16:00:37.163  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:00:37.245  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 16:00:37.252  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-01-27 16:53:36, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:37.274  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 16:00:37.976  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:37.981  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 16:00:37.992  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:00:38.004  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 16:00:38.013  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@1636390, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:38.054  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:types
2020-03-03 16:00:39.129  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:39.130  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:00:39.141  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:00:39.182  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:00:39.189  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=8, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:00:39.331  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:00:44.959  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:00:44.985  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:01:59.766  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:01:59.767  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:01:59.781  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:01:59.811  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:01:59.815  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:01:59.892  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:02:03.283  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:02:03.284  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:02:03.295  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:02:03.341  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:02:03.346  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:02:03.444  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:02:22.431  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:02:22.432  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:03:49.118  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:03:49.142  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:03:54.391  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:03:54.414  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:03:55.150  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:03:55.169  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:03.855  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:03.885  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:04.587  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:04.617  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:05.147  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:05.167  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:05.483  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:05.510  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:05.810  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:05.832  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:06.146  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:06.169  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:06.778  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:06.803  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:07.100  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:07.121  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:07.476  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:07.502  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:07.760  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:07.792  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:08.078  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:08.098  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:08.392  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:08.410  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:08.730  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:08.752  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:09.022  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:09.051  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:09.361  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:09.385  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:09.642  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:09.667  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:09.978  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:10.000  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:10.242  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:10.266  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:10.876  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:10.894  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:04:11.576  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tagpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:11.588  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/tags
2020-03-03 16:04:11.597  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.toTags', args=[PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:11.597  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:ModelAndView [view="admin/tags"; model={pageInfo=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}}]
2020-03-03 16:04:12.294  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:12.300  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:04:12.771  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:12.794  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:14.309  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:14.319  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:04:16.965  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tagpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:16.975  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/tags
2020-03-03 16:04:16.980  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.toTags', args=[PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:16.980  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:ModelAndView [view="admin/tags"; model={pageInfo=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}}]
2020-03-03 16:04:17.610  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:04:17.620  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:04:18.034  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:18.055  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:20.909  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, null, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:20.913  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, 1, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:20.916  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:20.916  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:20.932  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:20.950  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:20.954  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:20.969  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:24.508  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, null, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:24.508  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:24.513  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, 0, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:24.513  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:24.517  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:24.544  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:24.548  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:24.571  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:27.028  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, null, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:27.028  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:27.030  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, 0, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:27.030  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:27.034  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:27.063  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:27.067  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:27.093  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:30.911  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:30.937  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:31.496  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:31.522  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:31.954  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:31.976  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:32.536  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:32.559  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:32.869  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:32.882  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:33.273  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:33.294  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:34.613  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:34.635  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:35.650  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:35.670  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:36.354  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:36.375  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:36.937  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:36.959  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:37.704  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:37.721  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:38.003  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:38.024  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:38.474  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:38.484  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:39.018  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:39.039  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:40.163  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:40.185  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:41.365  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:41.389  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:44.301  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:44.325  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:45.718  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:45.739  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:46.222  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:46.248  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:46.714  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:46.741  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:47.401  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:47.429  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:47.915  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:47.943  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:49.600  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, null, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:49.600  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:49.601  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, 0, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:49.601  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:04:49.613  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:49.634  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:49.637  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:49.664  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:04:57.835  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:04:57.869  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:03.629  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:03.648  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:04.813  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:04.835  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:05.669  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:05.698  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:07.782  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, null, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:07.783  INFO 488 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:05:07.784  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.doSearch', args=[, 0, null, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:07.784  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 16:05:07.794  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:07.821  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:07.824  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:07.846  INFO 488 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:10.101  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:10.130  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:11.293  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:11.311  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:11.858  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:11.880  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:13.808  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:05:13.817  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:05:14.752  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tagpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:05:14.760  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/tags
2020-03-03 16:05:14.766  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.toTags', args=[PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:14.766  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:ModelAndView [view="admin/tags"; model={pageInfo=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}}]
2020-03-03 16:05:15.354  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:15.375  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:16.548  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:16.566  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:17.026  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1636390]}
2020-03-03 16:05:17.058  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:05:42.122  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:05:42.123  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:05:42.142  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:05:42.185  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:05:42.190  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:05:42.276  INFO 488 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:05:43.768  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:05:43.791  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:05:49.607  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[4, {}]}
2020-03-03 16:05:49.632  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:05:54.638  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/7', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[7, {}]}
2020-03-03 16:05:54.659  INFO 488 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:05:59.998  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/10', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[10, {}]}
2020-03-03 16:06:00.020  INFO 488 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:06:07.293  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/7', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[7, {}]}
2020-03-03 16:06:07.313  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:09:29.711  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:09:29.711  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:09:29.726  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:09:29.765  INFO 488 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:09:29.771  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:09:29.868  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:09:31.095  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:09:31.095  INFO 488 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:09:31.111  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:09:31.158  INFO 488 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:09:31.164  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:09:31.252  INFO 488 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:09:33.360  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/6', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[6, {}]}
2020-03-03 16:09:33.380  INFO 488 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:09:40.684  INFO 7796 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7796 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:09:40.685 DEBUG 7796 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:09:40.686  INFO 7796 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:09:44.416  INFO 7796 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:09:44.577  INFO 7796 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:09:44.577  INFO 7796 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:09:45.192  INFO 7796 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:09:45.192  INFO 7796 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4466 ms
2020-03-03 16:09:46.158  INFO 7796 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:09:46.260  INFO 7796 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:09:46.670  INFO 7796 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:09:46.770  INFO 7796 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:09:46.773  INFO 7796 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 6.72 seconds (JVM running for 8.514)
2020-03-03 16:10:11.325  INFO 7796 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:10:11.326  INFO 7796 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:10:11.341  INFO 7796 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-03-03 16:10:11.394  INFO 7796 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:10:11.401  INFO 7796 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:10:11.440  INFO 7796 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:10:11.448  INFO 7796 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:10:11.450  WARN 7796 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:10:11.977  INFO 7796 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:10:12.298  INFO 7796 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:10:12.358  INFO 7796 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=9, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=5, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:10:12.514  INFO 7796 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:10:29.561  INFO 7796 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:10:29.589  INFO 7796 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:10:34.601  INFO 7796 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:10:34.623  INFO 7796 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:10:50.085  INFO 7796 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:10:50.107  INFO 7796 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:11:39.748  INFO 10112 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10112 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:11:39.748 DEBUG 10112 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:11:39.749  INFO 10112 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:11:41.114  INFO 10112 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:11:41.122  INFO 10112 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:11:41.123  INFO 10112 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:11:41.199  INFO 10112 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:11:41.199  INFO 10112 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1411 ms
2020-03-03 16:11:41.940  INFO 10112 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:11:42.042  INFO 10112 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:11:42.447  INFO 10112 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:11:42.520  INFO 10112 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:11:42.523  INFO 10112 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.242 seconds (JVM running for 4.615)
2020-03-03 16:11:52.146  INFO 10112 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:11:52.146  INFO 10112 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:11:52.155  INFO 10112 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 16:11:52.187  INFO 10112 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:11:52.199  INFO 10112 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:11:52.228  INFO 10112 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:11:52.232  INFO 10112 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:11:52.233  WARN 10112 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:11:52.351  INFO 10112 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:11:52.586  INFO 10112 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:11:52.611  INFO 10112 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=10, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=7, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=10, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=7, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:11:52.769  INFO 10112 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:11:54.559  INFO 10112 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:11:54.582  INFO 10112 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:11:54.659 ERROR 10112 --- [http-nio-8081-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-10] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 142, Column = 40) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 16:11:54.660 ERROR 10112 --- [http-nio-8081-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)] with root cause

org.attoparser.ParseException: (Line = 142, Column = 40) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 16:11:54.678 ERROR 10112 --- [http-nio-8081-exec-10] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/2] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 16:12:02.278  INFO 10112 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:12:02.307  INFO 10112 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:12:02.321 ERROR 10112 --- [http-nio-8081-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-7] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 142, Column = 40) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 16:12:02.322 ERROR 10112 --- [http-nio-8081-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)] with root cause

org.attoparser.ParseException: (Line = 142, Column = 40) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 16:12:02.327 ERROR 10112 --- [http-nio-8081-exec-7] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/2] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 142, col 40)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 16:12:21.439  INFO 276 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 276 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:12:21.440 DEBUG 276 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:12:21.440  INFO 276 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:12:22.822  INFO 276 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:12:22.830  INFO 276 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:12:22.831  INFO 276 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:12:22.906  INFO 276 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:12:22.907  INFO 276 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1428 ms
2020-03-03 16:12:23.700  INFO 276 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:12:23.805  INFO 276 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:12:24.204  INFO 276 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:12:24.283  INFO 276 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:12:24.286  INFO 276 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.328 seconds (JVM running for 4.21)
2020-03-03 16:12:31.900  INFO 276 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:12:31.900  INFO 276 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:12:31.911  INFO 276 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 16:12:31.953  INFO 276 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:12:31.960  INFO 276 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:12:31.991  INFO 276 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:12:31.996  INFO 276 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:12:31.997  WARN 276 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:12:32.134  INFO 276 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:12:32.441  INFO 276 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:12:32.466  INFO 276 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=12, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=7, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=12, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=7, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:12:32.616  INFO 276 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:12:32.792  INFO 276 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:12:32.828  INFO 276 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:12:32.934 ERROR 276 --- [http-nio-8081-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-4] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 145, Column = 13) Incomplete structure: "<div class="ui payQ flowing popup transition hidden" ">
                <div class="ui orange basic label">
                    <div class="ui images" style="font-size: inherit">
                        <div class="image">
                            <img th:src="@{/images/alipay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>支付宝</div>
                        </div>
                        <div class="image">
                            <img th:src="@{/images/wechatpay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>微信</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="ui attached positive message">
            <!--博客信息-->
            <div class="ui middle aligned grid">
                <div class="eleven wide column">
                    <ui class="list">
                        <li>作者:白峰源(联系作者)</li>
                        <li>发表时间:<span th:text="${blog.createTime}">2020-01-13</span></li>
                        <li>版权声明:自由转载-非商用-非衍生-保持署名(创意共享3.8许可证)</li>
                        <li>公众号转载:请在文末添加作者公众号二维码</li>
                    </ui>
                </div>
                <div class="five wide column">
                    <img src="../images/wechat.jpg" alt="" class="ui right floated roundedbordered image" style="width: 110px">
                </div>
            </div>
        </div>
        <div th:if="${blog.commentable==1}" id="comment-container" class="ui bottom attached segment">
            <!--留言区域列表-->
            <div class="ui teal segment">
                <div class="ui comments">
                    <h3 class="ui dividing header">Comments</h3>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/matt.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Matt</a>
                            <div class="metadata">
                                <span class="date">Today at 5:42PM</span>
                            </div>
                            <div class="text">
                                How artistic!
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/elliot.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Elliot Fu</a>
                            <div class="metadata">
                                <span class="date">Yesterday at 12:30AM</span>
                            </div>
                            <div class="text">
                                <p>This has been very useful for my research. Thanks as well!</p>
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                        <div class="comments">
                            <div class="comment">
                                <a class="avatar">
                                    <img src="/images/avatar/small/jenny.jpg">
                                </a>
                                <div class="content">
                                    <a class="author">Jenny Hess</a>
                                    <div class="metadata">
                                        <span class="date">Just now</span>
                                    </div>
                                    <div class="text">
                                        Elliot you are always so right :)
                                    </div>
                                    <div class="actions">
                                        <a class="reply">回复</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/joe.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Joe Henderson</a>
                            <div class="metadata">
                                <span class="date">5 days ago</span>
                            </div>
                            <div class="text">
                                Dude, this is awesome. Thanks so much
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui form">
                <div class="field">
                    <textarea name="content" placeholder="请输入评论信息" id="" cols="30" rows="10"></textarea>
                </div>

                <div class="fields">
                <div class="field m-mobile-wide m-margin-bottom-small">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                    <input type="text" name="nickname" placeholder="姓名">
                    </div>
                </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <div class="ui left icon input">
                            <i class="mail icon"></i>
                            <input type="text" name="email" placeholder="邮箱">
                        </div>
                    </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <button class="ui teal button m-mobile-wide"><i class="edit icon"></i>发布</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="m-padded m-right-bottom m-fixed">
<div class="ui vertical icon buttons ">
    <a href="#comment-container" type="button" class="ui teal button">留言</a>
<!--    <button class="ui wechat icon button"><i class="weixin icon"></i></button>-->
    <button id="toTop-button" class="ui icon button"><i class="chevron up icon"></i></button>
</div>
</div>


<div class="ui toc-container flowing popup transition hidden" style="width: 250px !important;">

    <ol class="js-toc">

    </ol>
</div>


<div id="qrcode" class="ui wechat-qr flowing popup transition hidden "style="width: 130px !important;">

</div>



<!--底部footer-->
<footer class="ui inverted vertical segment m-padded-tb-massive">
    <div class="ui center aligned container">
        <div class="ui inverted divided stackable grid">
            <div class="three wide column">
                <div class="ui inverted link list">
                <div class="item">
                <img src="../images/wechat.jpg" class="ui rounded image" style="width: 120px">
                </div>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">最新博客</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">联系我</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">Email:377092613@qq.com</a>
                    <a href="#" class="item">QQ:377092613</a>
                </div>
            </div>
            <div class="seven wide column">
                <h4 class="m-text-thin m-text-spaced">关于我</h4>
                <P class="m-text-thin m-text-spaced m-opacity-mini">一个热爱生活，热爱思考，专心编程的程序猿，这是我的个人博客，我希望能够通过博客记录自己学习的点点滴滴</P>
            </div>
        </div>
        <div class="ui inverted section divider"></div>
        <p class="m-text-thin m-text-spaced m-opacity-mini">Copyright©2020 Designed by Baifengyuan</p>
    </div>

</footer>


<script>

    /*var testEditor;
    $(function () {
        testEditor = editormd.markdownToHTML("content", {//注意：这里是上面DIV的id
            htmlDecode: "style,script,iframe",
            emoji: true,
            taskList: true,
            tex: true, // 默认不解析
            flowChart: true, // 默认不解析
            sequenceDiagram: true, // 默认不解析
            codeFold: true,
        });});*/

    $(function() {
        $("#content").html('<textarea id="blogcontent" name="textContent" style="display:none;"></textarea>');
        var content=$("#conten").val();//获取需要转换的内容
        $("#blogcontent").val(content);//将需要转换的内容加到转换后展示容器的textarea隐藏标签中
        var testEditormdView;
        testEditormdView = editormd.markdownToHTML("content", {
            htmlDecode      : "style,script,iframe",  // you can filter tags decode
            emoji           : true,
            taskList        : true,
            tex             : true,  // 默认不解析
            flowChart       : true,  // 默认不解析
            sequenceDiagram : true,  // 默认不解析
        });
    })

    $('.menu.toggle').click(function(){
        $('.m-item').toggleClass('m-mobile-hide');
    });

    $('#payButton').popup({
        popup : $('.payQ.popup'),
        on : 'click',
        position : 'bottom center'
    });

    tocbot.init({
        // Where to render the table of contents.
        tocSelector: '.js-toc',
        // Where to grab the headings to build the table of contents.
        contentSelector: '.js-toc-content',
        // Which headings to grab inside of the contentSelector element.
        headingSelector: 'h1, h2, h3',
        // For headings inside relative or absolute positioned containers within content.
        hasInnerContainers: true,
    });

    $('.toc.button').popup({
        popup : $('.toc-container.popup'),
        on : 'click',
        position : 'left center'
    });

    $('.wechat').popup({
        popup : $('.wechat-qr'),
        position : 'left center'
    });

    var qrcode = new QRCode("qrcode", {
        text: "http://jindo.dev.naver.com/collie",
        width: 100,
        height: 100,
        colorDark : "#000000",
        colorLight : "#ffffff",
        correctLevel : QRCode.CorrectLevel.H
    });

    $('#toTop-button').click(function () {
        $(window).scrollTo(0,500);
    });

    var waypoint = new Waypoint({
        element: document.getElementById('waypoint'),
        handler: function(direction) {
            if (direction == 'down') {
                $('#toolbar').show(100);
            } else {
                $('#toolbar').hide(500);
            }
            console.log('Scrolled to waypoint!  ' + direction);
        }
    });

</script>



</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 16:12:32.940 ERROR 276 --- [http-nio-8081-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)] with root cause

org.attoparser.ParseException: (Line = 145, Column = 13) Incomplete structure: "<div class="ui payQ flowing popup transition hidden" ">
                <div class="ui orange basic label">
                    <div class="ui images" style="font-size: inherit">
                        <div class="image">
                            <img th:src="@{/images/alipay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>支付宝</div>
                        </div>
                        <div class="image">
                            <img th:src="@{/images/wechatpay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>微信</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="ui attached positive message">
            <!--博客信息-->
            <div class="ui middle aligned grid">
                <div class="eleven wide column">
                    <ui class="list">
                        <li>作者:白峰源(联系作者)</li>
                        <li>发表时间:<span th:text="${blog.createTime}">2020-01-13</span></li>
                        <li>版权声明:自由转载-非商用-非衍生-保持署名(创意共享3.8许可证)</li>
                        <li>公众号转载:请在文末添加作者公众号二维码</li>
                    </ui>
                </div>
                <div class="five wide column">
                    <img src="../images/wechat.jpg" alt="" class="ui right floated roundedbordered image" style="width: 110px">
                </div>
            </div>
        </div>
        <div th:if="${blog.commentable==1}" id="comment-container" class="ui bottom attached segment">
            <!--留言区域列表-->
            <div class="ui teal segment">
                <div class="ui comments">
                    <h3 class="ui dividing header">Comments</h3>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/matt.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Matt</a>
                            <div class="metadata">
                                <span class="date">Today at 5:42PM</span>
                            </div>
                            <div class="text">
                                How artistic!
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/elliot.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Elliot Fu</a>
                            <div class="metadata">
                                <span class="date">Yesterday at 12:30AM</span>
                            </div>
                            <div class="text">
                                <p>This has been very useful for my research. Thanks as well!</p>
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                        <div class="comments">
                            <div class="comment">
                                <a class="avatar">
                                    <img src="/images/avatar/small/jenny.jpg">
                                </a>
                                <div class="content">
                                    <a class="author">Jenny Hess</a>
                                    <div class="metadata">
                                        <span class="date">Just now</span>
                                    </div>
                                    <div class="text">
                                        Elliot you are always so right :)
                                    </div>
                                    <div class="actions">
                                        <a class="reply">回复</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/joe.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Joe Henderson</a>
                            <div class="metadata">
                                <span class="date">5 days ago</span>
                            </div>
                            <div class="text">
                                Dude, this is awesome. Thanks so much
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui form">
                <div class="field">
                    <textarea name="content" placeholder="请输入评论信息" id="" cols="30" rows="10"></textarea>
                </div>

                <div class="fields">
                <div class="field m-mobile-wide m-margin-bottom-small">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                    <input type="text" name="nickname" placeholder="姓名">
                    </div>
                </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <div class="ui left icon input">
                            <i class="mail icon"></i>
                            <input type="text" name="email" placeholder="邮箱">
                        </div>
                    </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <button class="ui teal button m-mobile-wide"><i class="edit icon"></i>发布</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="m-padded m-right-bottom m-fixed">
<div class="ui vertical icon buttons ">
    <a href="#comment-container" type="button" class="ui teal button">留言</a>
<!--    <button class="ui wechat icon button"><i class="weixin icon"></i></button>-->
    <button id="toTop-button" class="ui icon button"><i class="chevron up icon"></i></button>
</div>
</div>


<div class="ui toc-container flowing popup transition hidden" style="width: 250px !important;">

    <ol class="js-toc">

    </ol>
</div>


<div id="qrcode" class="ui wechat-qr flowing popup transition hidden "style="width: 130px !important;">

</div>



<!--底部footer-->
<footer class="ui inverted vertical segment m-padded-tb-massive">
    <div class="ui center aligned container">
        <div class="ui inverted divided stackable grid">
            <div class="three wide column">
                <div class="ui inverted link list">
                <div class="item">
                <img src="../images/wechat.jpg" class="ui rounded image" style="width: 120px">
                </div>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">最新博客</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">联系我</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">Email:377092613@qq.com</a>
                    <a href="#" class="item">QQ:377092613</a>
                </div>
            </div>
            <div class="seven wide column">
                <h4 class="m-text-thin m-text-spaced">关于我</h4>
                <P class="m-text-thin m-text-spaced m-opacity-mini">一个热爱生活，热爱思考，专心编程的程序猿，这是我的个人博客，我希望能够通过博客记录自己学习的点点滴滴</P>
            </div>
        </div>
        <div class="ui inverted section divider"></div>
        <p class="m-text-thin m-text-spaced m-opacity-mini">Copyright©2020 Designed by Baifengyuan</p>
    </div>

</footer>


<script>

    /*var testEditor;
    $(function () {
        testEditor = editormd.markdownToHTML("content", {//注意：这里是上面DIV的id
            htmlDecode: "style,script,iframe",
            emoji: true,
            taskList: true,
            tex: true, // 默认不解析
            flowChart: true, // 默认不解析
            sequenceDiagram: true, // 默认不解析
            codeFold: true,
        });});*/

    $(function() {
        $("#content").html('<textarea id="blogcontent" name="textContent" style="display:none;"></textarea>');
        var content=$("#conten").val();//获取需要转换的内容
        $("#blogcontent").val(content);//将需要转换的内容加到转换后展示容器的textarea隐藏标签中
        var testEditormdView;
        testEditormdView = editormd.markdownToHTML("content", {
            htmlDecode      : "style,script,iframe",  // you can filter tags decode
            emoji           : true,
            taskList        : true,
            tex             : true,  // 默认不解析
            flowChart       : true,  // 默认不解析
            sequenceDiagram : true,  // 默认不解析
        });
    })

    $('.menu.toggle').click(function(){
        $('.m-item').toggleClass('m-mobile-hide');
    });

    $('#payButton').popup({
        popup : $('.payQ.popup'),
        on : 'click',
        position : 'bottom center'
    });

    tocbot.init({
        // Where to render the table of contents.
        tocSelector: '.js-toc',
        // Where to grab the headings to build the table of contents.
        contentSelector: '.js-toc-content',
        // Which headings to grab inside of the contentSelector element.
        headingSelector: 'h1, h2, h3',
        // For headings inside relative or absolute positioned containers within content.
        hasInnerContainers: true,
    });

    $('.toc.button').popup({
        popup : $('.toc-container.popup'),
        on : 'click',
        position : 'left center'
    });

    $('.wechat').popup({
        popup : $('.wechat-qr'),
        position : 'left center'
    });

    var qrcode = new QRCode("qrcode", {
        text: "http://jindo.dev.naver.com/collie",
        width: 100,
        height: 100,
        colorDark : "#000000",
        colorLight : "#ffffff",
        correctLevel : QRCode.CorrectLevel.H
    });

    $('#toTop-button').click(function () {
        $(window).scrollTo(0,500);
    });

    var waypoint = new Waypoint({
        element: document.getElementById('waypoint'),
        handler: function(direction) {
            if (direction == 'down') {
                $('#toolbar').show(100);
            } else {
                $('#toolbar').hide(500);
            }
            console.log('Scrolled to waypoint!  ' + direction);
        }
    });

</script>



</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 16:12:32.965 ERROR 276 --- [http-nio-8081-exec-4] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/2] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 16:13:03.893  INFO 6308 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 6308 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:13:03.894 DEBUG 6308 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:13:03.895  INFO 6308 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:13:05.312  INFO 6308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:13:05.323  INFO 6308 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:13:05.324  INFO 6308 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:13:05.402  INFO 6308 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:13:05.402  INFO 6308 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1466 ms
2020-03-03 16:13:06.162  INFO 6308 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:13:06.269  INFO 6308 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:13:06.675  INFO 6308 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:13:06.747  INFO 6308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:13:06.750  INFO 6308 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.316 seconds (JVM running for 4.36)
2020-03-03 16:13:09.429  INFO 6308 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:13:09.465  INFO 6308 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:13:09.475  INFO 6308 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 16:13:09.503  INFO 6308 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:13:09.519  INFO 6308 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:13:09.520  WARN 6308 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:13:09.639  INFO 6308 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:13:09.814  INFO 6308 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:13:10.137 ERROR 6308 --- [http-nio-8081-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 145, Column = 13) Incomplete structure: "<div class="ui payQ flowing popup transition hidden" ">
                <div class="ui orange basic label">
                    <div class="ui images" style="font-size: inherit">
                        <div class="image">
                            <img th:src="@{/images/alipay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>支付宝</div>
                        </div>
                        <div class="image">
                            <img th:src="@{/images/wechatpay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>微信</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="ui attached positive message">
            <!--博客信息-->
            <div class="ui middle aligned grid">
                <div class="eleven wide column">
                    <ui class="list">
                        <li>作者:白峰源(联系作者)</li>
                        <li>发表时间:<span th:text="${blog.createTime}">2020-01-13</span></li>
                        <li>版权声明:自由转载-非商用-非衍生-保持署名(创意共享3.8许可证)</li>
                        <li>公众号转载:请在文末添加作者公众号二维码</li>
                    </ui>
                </div>
                <div class="five wide column">
                    <img src="../images/wechat.jpg" alt="" class="ui right floated roundedbordered image" style="width: 110px">
                </div>
            </div>
        </div>
        <div th:if="${blog.commentable==1}" id="comment-container" class="ui bottom attached segment">
            <!--留言区域列表-->
            <div class="ui teal segment">
                <div class="ui comments">
                    <h3 class="ui dividing header">Comments</h3>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/matt.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Matt</a>
                            <div class="metadata">
                                <span class="date">Today at 5:42PM</span>
                            </div>
                            <div class="text">
                                How artistic!
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/elliot.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Elliot Fu</a>
                            <div class="metadata">
                                <span class="date">Yesterday at 12:30AM</span>
                            </div>
                            <div class="text">
                                <p>This has been very useful for my research. Thanks as well!</p>
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                        <div class="comments">
                            <div class="comment">
                                <a class="avatar">
                                    <img src="/images/avatar/small/jenny.jpg">
                                </a>
                                <div class="content">
                                    <a class="author">Jenny Hess</a>
                                    <div class="metadata">
                                        <span class="date">Just now</span>
                                    </div>
                                    <div class="text">
                                        Elliot you are always so right :)
                                    </div>
                                    <div class="actions">
                                        <a class="reply">回复</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/joe.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Joe Henderson</a>
                            <div class="metadata">
                                <span class="date">5 days ago</span>
                            </div>
                            <div class="text">
                                Dude, this is awesome. Thanks so much
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui form">
                <div class="field">
                    <textarea name="content" placeholder="请输入评论信息" id="" cols="30" rows="10"></textarea>
                </div>

                <div class="fields">
                <div class="field m-mobile-wide m-margin-bottom-small">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                    <input type="text" name="nickname" placeholder="姓名">
                    </div>
                </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <div class="ui left icon input">
                            <i class="mail icon"></i>
                            <input type="text" name="email" placeholder="邮箱">
                        </div>
                    </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <button class="ui teal button m-mobile-wide"><i class="edit icon"></i>发布</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="m-padded m-right-bottom m-fixed">
<div class="ui vertical icon buttons ">
    <a href="#comment-container" type="button" class="ui teal button">留言</a>
<!--    <button class="ui wechat icon button"><i class="weixin icon"></i></button>-->
    <button id="toTop-button" class="ui icon button"><i class="chevron up icon"></i></button>
</div>
</div>


<div class="ui toc-container flowing popup transition hidden" style="width: 250px !important;">

    <ol class="js-toc">

    </ol>
</div>


<div id="qrcode" class="ui wechat-qr flowing popup transition hidden "style="width: 130px !important;">

</div>



<!--底部footer-->
<footer class="ui inverted vertical segment m-padded-tb-massive">
    <div class="ui center aligned container">
        <div class="ui inverted divided stackable grid">
            <div class="three wide column">
                <div class="ui inverted link list">
                <div class="item">
                <img src="../images/wechat.jpg" class="ui rounded image" style="width: 120px">
                </div>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">最新博客</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">联系我</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">Email:377092613@qq.com</a>
                    <a href="#" class="item">QQ:377092613</a>
                </div>
            </div>
            <div class="seven wide column">
                <h4 class="m-text-thin m-text-spaced">关于我</h4>
                <P class="m-text-thin m-text-spaced m-opacity-mini">一个热爱生活，热爱思考，专心编程的程序猿，这是我的个人博客，我希望能够通过博客记录自己学习的点点滴滴</P>
            </div>
        </div>
        <div class="ui inverted section divider"></div>
        <p class="m-text-thin m-text-spaced m-opacity-mini">Copyright©2020 Designed by Baifengyuan</p>
    </div>

</footer>


<script>

    /*var testEditor;
    $(function () {
        testEditor = editormd.markdownToHTML("content", {//注意：这里是上面DIV的id
            htmlDecode: "style,script,iframe",
            emoji: true,
            taskList: true,
            tex: true, // 默认不解析
            flowChart: true, // 默认不解析
            sequenceDiagram: true, // 默认不解析
            codeFold: true,
        });});*/

    $(function() {
        $("#content").html('<textarea id="blogcontent" name="textContent" style="display:none;"></textarea>');
        var content=$("#conten").val();//获取需要转换的内容
        $("#blogcontent").val(content);//将需要转换的内容加到转换后展示容器的textarea隐藏标签中
        var testEditormdView;
        testEditormdView = editormd.markdownToHTML("content", {
            htmlDecode      : "style,script,iframe",  // you can filter tags decode
            emoji           : true,
            taskList        : true,
            tex             : true,  // 默认不解析
            flowChart       : true,  // 默认不解析
            sequenceDiagram : true,  // 默认不解析
        });
    })

    $('.menu.toggle').click(function(){
        $('.m-item').toggleClass('m-mobile-hide');
    });

    $('#payButton').popup({
        popup : $('.payQ.popup'),
        on : 'click',
        position : 'bottom center'
    });

    tocbot.init({
        // Where to render the table of contents.
        tocSelector: '.js-toc',
        // Where to grab the headings to build the table of contents.
        contentSelector: '.js-toc-content',
        // Which headings to grab inside of the contentSelector element.
        headingSelector: 'h1, h2, h3',
        // For headings inside relative or absolute positioned containers within content.
        hasInnerContainers: true,
    });

    $('.toc.button').popup({
        popup : $('.toc-container.popup'),
        on : 'click',
        position : 'left center'
    });

    $('.wechat').popup({
        popup : $('.wechat-qr'),
        position : 'left center'
    });

    var qrcode = new QRCode("qrcode", {
        text: "http://jindo.dev.naver.com/collie",
        width: 100,
        height: 100,
        colorDark : "#000000",
        colorLight : "#ffffff",
        correctLevel : QRCode.CorrectLevel.H
    });

    $('#toTop-button').click(function () {
        $(window).scrollTo(0,500);
    });

    var waypoint = new Waypoint({
        element: document.getElementById('waypoint'),
        handler: function(direction) {
            if (direction == 'down') {
                $('#toolbar').show(100);
            } else {
                $('#toolbar').hide(500);
            }
            console.log('Scrolled to waypoint!  ' + direction);
        }
    });

</script>



</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 16:13:10.141 ERROR 6308 --- [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)] with root cause

org.attoparser.ParseException: (Line = 145, Column = 13) Incomplete structure: "<div class="ui payQ flowing popup transition hidden" ">
                <div class="ui orange basic label">
                    <div class="ui images" style="font-size: inherit">
                        <div class="image">
                            <img th:src="@{/images/alipay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>支付宝</div>
                        </div>
                        <div class="image">
                            <img th:src="@{/images/wechatpay.png}" alt="" class="ui rounded border image" style="width: 120px">
                            <div>微信</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="ui attached positive message">
            <!--博客信息-->
            <div class="ui middle aligned grid">
                <div class="eleven wide column">
                    <ui class="list">
                        <li>作者:白峰源(联系作者)</li>
                        <li>发表时间:<span th:text="${blog.createTime}">2020-01-13</span></li>
                        <li>版权声明:自由转载-非商用-非衍生-保持署名(创意共享3.8许可证)</li>
                        <li>公众号转载:请在文末添加作者公众号二维码</li>
                    </ui>
                </div>
                <div class="five wide column">
                    <img src="../images/wechat.jpg" alt="" class="ui right floated roundedbordered image" style="width: 110px">
                </div>
            </div>
        </div>
        <div th:if="${blog.commentable==1}" id="comment-container" class="ui bottom attached segment">
            <!--留言区域列表-->
            <div class="ui teal segment">
                <div class="ui comments">
                    <h3 class="ui dividing header">Comments</h3>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/matt.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Matt</a>
                            <div class="metadata">
                                <span class="date">Today at 5:42PM</span>
                            </div>
                            <div class="text">
                                How artistic!
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/elliot.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Elliot Fu</a>
                            <div class="metadata">
                                <span class="date">Yesterday at 12:30AM</span>
                            </div>
                            <div class="text">
                                <p>This has been very useful for my research. Thanks as well!</p>
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                        <div class="comments">
                            <div class="comment">
                                <a class="avatar">
                                    <img src="/images/avatar/small/jenny.jpg">
                                </a>
                                <div class="content">
                                    <a class="author">Jenny Hess</a>
                                    <div class="metadata">
                                        <span class="date">Just now</span>
                                    </div>
                                    <div class="text">
                                        Elliot you are always so right :)
                                    </div>
                                    <div class="actions">
                                        <a class="reply">回复</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <a class="avatar">
                            <img src="/images/avatar/small/joe.jpg">
                        </a>
                        <div class="content">
                            <a class="author">Joe Henderson</a>
                            <div class="metadata">
                                <span class="date">5 days ago</span>
                            </div>
                            <div class="text">
                                Dude, this is awesome. Thanks so much
                            </div>
                            <div class="actions">
                                <a class="reply">回复</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui form">
                <div class="field">
                    <textarea name="content" placeholder="请输入评论信息" id="" cols="30" rows="10"></textarea>
                </div>

                <div class="fields">
                <div class="field m-mobile-wide m-margin-bottom-small">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                    <input type="text" name="nickname" placeholder="姓名">
                    </div>
                </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <div class="ui left icon input">
                            <i class="mail icon"></i>
                            <input type="text" name="email" placeholder="邮箱">
                        </div>
                    </div>
                    <div class="field m-mobile-wide m-margin-bottom-small">
                        <button class="ui teal button m-mobile-wide"><i class="edit icon"></i>发布</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="m-padded m-right-bottom m-fixed">
<div class="ui vertical icon buttons ">
    <a href="#comment-container" type="button" class="ui teal button">留言</a>
<!--    <button class="ui wechat icon button"><i class="weixin icon"></i></button>-->
    <button id="toTop-button" class="ui icon button"><i class="chevron up icon"></i></button>
</div>
</div>


<div class="ui toc-container flowing popup transition hidden" style="width: 250px !important;">

    <ol class="js-toc">

    </ol>
</div>


<div id="qrcode" class="ui wechat-qr flowing popup transition hidden "style="width: 130px !important;">

</div>



<!--底部footer-->
<footer class="ui inverted vertical segment m-padded-tb-massive">
    <div class="ui center aligned container">
        <div class="ui inverted divided stackable grid">
            <div class="three wide column">
                <div class="ui inverted link list">
                <div class="item">
                <img src="../images/wechat.jpg" class="ui rounded image" style="width: 120px">
                </div>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">最新博客</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                    <a href="#" class="item">用户故事(User Story)</a>
                </div>
            </div>
            <div class="three wide column">
                <h4 class="m-text-thin m-text-spaced">联系我</h4>
                <div class="ui inverted link list">
                    <a href="#" class="item">Email:377092613@qq.com</a>
                    <a href="#" class="item">QQ:377092613</a>
                </div>
            </div>
            <div class="seven wide column">
                <h4 class="m-text-thin m-text-spaced">关于我</h4>
                <P class="m-text-thin m-text-spaced m-opacity-mini">一个热爱生活，热爱思考，专心编程的程序猿，这是我的个人博客，我希望能够通过博客记录自己学习的点点滴滴</P>
            </div>
        </div>
        <div class="ui inverted section divider"></div>
        <p class="m-text-thin m-text-spaced m-opacity-mini">Copyright©2020 Designed by Baifengyuan</p>
    </div>

</footer>


<script>

    /*var testEditor;
    $(function () {
        testEditor = editormd.markdownToHTML("content", {//注意：这里是上面DIV的id
            htmlDecode: "style,script,iframe",
            emoji: true,
            taskList: true,
            tex: true, // 默认不解析
            flowChart: true, // 默认不解析
            sequenceDiagram: true, // 默认不解析
            codeFold: true,
        });});*/

    $(function() {
        $("#content").html('<textarea id="blogcontent" name="textContent" style="display:none;"></textarea>');
        var content=$("#conten").val();//获取需要转换的内容
        $("#blogcontent").val(content);//将需要转换的内容加到转换后展示容器的textarea隐藏标签中
        var testEditormdView;
        testEditormdView = editormd.markdownToHTML("content", {
            htmlDecode      : "style,script,iframe",  // you can filter tags decode
            emoji           : true,
            taskList        : true,
            tex             : true,  // 默认不解析
            flowChart       : true,  // 默认不解析
            sequenceDiagram : true,  // 默认不解析
        });
    })

    $('.menu.toggle').click(function(){
        $('.m-item').toggleClass('m-mobile-hide');
    });

    $('#payButton').popup({
        popup : $('.payQ.popup'),
        on : 'click',
        position : 'bottom center'
    });

    tocbot.init({
        // Where to render the table of contents.
        tocSelector: '.js-toc',
        // Where to grab the headings to build the table of contents.
        contentSelector: '.js-toc-content',
        // Which headings to grab inside of the contentSelector element.
        headingSelector: 'h1, h2, h3',
        // For headings inside relative or absolute positioned containers within content.
        hasInnerContainers: true,
    });

    $('.toc.button').popup({
        popup : $('.toc-container.popup'),
        on : 'click',
        position : 'left center'
    });

    $('.wechat').popup({
        popup : $('.wechat-qr'),
        position : 'left center'
    });

    var qrcode = new QRCode("qrcode", {
        text: "http://jindo.dev.naver.com/collie",
        width: 100,
        height: 100,
        colorDark : "#000000",
        colorLight : "#ffffff",
        correctLevel : QRCode.CorrectLevel.H
    });

    $('#toTop-button').click(function () {
        $(window).scrollTo(0,500);
    });

    var waypoint = new Waypoint({
        element: document.getElementById('waypoint'),
        handler: function(direction) {
            if (direction == 'down') {
                $('#toolbar').show(100);
            } else {
                $('#toolbar').hide(500);
            }
            console.log('Scrolled to waypoint!  ' + direction);
        }
    });

</script>



</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 16:13:10.161 ERROR 6308 --- [http-nio-8081-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/2] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 145, col 13)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 16:13:33.635  INFO 10884 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10884 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:13:33.636 DEBUG 10884 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:13:33.638  INFO 10884 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:13:35.046  INFO 10884 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:13:35.055  INFO 10884 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:13:35.056  INFO 10884 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:13:35.131  INFO 10884 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:13:35.131  INFO 10884 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1452 ms
2020-03-03 16:13:35.886  INFO 10884 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:13:35.996  INFO 10884 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:13:36.412  INFO 10884 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:13:36.493  INFO 10884 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:13:36.496  INFO 10884 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.318 seconds (JVM running for 4.23)
2020-03-03 16:13:42.955  INFO 10884 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:13:42.955  INFO 10884 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:13:42.969  INFO 10884 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-03-03 16:13:43.000  INFO 10884 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 16:13:43.013  INFO 10884 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:13:43.014  WARN 10884 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:13:43.147  INFO 10884 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:13:43.262  INFO 10884 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:13:52.236  INFO 10884 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:13:52.261  INFO 10884 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:16:49.375  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 16:16:49.456  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:16:49.487  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=6, startRow=11, endRow=16, total=16, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=6, startRow=11, endRow=16, total=16, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:16:49.638  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:16:53.079  INFO 10884 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:16:53.145  INFO 10884 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:16:53.151  INFO 10884 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=8, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=8, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:16:53.249  INFO 10884 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:16:58.818  INFO 10884 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:16:58.819  INFO 10884 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:17:21.902  INFO 10884 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:21.937  INFO 10884 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:17:22.705  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:17:22.714  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:17:23.319  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tagpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:17:23.336  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/tags
2020-03-03 16:17:23.346  INFO 10884 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.toTags', args=[PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:23.346  INFO 10884 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:ModelAndView [view="admin/tags"; model={pageInfo=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}}]
2020-03-03 16:17:23.944  INFO 10884 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:23.976  INFO 10884 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:17:25.686  INFO 10884 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:25.716  INFO 10884 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:17:27.473  INFO 10884 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:17:27.473  INFO 10884 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:17:38.189  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:38.218  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:17:38.961  INFO 10884 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/page/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TypewithUserController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:17:38.969  INFO 10884 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/types
2020-03-03 16:17:40.164  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tagpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.doPage', args=[1, 5, true, {}]}
2020-03-03 16:17:40.180  INFO 10884 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/tags
2020-03-03 16:17:40.187  INFO 10884 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.TagsController.toTags', args=[PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:40.187  INFO 10884 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:ModelAndView [view="admin/tags"; model={pageInfo=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=6, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}}]
2020-03-03 16:17:41.222  INFO 10884 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1c50f54]}
2020-03-03 16:17:41.250  INFO 10884 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:18:01.823  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@130161a, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1596bb6]}
2020-03-03 16:18:01.831  INFO 10884 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8080/img/upload/1583223481827Headportrait.jpg}
2020-03-03 16:20:59.101  INFO 11952 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11952 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:20:59.102 DEBUG 11952 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:20:59.102  INFO 11952 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:21:00.492  INFO 11952 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:21:00.500  INFO 11952 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:21:00.501  INFO 11952 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:21:00.576  INFO 11952 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:21:00.577  INFO 11952 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1436 ms
2020-03-03 16:21:01.285  INFO 11952 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:21:01.386  INFO 11952 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:21:01.785  INFO 11952 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:21:01.863  INFO 11952 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:21:01.866  INFO 11952 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.248 seconds (JVM running for 4.099)
2020-03-03 16:21:16.319  INFO 11952 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:21:16.319  INFO 11952 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:21:16.328  INFO 11952 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 16:21:16.363  INFO 11952 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:21:16.376  INFO 11952 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:21:20.865  INFO 11952 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:21:20.867  WARN 11952 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:21:20.987  INFO 11952 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:21:22.395  INFO 11952 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@afc051]}
2020-03-03 16:21:22.469  INFO 11952 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:21:33.228  INFO 11952 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19eeec7, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@150a4a2]}
2020-03-03 16:21:33.235  INFO 11952 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583223693232QQ截图20200229224954.png}
2020-03-03 16:22:04.224  INFO 11952 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:22:04.248  INFO 11952 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:23:31.219  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12368 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:23:31.220 DEBUG 12368 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:23:31.220  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:23:32.591  INFO 12368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:23:32.600  INFO 12368 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:23:32.600  INFO 12368 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:23:32.677  INFO 12368 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:23:32.677  INFO 12368 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1416 ms
2020-03-03 16:23:33.388  INFO 12368 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:23:33.487  INFO 12368 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:23:33.885  INFO 12368 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:23:33.956  INFO 12368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:23:33.959  INFO 12368 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.201 seconds (JVM running for 4.038)
2020-03-03 16:23:56.603  INFO 12368 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:23:56.604  INFO 12368 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:23:56.617  INFO 12368 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-03-03 16:23:56.647  INFO 12368 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:23:56.659  INFO 12368 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:23:56.659  WARN 12368 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:23:56.788  INFO 12368 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:23:56.913  INFO 12368 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:24:19.781  INFO 12368 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:24:19.809  INFO 12368 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:24:22.124  INFO 12368 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:24:22.152  INFO 12368 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:25:56.316  INFO 1728 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 1728 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:25:56.317 DEBUG 1728 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:25:56.317  INFO 1728 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:25:57.678  INFO 1728 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:25:57.686  INFO 1728 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:25:57.686  INFO 1728 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:25:57.763  INFO 1728 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:25:57.763  INFO 1728 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1403 ms
2020-03-03 16:25:58.473  INFO 1728 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:25:58.575  INFO 1728 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:25:58.968  INFO 1728 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:25:59.047  INFO 1728 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:25:59.050  INFO 1728 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.202 seconds (JVM running for 4.637)
2020-03-03 16:26:27.965  INFO 1728 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:26:27.965  INFO 1728 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:26:27.975  INFO 1728 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 16:26:28.003  INFO 1728 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:26:28.020  INFO 1728 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:26:28.021  WARN 1728 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:26:28.147  INFO 1728 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:26:28.320  INFO 1728 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:26:28.744 ERROR 1728 --- [http-nio-8081-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "type.id" (template: "blog" - line 138, col 113)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "type.id" (template: "blog" - line 138, col 113)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 78 common frames omitted

2020-03-03 16:26:28.754 ERROR 1728 --- [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 16:26:28.798 ERROR 1728 --- [http-nio-8081-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/3] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 16:27:36.484  INFO 2540 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2540 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:27:36.488 DEBUG 2540 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:27:36.488  INFO 2540 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:27:37.868  INFO 2540 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:27:37.878  INFO 2540 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:27:37.879  INFO 2540 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:27:37.956  INFO 2540 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:27:37.956  INFO 2540 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1432 ms
2020-03-03 16:27:38.737  INFO 2540 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:27:38.857  INFO 2540 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:27:39.317  INFO 2540 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:27:39.393  INFO 2540 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:27:39.396  INFO 2540 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.402 seconds (JVM running for 4.256)
2020-03-03 16:27:41.955  INFO 2540 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:27:41.955  INFO 2540 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:27:41.972  INFO 2540 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-03-03 16:27:42.001  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:27:42.012  INFO 2540 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:27:42.013  WARN 2540 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:27:42.133  INFO 2540 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:27:42.249  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:28:27.099  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:28:27.127  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:28:28.023  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:28:28.066  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:28:28.932  INFO 2540 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 16:28:28.972  INFO 2540 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 16:28:30.954  INFO 2540 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 2, {}, org.apache.catalina.session.StandardSessionFacade@5e94a9]}
2020-03-03 16:28:31.067  INFO 2540 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 16:28:31.103  INFO 2540 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=9, startRow=1, endRow=9, total=9, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=9, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@5e94a9, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=9, startRow=1, endRow=9, total=9, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=9, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:28:31.155  INFO 2540 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 16:28:35.248  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 3, {}, org.apache.catalina.session.StandardSessionFacade@5e94a9]}
2020-03-03 16:28:35.306  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 16:28:35.312  INFO 2540 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=8, startRow=1, endRow=8, total=8, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=8, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@5e94a9, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=8, startRow=1, endRow=8, total=8, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=8, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:28:35.342  INFO 2540 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 16:28:40.828  INFO 2540 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:28:40.830  INFO 2540 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:28:40.843  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:28:40.892  INFO 2540 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:28:40.898  INFO 2540 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:28:41.062  INFO 2540 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:33:18.136  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:33:18.137  INFO 2540 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:33:24.835  INFO 2540 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@5e94a9]}
2020-03-03 16:33:24.860  INFO 2540 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:33:37.784  INFO 2540 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19be4af, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@74383c]}
2020-03-03 16:33:37.794  INFO 2540 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583224417789面试.png}
2020-03-03 16:48:21.481  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2084 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:48:21.482 DEBUG 2084 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:48:21.482  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:48:22.821  INFO 2084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:48:22.829  INFO 2084 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:48:22.829  INFO 2084 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:48:22.901  INFO 2084 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:48:22.902  INFO 2084 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1382 ms
2020-03-03 16:48:23.619  INFO 2084 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:48:23.718  INFO 2084 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:48:24.114  INFO 2084 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:48:24.182  INFO 2084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:48:24.185  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.185 seconds (JVM running for 4.02)
2020-03-03 16:48:38.075  INFO 2084 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:48:38.075  INFO 2084 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:48:38.088  INFO 2084 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-03-03 16:48:38.122  INFO 2084 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:48:38.128  INFO 2084 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:48:44.125  INFO 2084 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:48:44.126  WARN 2084 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:48:44.241  INFO 2084 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:48:45.755  INFO 2084 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@225b0a]}
2020-03-03 16:48:45.839  INFO 2084 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:48:56.791  INFO 2084 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@10bdd09, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1380cef]}
2020-03-03 16:48:56.797  INFO 2084 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/manage/img/upload/1583225336795Headportrait.jpg}
2020-03-03 16:49:44.878  INFO 2084 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 16:49:44.879  INFO 2084 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 16:49:44.943  INFO 2084 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 16:49:45.351  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2084 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:49:45.351 DEBUG 2084 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:49:45.351  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:49:45.755  WARN 2084 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 16:49:45.793  INFO 2084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:49:45.794  INFO 2084 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:49:45.794  INFO 2084 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:49:45.809  INFO 2084 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:49:45.809  INFO 2084 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 455 ms
2020-03-03 16:49:46.174  INFO 2084 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:49:46.229  INFO 2084 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:49:46.522  INFO 2084 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:49:46.572  INFO 2084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:49:46.573  INFO 2084 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.263 seconds (JVM running for 86.387)
2020-03-03 16:49:46.575  INFO 2084 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 16:51:59.159  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 4440 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:51:59.160 DEBUG 4440 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:51:59.160  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:52:00.537  INFO 4440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:52:00.545  INFO 4440 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:52:00.546  INFO 4440 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:52:00.621  INFO 4440 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:52:00.621  INFO 4440 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1422 ms
2020-03-03 16:52:01.355  INFO 4440 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:52:01.455  INFO 4440 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:52:01.856  INFO 4440 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:52:01.923  INFO 4440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:52:01.926  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.259 seconds (JVM running for 4.096)
2020-03-03 16:52:14.600  INFO 4440 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 16:52:15.001  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 4440 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:52:15.002 DEBUG 4440 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:52:15.002  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:52:15.362  WARN 4440 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 16:52:15.397  INFO 4440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:52:15.398  INFO 4440 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:52:15.398  INFO 4440 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:52:15.417  INFO 4440 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:52:15.417  INFO 4440 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 412 ms
2020-03-03 16:52:15.754  INFO 4440 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:52:15.808  INFO 4440 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:52:16.092  INFO 4440 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:52:16.136  INFO 4440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:52:16.137  INFO 4440 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.172 seconds (JVM running for 18.303)
2020-03-03 16:52:16.139  INFO 4440 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 16:52:18.134  INFO 4440 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:52:18.135  INFO 4440 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:52:18.149  INFO 4440 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-03-03 16:54:27.702  INFO 11440 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11440 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:54:27.703 DEBUG 11440 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:54:27.703  INFO 11440 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:54:29.114  INFO 11440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:54:29.123  INFO 11440 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:54:29.123  INFO 11440 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:54:29.198  INFO 11440 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:54:29.199  INFO 11440 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1442 ms
2020-03-03 16:54:29.937  INFO 11440 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:54:30.035  INFO 11440 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:54:30.435  INFO 11440 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:54:30.503  INFO 11440 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:54:30.506  INFO 11440 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.288 seconds (JVM running for 4.313)
2020-03-03 16:54:40.737  INFO 11440 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:54:40.737  INFO 11440 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:54:40.748  INFO 11440 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 16:55:27.099  INFO 11696 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11696 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:55:27.100 DEBUG 11696 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:55:27.100  INFO 11696 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:55:28.512  INFO 11696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:55:28.522  INFO 11696 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:55:28.522  INFO 11696 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:55:28.600  INFO 11696 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:55:28.600  INFO 11696 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1460 ms
2020-03-03 16:55:29.342  INFO 11696 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:55:29.443  INFO 11696 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:55:29.845  INFO 11696 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:55:29.923  INFO 11696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:55:29.926  INFO 11696 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.331 seconds (JVM running for 4.281)
2020-03-03 16:55:39.515  INFO 11696 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:55:39.515  INFO 11696 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:55:39.524  INFO 11696 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 16:56:19.128  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 6864 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 16:56:19.129 DEBUG 6864 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 16:56:19.129  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 16:56:20.495  INFO 6864 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 16:56:20.503  INFO 6864 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 16:56:20.504  INFO 6864 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 16:56:20.577  INFO 6864 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 16:56:20.577  INFO 6864 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1408 ms
2020-03-03 16:56:21.289  INFO 6864 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 16:56:21.386  INFO 6864 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 16:56:21.779  INFO 6864 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 16:56:21.851  INFO 6864 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 16:56:21.853  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.187 seconds (JVM running for 4.075)
2020-03-03 16:56:37.837  INFO 6864 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 16:56:37.837  INFO 6864 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 16:56:37.846  INFO 6864 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 16:56:37.880  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 16:56:37.886  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 16:56:42.868  INFO 6864 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 16:56:42.870  WARN 6864 --- [http-nio-8081-exec-5] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 16:56:42.984  INFO 6864 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 16:56:44.381  INFO 6864 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@f89321]}
2020-03-03 16:56:44.462  INFO 6864 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:57:04.480  INFO 6864 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@115e868, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@cbb6ed]}
2020-03-03 16:57:04.488  INFO 6864 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583225824486英语四级.png}
2020-03-03 16:57:12.712  INFO 6864 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f51177, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@f786ed]}
2020-03-03 16:57:12.715  INFO 6864 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583225832712英语四级.png}
2020-03-03 16:58:02.501  INFO 6864 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=null, title=哈哈哈哈老子四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583225832712英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈，老子四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2,3, 2, org.apache.catalina.session.StandardSessionFacade@f89321, create]}
2020-03-03 16:58:02.558  INFO 6864 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/4/5/true
2020-03-03 16:58:02.566  INFO 6864 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@f89321]}
2020-03-03 16:58:02.591  INFO 6864 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 16:58:10.584  INFO 6864 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:58:10.585  INFO 6864 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:58:10.596  INFO 6864 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:58:10.653  INFO 6864 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:58:10.660  INFO 6864 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:58:10.762  INFO 6864 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:58:11.464  INFO 6864 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:58:11.466  INFO 6864 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 16:58:11.476  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 16:58:11.516  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 16:58:11.526  INFO 6864 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=16, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=16, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 16:58:11.619  INFO 6864 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 16:58:14.404  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/19/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[19, 4, 1, org.apache.catalina.session.StandardSessionFacade@f89321]}
2020-03-03 16:58:14.412  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 16:58:29.943  INFO 6864 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=19, title=哈哈哈哈老子四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583225832712英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈，老子四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2,3, 2, org.apache.catalina.session.StandardSessionFacade@f89321, update]}
2020-03-03 16:58:30.036 ERROR 6864 --- [http-nio-8081-exec-3] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$2cc94c71.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:58)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$fa6a3d27.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 16:58:30.038  WARN 6864 --- [http-nio-8081-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 17:01:30.447  INFO 14192 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 14192 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 17:01:30.448 DEBUG 14192 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 17:01:30.448  INFO 14192 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 17:01:31.866  INFO 14192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 17:01:31.875  INFO 14192 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 17:01:31.875  INFO 14192 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 17:01:31.952  INFO 14192 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 17:01:31.952  INFO 14192 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1462 ms
2020-03-03 17:01:32.702  INFO 14192 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 17:01:32.807  INFO 14192 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 17:01:33.225  INFO 14192 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 17:01:33.296  INFO 14192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 17:01:33.299  INFO 14192 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.351 seconds (JVM running for 4.284)
2020-03-03 17:01:42.096  INFO 14192 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 17:01:42.097  INFO 14192 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 17:01:42.117  INFO 14192 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 20 ms
2020-03-03 17:01:45.259  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 17:01:45.265  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 17:01:50.350  INFO 14192 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 17:01:50.351  WARN 14192 --- [http-nio-8081-exec-5] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 17:01:50.463  INFO 14192 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 17:01:51.780  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:01:51.864  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:01:53.775  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:01:53.813  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:01:54.612  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:01:54.650  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:11.821  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@cb53c5, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1b9adf4]}
2020-03-03 17:02:11.827  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583226131824英语四级.png}
2020-03-03 17:02:32.841  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=null, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=false, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@170bf07, create]}
2020-03-03 17:02:32.892  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/4/5/true
2020-03-03 17:02:32.900  INFO 14192 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:32.928  INFO 14192 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:35.093  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:35.123  INFO 14192 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:36.517  INFO 14192 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:36.546  INFO 14192 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:37.256  INFO 14192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:37.277  INFO 14192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:37.594  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:37.617  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:38.046  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:38.073  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:39.088  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:39.109  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:39.610  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:39.636  INFO 14192 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:40.154  INFO 14192 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:40.179  INFO 14192 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:40.565  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:40.589  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:40.865  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:40.889  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:41.622  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:41.647  INFO 14192 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:42.323  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:42.355  INFO 14192 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:43.024  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:43.049  INFO 14192 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:43.765  INFO 14192 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:43.785  INFO 14192 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:02:47.271  INFO 14192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@170bf07]}
2020-03-03 17:02:47.283  INFO 14192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 17:02:52.045  INFO 14192 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@170bf07, update]}
2020-03-03 17:02:52.056 ERROR 14192 --- [http-nio-8081-exec-3] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$6c07b89c.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:58)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$1c7338ab.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 17:02:52.059  WARN 14192 --- [http-nio-8081-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 17:04:22.924  INFO 13056 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13056 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 17:04:22.925 DEBUG 13056 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 17:04:22.925  INFO 13056 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 17:04:24.277  INFO 13056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 17:04:24.286  INFO 13056 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 17:04:24.286  INFO 13056 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 17:04:24.361  INFO 13056 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 17:04:24.362  INFO 13056 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1398 ms
2020-03-03 17:04:25.092  INFO 13056 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 17:04:25.194  INFO 13056 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 17:04:25.597  INFO 13056 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 17:04:25.664  INFO 13056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 17:04:25.667  INFO 13056 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.229 seconds (JVM running for 4.088)
2020-03-03 17:04:38.659  INFO 13056 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 17:04:38.659  INFO 13056 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 17:04:38.669  INFO 13056 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 17:04:38.703  INFO 13056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 17:04:38.709  INFO 13056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 17:04:43.544  INFO 13056 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 17:04:43.545  WARN 13056 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 17:04:43.659  INFO 13056 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 17:04:45.166  INFO 13056 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:45.248  INFO 13056 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:46.604  INFO 13056 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:46.638  INFO 13056 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:47.447  INFO 13056 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:47.479  INFO 13056 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:48.940  INFO 13056 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:48.974  INFO 13056 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:49.339  INFO 13056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:49.366  INFO 13056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:50.525  INFO 13056 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:50.553  INFO 13056 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:04:52.136  INFO 13056 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@a2262e]}
2020-03-03 17:04:52.150  INFO 13056 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 17:04:57.291  INFO 13056 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@a2262e, update]}
2020-03-03 17:04:57.304 ERROR 13056 --- [http-nio-8081-exec-6] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$65d602ac.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:59)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$783292a5.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 17:04:57.305  WARN 13056 --- [http-nio-8081-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 17:05:38.483  INFO 3292 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 3292 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 17:05:38.484 DEBUG 3292 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 17:05:38.484  INFO 3292 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 17:05:39.892  INFO 3292 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 17:05:39.901  INFO 3292 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 17:05:39.901  INFO 3292 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 17:05:40.015  INFO 3292 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 17:05:40.016  INFO 3292 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1468 ms
2020-03-03 17:05:40.730  INFO 3292 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 17:05:40.857  INFO 3292 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 17:05:41.268  INFO 3292 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 17:05:41.337  INFO 3292 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 17:05:41.339  INFO 3292 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.37 seconds (JVM running for 4.227)
2020-03-03 17:05:47.377  INFO 3292 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 17:05:47.378  INFO 3292 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 17:05:47.387  INFO 3292 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 17:05:47.423  INFO 3292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 17:05:47.429  INFO 3292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 17:05:51.377  INFO 3292 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 17:05:51.378  WARN 3292 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 17:05:51.494  INFO 3292 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 17:05:52.702  INFO 3292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:05:52.788  INFO 3292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:05:55.469  INFO 3292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/1/1/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[1, 1, 1, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:05:55.490  INFO 3292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 17:05:59.933  INFO 3292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:05:59.969  INFO 3292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:06:01.118  INFO 3292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:06:01.150  INFO 3292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:06:01.568  INFO 3292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:06:01.592  INFO 3292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:06:01.906  INFO 3292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:06:01.939  INFO 3292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:06:02.577  INFO 3292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:06:02.606  INFO 3292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 17:06:03.997  INFO 3292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@777e1a]}
2020-03-03 17:06:04.004  INFO 3292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 17:06:29.636  INFO 3292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@777e1a, update]}
2020-03-03 17:06:29.653 ERROR 3292 --- [http-nio-8081-exec-7] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$8d7315aa.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:59)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$1eb3b62c.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 17:06:29.654  WARN 3292 --- [http-nio-8081-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 18:15:48.458  INFO 3292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 18:15:48.459  INFO 3292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 18:17:54.258  INFO 12244 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12244 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:17:54.258 DEBUG 12244 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:17:54.300  INFO 12244 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:17:55.632  INFO 12244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:17:55.640  INFO 12244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:17:55.640  INFO 12244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:17:55.713  INFO 12244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:17:55.713  INFO 12244 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1378 ms
2020-03-03 18:17:56.429  INFO 12244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:17:56.530  INFO 12244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:17:56.928  INFO 12244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:17:57.001  INFO 12244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:17:57.003  INFO 12244 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.214 seconds (JVM running for 4.056)
2020-03-03 18:18:08.703  INFO 12244 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:18:08.703  INFO 12244 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:18:08.718  INFO 12244 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-03-03 18:18:08.739  INFO 12244 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 18:18:08.744  INFO 12244 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 18:18:12.829  INFO 12244 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:18:12.831  WARN 12244 --- [http-nio-8081-exec-5] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:18:12.944  INFO 12244 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:18:14.309  INFO 12244 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:14.393  INFO 12244 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:20.023  INFO 12244 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:20.063  INFO 12244 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:21.183  INFO 12244 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:21.215  INFO 12244 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:21.669  INFO 12244 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:21.698  INFO 12244 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:22.590  INFO 12244 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:22.615  INFO 12244 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:23.216  INFO 12244 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:23.242  INFO 12244 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:18:24.394  INFO 12244 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@be36d0]}
2020-03-03 18:18:24.407  INFO 12244 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:18:30.762  INFO 12244 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@be36d0, update]}
2020-03-03 18:18:30.779 ERROR 12244 --- [http-nio-8081-exec-4] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$50ccaa23.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:60)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$fc8f0e91.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 18:18:30.784  WARN 12244 --- [http-nio-8081-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 18:20:07.309  INFO 12244 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=null, title=null, content=null, firstPicture=null, description=null, flag=null, views=null, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=null, updateTime=null, type=null, tags=null, userid=null, comments=null), null, null, org.apache.catalina.session.StandardSessionFacade@be36d0, null]}
2020-03-03 18:20:07.313 ERROR 12244 --- [http-nio-8081-exec-5] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

java.lang.NullPointerException: null
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:41)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$fc8f0e91.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 18:20:07.314  WARN 12244 --- [http-nio-8081-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-03-03 18:23:26.805  INFO 13956 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13956 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:23:26.806 DEBUG 13956 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:23:26.808  INFO 13956 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:23:28.224  INFO 13956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:23:28.233  INFO 13956 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:23:28.233  INFO 13956 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:23:28.308  INFO 13956 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:23:28.309  INFO 13956 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1460 ms
2020-03-03 18:23:29.076  INFO 13956 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:23:29.184  INFO 13956 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:23:29.595  INFO 13956 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:23:29.674  INFO 13956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:23:29.677  INFO 13956 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.328 seconds (JVM running for 4.186)
2020-03-03 18:23:32.305  INFO 13956 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:23:32.306  INFO 13956 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:23:32.316  INFO 13956 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 18:23:32.348  INFO 13956 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 18:23:32.360  INFO 13956 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 18:23:39.530  INFO 13956 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:23:39.531  WARN 13956 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:23:39.642  INFO 13956 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:23:41.139  INFO 13956 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@db9166]}
2020-03-03 18:23:41.220  INFO 13956 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:23:47.655  INFO 13956 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@db9166]}
2020-03-03 18:23:47.692  INFO 13956 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:23:48.227  INFO 13956 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@db9166]}
2020-03-03 18:23:48.257  INFO 13956 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:23:48.811  INFO 13956 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@db9166]}
2020-03-03 18:23:48.847  INFO 13956 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:23:50.096  INFO 13956 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@db9166]}
2020-03-03 18:23:50.110  INFO 13956 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:23:57.816  INFO 13956 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@db9166, update]}
2020-03-03 18:23:57.835 ERROR 13956 --- [http-nio-8081-exec-2] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/manage/insertblog,Exception: {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.updateBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.updateBlog(Unknown Source)
	at com.myblog.service.BlogServiceImpl.updateBlog(BlogServiceImpl.java:39)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$25ee40ba.updateBlog(<generated>)
	at com.myblog.controller.BlogInputController.insertblog(BlogInputController.java:60)
	at com.myblog.controller.BlogInputController$$FastClassBySpringCGLIB$$cc884585.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogInputController$$EnhancerBySpringCGLIB$$b822740b.insertblog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2020-03-03 18:23:57.876  WARN 13956 --- [http-nio-8081-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'description' not found. Available parameters are [typeid, blog, param3, param1, tags, param2]]
2020-03-03 18:26:18.015  INFO 1776 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 1776 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:26:18.016 DEBUG 1776 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:26:18.016  INFO 1776 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:26:19.411  INFO 1776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:26:19.419  INFO 1776 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:26:19.419  INFO 1776 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:26:19.493  INFO 1776 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:26:19.493  INFO 1776 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1439 ms
2020-03-03 18:26:20.379  INFO 1776 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:26:20.497  INFO 1776 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:26:20.970  INFO 1776 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:26:21.051  INFO 1776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:26:21.054  INFO 1776 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.537 seconds (JVM running for 4.467)
2020-03-03 18:26:39.033  INFO 1776 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:26:39.033  INFO 1776 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:26:39.043  INFO 1776 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 18:26:39.075  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 18:26:39.080  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 18:26:44.225  INFO 1776 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:26:44.226  WARN 1776 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:26:44.351  INFO 1776 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:26:45.662  INFO 1776 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:45.744  INFO 1776 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:26:51.894  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:51.925  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:26:52.299  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:52.328  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:26:52.850  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:52.889  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:26:54.440  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:54.453  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:26:57.763  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@1d20471, update]}
2020-03-03 18:26:57.782  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 18:26:57.791  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:26:57.822  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:27:01.483  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:27:01.484  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:27:01.493  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:27:01.540  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:27:01.546  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:27:01.633  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:27:02.459  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:27:02.460  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:27:02.472  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:27:02.512  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:27:02.519  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:27:02.605  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:27:04.467  INFO 1776 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 18:27:04.494  INFO 1776 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:27:04.504  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:57:26, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:57:26, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:27:04.597  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:27:10.346  INFO 1776 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:27:10.363  INFO 1776 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:28:00.004  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:00.027  INFO 1776 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:00.398  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:00.421  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:00.932  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:00.962  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:01.403  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:01.432  INFO 1776 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:02.454  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:02.463  INFO 1776 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:28:06.517  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@1d20471, update]}
2020-03-03 18:28:06.532  INFO 1776 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 18:28:06.539  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:06.562  INFO 1776 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:08.638  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:08.660  INFO 1776 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:09.682  INFO 1776 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:09.708  INFO 1776 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:10.292  INFO 1776 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:10.320  INFO 1776 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:10.869  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:10.891  INFO 1776 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:28:12.071  INFO 1776 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@1d20471]}
2020-03-03 18:28:12.087  INFO 1776 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:30:07.685  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10328 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:30:07.687 DEBUG 10328 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:30:07.687  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:30:09.596  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:30:09.628  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:30:09.629  INFO 10328 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:30:09.759  INFO 10328 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:30:09.759  INFO 10328 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2034 ms
2020-03-03 18:30:10.854  INFO 10328 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:30:10.966  INFO 10328 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:30:11.423  INFO 10328 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:30:11.515  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:30:11.518  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 4.444 seconds (JVM running for 5.814)
2020-03-03 18:30:17.902  INFO 10328 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:30:17.902  INFO 10328 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:30:17.916  INFO 10328 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-03-03 18:30:17.949  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:17.955  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:30:17.989  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:30:17.995  INFO 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:30:17.996  WARN 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:30:18.105  INFO 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:30:18.334  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:30:18.353  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:18.489  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:30:20.452  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 18:30:20.452  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 18:30:27.825  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:27.854  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:29.217  INFO 10328 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:29.255  INFO 10328 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:29.698  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:29.722  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:30.098  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:30.129  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:30.562  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:30.589  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:30.868  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:30.889  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:31.930  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/20/4/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[20, 4, 1, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:31.943  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 18:30:36.045  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 2, 6, org.apache.catalina.session.StandardSessionFacade@17dd12c, update]}
2020-03-03 18:30:36.058  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 18:30:36.068  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@17dd12c]}
2020-03-03 18:30:36.092  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 18:30:38.391  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:38.392  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:30:38.403  INFO 10328 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:30:38.444  INFO 10328 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:30:38.449  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:38.575  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:30:43.974  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 18:30:44.011  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:30:44.017  INFO 10328 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:44.105  INFO 10328 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:30:51.776  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 18:30:51.808  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:30:51.816  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:30:51.903  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:30:53.842  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:30:53.857  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:31:23.190  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:31:23.191  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:31:23.201  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:31:23.237  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:31:23.243  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:31:23.319  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:31:25.151  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 18:31:25.192  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:31:25.197  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:31:25.279  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:31:26.644  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:31:26.656  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:32:08.950  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:32:08.967  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:32:10.436  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:32:10.452  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:33:15.577  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:33:15.578  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:33:15.590  INFO 10328 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:33:15.622  INFO 10328 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:33:15.629  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:33:15.702  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:33:16.963  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:33:16.983  INFO 10328 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:33:17.512  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:33:17.528  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:37:15.887  INFO 10328 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 18:37:15.889  INFO 10328 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 18:37:15.903  INFO 10328 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 18:37:16.326  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10328 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:37:16.326 DEBUG 10328 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:37:16.326  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:37:16.841  WARN 10328 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 18:37:16.876  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:37:16.877  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:37:16.877  INFO 10328 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:37:16.892  INFO 10328 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:37:16.892  INFO 10328 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 562 ms
2020-03-03 18:37:17.283  INFO 10328 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:37:17.349  INFO 10328 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:37:17.695  INFO 10328 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:37:17.736  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:37:17.736  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.459 seconds (JVM running for 431.926)
2020-03-03 18:37:17.738  INFO 10328 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 18:39:33.296  INFO 10328 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:39:33.298  INFO 10328 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:39:33.312  INFO 10328 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-03-03 18:39:33.318  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:39:33.327  INFO 10328 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:39:33.350  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:39:33.350  INFO 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-03-03 18:39:33.350  WARN 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:39:33.361  INFO 10328 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-03-03 18:39:33.403  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:39:33.411  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=15, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=null), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=17, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=null), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=null), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=null)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:39:33.514  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:39:35.088  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 18:39:35.107  INFO 10328 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:39:41.553  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/3', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[3, {}]}
2020-03-03 18:39:41.568  INFO 10328 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:39:45.042  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 18:39:45.060  INFO 10328 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:39:52.930  INFO 10328 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/7', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[7, {}]}
2020-03-03 18:39:52.949  INFO 10328 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:39:56.741  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-03 18:39:56.782  INFO 10328 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:39:56.788  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=null), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=null), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=null)], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:39:56.870  INFO 10328 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:39:58.975  INFO 10328 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:39:58.986  INFO 10328 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:48:09.010  INFO 10328 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 18:48:09.011  INFO 10328 --- [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2020-03-03 18:48:09.018  INFO 10328 --- [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2020-03-03 18:48:09.422  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10328 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:48:09.422 DEBUG 10328 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:48:09.422  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:48:09.808  WARN 10328 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 18:48:09.840  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:48:09.841  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:48:09.841  INFO 10328 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:48:09.856  INFO 10328 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:48:09.856  INFO 10328 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 431 ms
2020-03-03 18:48:09.998  WARN 10328 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
2020-03-03 18:48:09.998  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-03 18:48:10.006  INFO 10328 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-03 18:48:10.076 ERROR 10328 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b$$FastClassBySpringCGLIB$$d526396f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 5; 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:263)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:80)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:592)
	... 75 common frames omitted
Caused by: org.xml.sax.SAXParseException: 元素类型 "collection" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1394)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1324)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2784)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:261)
	... 78 common frames omitted

2020-03-03 18:49:29.280  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10328 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:49:29.280 DEBUG 10328 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:49:29.280  INFO 10328 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:49:29.626  WARN 10328 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 18:49:29.654  INFO 10328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:49:29.655  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:49:29.656  INFO 10328 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:49:29.669  INFO 10328 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-03 18:49:29.670  INFO 10328 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 387 ms
2020-03-03 18:49:29.746  WARN 10328 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
2020-03-03 18:49:29.746  INFO 10328 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-03 18:49:29.752  INFO 10328 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-03 18:49:29.753 ERROR 10328 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogRepository'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogRepository' defined in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\com\myblog\dao\BlogRepository.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b$$FastClassBySpringCGLIB$$d526396f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43861c0b.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
Caused by: java.nio.file.AccessDeniedException: D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.Files.newByteChannel(Files.java:361)
	at java.nio.file.Files.newByteChannel(Files.java:407)
	at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384)
	at java.nio.file.Files.newInputStream(Files.java:152)
	at org.springframework.core.io.FileSystemResource.getInputStream(FileSystemResource.java:176)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:591)
	... 75 common frames omitted

2020-03-03 18:52:10.458  INFO 7944 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7944 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:52:10.459 DEBUG 7944 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:52:10.459  INFO 7944 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:52:11.841  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:52:11.849  INFO 7944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:52:11.850  INFO 7944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:52:11.929  INFO 7944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:52:11.929  INFO 7944 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1432 ms
2020-03-03 18:52:12.679  INFO 7944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:52:12.777  INFO 7944 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:52:13.178  INFO 7944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:52:13.245  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:52:13.248  INFO 7944 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.259 seconds (JVM running for 4.108)
2020-03-03 18:52:27.727  INFO 7944 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:52:27.727  INFO 7944 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:52:27.739  INFO 7944 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-03-03 18:52:27.779  INFO 7944 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:52:27.785  INFO 7944 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 18:52:27.813  INFO 7944 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:52:27.826  INFO 7944 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:52:27.827  WARN 7944 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:52:27.957  INFO 7944 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:52:28.345 ERROR 7944 --- [http-nio-8081-exec-2] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/1/10/true,Exception: {}

org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
### The error may exist in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: /*resultMap="convertBlog"*/         SELECT t_blog.id ,id,email,avatar,createTime,blogid,replyComment FROM t_blog,t_comment WHERE t_blog.`id`=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
; Column 'id' in field list is ambiguous; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getAllBlogForpublished(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.getAllBlogForpublished(Unknown Source)
	at com.myblog.service.BlogServiceImpl.getAllBlogForpublished(BlogServiceImpl.java:79)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$bec5bee2.getAllBlogForpublished(<generated>)
	at com.myblog.controller.BlogController.toBlogIndex(BlogController.java:106)
	at com.myblog.controller.BlogController$$FastClassBySpringCGLIB$$a4142dbd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogController$$EnhancerBySpringCGLIB$$42a3fbf8.toBlogIndex(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy115.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.loader.ResultLoader.selectList(ResultLoader.java:81)
	at org.apache.ibatis.executor.loader.ResultLoader.loadResult(ResultLoader.java:70)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNestedQueryMappingValue(DefaultResultSetHandler.java:760)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getPropertyMappingValue(DefaultResultSetHandler.java:465)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:441)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:404)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:354)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:328)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:301)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:194)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy113.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 99 common frames omitted

2020-03-03 18:52:28.347  WARN 7944 --- [http-nio-8081-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
### The error may exist in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: /*resultMap="convertBlog"*/         SELECT t_blog.id ,id,email,avatar,createTime,blogid,replyComment FROM t_blog,t_comment WHERE t_blog.`id`=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
; Column 'id' in field list is ambiguous; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous]
2020-03-03 18:53:41.705  INFO 12496 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12496 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:53:41.706 DEBUG 12496 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:53:41.706  INFO 12496 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:53:43.031  INFO 12496 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:53:43.039  INFO 12496 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:53:43.040  INFO 12496 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:53:43.114  INFO 12496 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:53:43.115  INFO 12496 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1370 ms
2020-03-03 18:53:43.865  INFO 12496 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:53:43.976  INFO 12496 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:53:44.402  INFO 12496 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:53:44.471  INFO 12496 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:53:44.474  INFO 12496 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.268 seconds (JVM running for 4.104)
2020-03-03 18:53:47.439  INFO 12496 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:53:47.440  INFO 12496 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:53:47.453  INFO 12496 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-03-03 18:53:47.488  INFO 12496 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:53:47.507  INFO 12496 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:53:47.508  WARN 12496 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:53:47.635  INFO 12496 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:53:47.662 ERROR 12496 --- [http-nio-8081-exec-1] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/1/10/true,Exception: {}

org.apache.ibatis.builder.IncompleteElementException: Could not find result map 'com.myblog.dao.BlogRepository.Comment' referenced from 'com.myblog.dao.BlogRepository.getBlogComments'
	at org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(MapperBuilderAssistant.java:341)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:285)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:113)
	at org.apache.ibatis.session.Configuration.lambda$buildAllStatements$2(Configuration.java:816)
	at java.util.Collection.removeIf(Collection.java:414)
	at org.apache.ibatis.session.Configuration.buildAllStatements(Configuration.java:815)
	at org.apache.ibatis.session.Configuration.hasStatement(Configuration.java:792)
	at org.apache.ibatis.session.Configuration.hasStatement(Configuration.java:787)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.resolveMappedStatement(MapperMethod.java:257)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:227)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedMapperMethod$0(MapperProxy.java:98)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:97)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:92)
	at com.sun.proxy.$Proxy83.getAllBlogForpublished(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.getAllBlogForpublished(Unknown Source)
	at com.myblog.service.BlogServiceImpl.getAllBlogForpublished(BlogServiceImpl.java:79)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b76453b.getAllBlogForpublished(<generated>)
	at com.myblog.controller.BlogController.toBlogIndex(BlogController.java:106)
	at com.myblog.controller.BlogController$$FastClassBySpringCGLIB$$a4142dbd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogController$$EnhancerBySpringCGLIB$$d9dfa89d.toBlogIndex(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Result Maps collection does not contain value for com.myblog.dao.BlogRepository.Comment
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:964)
	at org.apache.ibatis.session.Configuration.getResultMap(Configuration.java:674)
	at org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(MapperBuilderAssistant.java:339)
	... 108 common frames omitted

2020-03-03 18:53:47.664  WARN 12496 --- [http-nio-8081-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.apache.ibatis.builder.IncompleteElementException: Could not find result map 'com.myblog.dao.BlogRepository.Comment' referenced from 'com.myblog.dao.BlogRepository.getBlogComments']
2020-03-03 18:54:41.132  INFO 11816 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11816 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:54:41.133 DEBUG 11816 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:54:41.133  INFO 11816 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:54:42.476  INFO 11816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:54:42.486  INFO 11816 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:54:42.486  INFO 11816 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:54:42.560  INFO 11816 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:54:42.560  INFO 11816 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1387 ms
2020-03-03 18:54:43.297  INFO 11816 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:54:43.402  INFO 11816 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:54:43.823  INFO 11816 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:54:43.897  INFO 11816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:54:43.900  INFO 11816 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.239 seconds (JVM running for 4.078)
2020-03-03 18:54:47.099  INFO 11816 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:54:47.100  INFO 11816 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:54:47.111  INFO 11816 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 18:54:47.148  INFO 11816 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:54:47.163  INFO 11816 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:54:47.164  WARN 11816 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:54:47.296  INFO 11816 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:54:47.331 ERROR 11816 --- [http-nio-8081-exec-1] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/1/10/true,Exception: {}

org.apache.ibatis.builder.IncompleteElementException: Could not find result map 'com.myblog.dao.BlogRepository.Comment' referenced from 'com.myblog.dao.BlogRepository.getBlogComments'
	at org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(MapperBuilderAssistant.java:341)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:285)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:113)
	at org.apache.ibatis.session.Configuration.lambda$buildAllStatements$2(Configuration.java:816)
	at java.util.Collection.removeIf(Collection.java:414)
	at org.apache.ibatis.session.Configuration.buildAllStatements(Configuration.java:815)
	at org.apache.ibatis.session.Configuration.hasStatement(Configuration.java:792)
	at org.apache.ibatis.session.Configuration.hasStatement(Configuration.java:787)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.resolveMappedStatement(MapperMethod.java:257)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:227)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedMapperMethod$0(MapperProxy.java:98)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:97)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:92)
	at com.sun.proxy.$Proxy83.getAllBlogForpublished(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.getAllBlogForpublished(Unknown Source)
	at com.myblog.service.BlogServiceImpl.getAllBlogForpublished(BlogServiceImpl.java:79)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$e848f32c.getAllBlogForpublished(<generated>)
	at com.myblog.controller.BlogController.toBlogIndex(BlogController.java:106)
	at com.myblog.controller.BlogController$$FastClassBySpringCGLIB$$a4142dbd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogController$$EnhancerBySpringCGLIB$$1f4819c6.toBlogIndex(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Result Maps collection does not contain value for com.myblog.dao.BlogRepository.Comment
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:964)
	at org.apache.ibatis.session.Configuration.getResultMap(Configuration.java:674)
	at org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(MapperBuilderAssistant.java:339)
	... 108 common frames omitted

2020-03-03 18:54:47.333  WARN 11816 --- [http-nio-8081-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.apache.ibatis.builder.IncompleteElementException: Could not find result map 'com.myblog.dao.BlogRepository.Comment' referenced from 'com.myblog.dao.BlogRepository.getBlogComments']
2020-03-03 18:55:29.970  INFO 13428 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13428 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:55:29.971 DEBUG 13428 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:55:29.971  INFO 13428 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:55:31.340  INFO 13428 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:55:31.351  INFO 13428 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:55:31.351  INFO 13428 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:55:31.425  INFO 13428 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:55:31.426  INFO 13428 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1414 ms
2020-03-03 18:55:32.167  INFO 13428 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:55:32.267  INFO 13428 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:55:32.687  INFO 13428 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:55:32.763  INFO 13428 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:55:32.766  INFO 13428 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.273 seconds (JVM running for 4.161)
2020-03-03 18:55:36.016  INFO 13428 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:55:36.017  INFO 13428 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:55:36.028  INFO 13428 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 18:55:36.078  INFO 13428 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:55:36.094  INFO 13428 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:55:36.096  WARN 13428 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:55:36.241  INFO 13428 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:55:36.530 ERROR 13428 --- [http-nio-8081-exec-1] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/1/10/true,Exception: {}

org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
### The error may exist in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: /*resultMap="convertBlog"*/         SELECT id,email,avatar,createTime,blogid,replyComment FROM t_blog,t_comment WHERE t_blog.`id`=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
; Column 'id' in field list is ambiguous; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getAllBlogForpublished(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy84.getAllBlogForpublished(Unknown Source)
	at com.myblog.service.BlogServiceImpl.getAllBlogForpublished(BlogServiceImpl.java:79)
	at com.myblog.service.BlogServiceImpl$$FastClassBySpringCGLIB$$cfcb7f87.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.service.BlogServiceImpl$$EnhancerBySpringCGLIB$$e1cbb613.getAllBlogForpublished(<generated>)
	at com.myblog.controller.BlogController.toBlogIndex(BlogController.java:106)
	at com.myblog.controller.BlogController$$FastClassBySpringCGLIB$$a4142dbd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.myblog.controller.BlogController$$EnhancerBySpringCGLIB$$42a3fbf8.toBlogIndex(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy113.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.loader.ResultLoader.selectList(ResultLoader.java:81)
	at org.apache.ibatis.executor.loader.ResultLoader.loadResult(ResultLoader.java:70)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNestedQueryMappingValue(DefaultResultSetHandler.java:760)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getPropertyMappingValue(DefaultResultSetHandler.java:465)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:441)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:404)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:354)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:328)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:301)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:194)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy111.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 99 common frames omitted

2020-03-03 18:55:36.534  WARN 13428 --- [http-nio-8081-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
### The error may exist in file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: /*resultMap="convertBlog"*/         SELECT id,email,avatar,createTime,blogid,replyComment FROM t_blog,t_comment WHERE t_blog.`id`=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
; Column 'id' in field list is ambiguous; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous]
2020-03-03 18:56:18.994  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 18:56:18.996 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 18:56:18.996  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 18:56:20.367  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 18:56:20.379  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 18:56:20.379  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 18:56:20.456  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 18:56:20.456  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1422 ms
2020-03-03 18:56:21.204  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 18:56:21.305  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 18:56:21.705  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 18:56:21.779  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 18:56:21.782  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.247 seconds (JVM running for 4.076)
2020-03-03 18:56:25.285  INFO 2324 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 18:56:25.285  INFO 2324 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 18:56:25.293  INFO 2324 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-03 18:56:25.334  INFO 2324 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-03 18:56:25.351  INFO 2324 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 18:56:25.352  WARN 2324 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 18:56:25.495  INFO 2324 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 18:56:25.716  INFO 2324 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 18:56:28.250  INFO 2324 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 18:56:28.375  INFO 2324 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 18:56:28.413  INFO 2324 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=17, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=17, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 18:56:28.622  INFO 2324 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-03 18:56:36.488  INFO 2324 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 18:56:36.515  INFO 2324 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 19:22:28.685  INFO 2324 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:22:28.686  INFO 2324 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 19:22:28.696  INFO 2324 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 19:22:29.085  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:22:29.085 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:22:29.086  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:22:29.500  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:22:29.535  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:22:29.536  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:22:29.536  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:22:29.551  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:22:29.551  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 461 ms
2020-03-03 19:22:29.929  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:22:29.987  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:22:30.295  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:22:30.336  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:22:30.337  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.3 seconds (JVM running for 1572.236)
2020-03-03 19:22:30.339  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:24:04.928  INFO 2324 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:05.310  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:24:05.310 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:24:05.310  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:24:05.704  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:24:05.738  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:24:05.739  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:24:05.739  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:24:05.752  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:24:05.752  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 439 ms
2020-03-03 19:24:06.124  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:06.181  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:24:06.472  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:24:06.512  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:24:06.513  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.241 seconds (JVM running for 1668.388)
2020-03-03 19:24:06.514  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:24:16.581  INFO 2324 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:17.147  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:24:17.147 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:24:17.147  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:24:17.641  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:24:17.684  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:24:17.684  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:24:17.685  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:24:17.702  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:24:17.702  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 552 ms
2020-03-03 19:24:18.354  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:18.409  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:24:18.703  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:24:18.742  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:24:18.743  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.629 seconds (JVM running for 1680.615)
2020-03-03 19:24:18.744  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:24:22.380  INFO 2324 --- [Thread-19] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:22.742  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:24:22.742 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:24:22.742  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:24:23.053  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:24:23.088  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:24:23.089  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:24:23.089  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:24:23.103  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:24:23.103  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 359 ms
2020-03-03 19:24:23.427  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:23.477  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:24:23.757  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:24:23.797  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:24:23.798  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.085 seconds (JVM running for 1685.668)
2020-03-03 19:24:23.799  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:24:34.916  INFO 2324 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:35.286  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:24:35.286 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:24:35.286  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:24:35.570  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:24:35.603  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:24:35.604  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:24:35.604  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:24:35.618  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:24:35.618  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 330 ms
2020-03-03 19:24:35.918  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:24:35.965  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:24:36.225  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:24:36.269  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:24:36.270  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.014 seconds (JVM running for 1698.137)
2020-03-03 19:24:36.271  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:32:34.082  INFO 2324 --- [Thread-29] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:32:34.442  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:32:34.442 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:32:34.442  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:32:34.759  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:32:34.793  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:32:34.794  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:32:34.794  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:32:34.808  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:32:34.808  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 364 ms
2020-03-03 19:32:35.127  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:32:35.178  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:32:35.456  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:32:35.494  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:32:35.495  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.086 seconds (JVM running for 2177.242)
2020-03-03 19:32:35.496  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 19:33:12.373  INFO 2324 --- [Thread-34] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 19:33:12.760  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 19:33:12.760 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 19:33:12.760  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 19:33:13.096  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 19:33:13.127  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 19:33:13.128  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 19:33:13.128  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 19:33:13.142  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 19:33:13.143  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 380 ms
2020-03-03 19:33:13.664  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 19:33:13.747  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 19:33:14.097  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 19:33:14.138  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 19:33:14.139  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.411 seconds (JVM running for 2215.876)
2020-03-03 19:33:14.140  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 20:15:47.756  INFO 2324 --- [Thread-39] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 20:15:48.384  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:15:48.385 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:15:48.385  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:15:49.220  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 20:15:49.282  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:15:49.283  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:15:49.283  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:15:49.323  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:15:49.323  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 930 ms
2020-03-03 20:15:49.917  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:15:49.972  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:15:50.285  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:15:50.324  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:15:50.325  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 2.002 seconds (JVM running for 4771.419)
2020-03-03 20:15:50.326  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 20:15:59.412  INFO 2324 --- [Thread-44] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 20:15:59.813  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:15:59.813 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:15:59.813  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:16:00.139  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 20:16:00.176  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:16:00.176  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:16:00.176  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:16:00.194  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:16:00.194  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 379 ms
2020-03-03 20:16:00.586  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:16:00.639  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:16:00.930  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:16:00.971  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:16:00.972  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.19 seconds (JVM running for 4782.063)
2020-03-03 20:16:00.973  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 20:18:44.584  INFO 2324 --- [Thread-49] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 20:18:44.935  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2324 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:18:44.935 DEBUG 2324 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:18:44.935  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:18:45.323  WARN 2324 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 20:18:45.355  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:18:45.356  INFO 2324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:18:45.356  INFO 2324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:18:45.372  INFO 2324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:18:45.372  INFO 2324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 433 ms
2020-03-03 20:18:45.722  INFO 2324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:18:45.775  INFO 2324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:18:46.072  INFO 2324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:18:46.114  INFO 2324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:18:46.114  INFO 2324 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.214 seconds (JVM running for 4947.164)
2020-03-03 20:18:46.115  INFO 2324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 20:22:12.906  INFO 6992 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 6992 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:22:12.907 DEBUG 6992 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:22:12.908  INFO 6992 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:22:14.266  INFO 6992 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:22:14.277  INFO 6992 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:22:14.278  INFO 6992 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:22:14.351  INFO 6992 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:22:14.351  INFO 6992 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1406 ms
2020-03-03 20:22:15.098  INFO 6992 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:22:15.197  INFO 6992 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:22:15.590  INFO 6992 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:22:15.665  INFO 6992 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:22:15.668  INFO 6992 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.259 seconds (JVM running for 4.12)
2020-03-03 20:22:21.591  INFO 6992 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:22:21.592  INFO 6992 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:22:21.610  INFO 6992 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
2020-03-03 20:22:21.645  INFO 6992 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:22:21.653  INFO 6992 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 20:22:21.689  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 20:22:21.697  INFO 6992 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:22:21.699  WARN 6992 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:22:21.847  INFO 6992 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:22:22.179  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 20:22:22.203  INFO 6992 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=18, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=18, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:22:22.372  INFO 6992 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 20:22:24.273  INFO 6992 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[2, {}]}
2020-03-03 20:22:24.295  INFO 6992 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:22:38.387  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 20:22:38.388  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 20:22:44.214  INFO 6992 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1ebbca3]}
2020-03-03 20:22:44.269  INFO 6992 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 20:22:45.770  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/1/1/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[1, 1, 1, org.apache.catalina.session.StandardSessionFacade@1ebbca3]}
2020-03-03 20:22:45.788  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-03 20:22:49.760  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 1, 4, org.apache.catalina.session.StandardSessionFacade@1ebbca3, update]}
2020-03-03 20:22:49.775  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-03 20:22:49.787  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@1ebbca3]}
2020-03-03 20:22:49.847  INFO 6992 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-03 20:22:52.483  INFO 6992 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:22:52.483  INFO 6992 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 20:22:52.495  INFO 6992 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 20:22:52.571  INFO 6992 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 20:22:52.577  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=8, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:22:52.700  INFO 6992 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:index
2020-03-03 20:22:54.068  INFO 6992 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:22:54.105  INFO 6992 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:22:54.200 ERROR 6992 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.replyComment" (template: "blog" - line 183, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.replyComment" (template: "blog" - line 183, col 42)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.EqualsExpression.executeEquals(EqualsExpression.java:73)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:95)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'replyComment' cannot be found on object of type 'com.myblog.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 81 common frames omitted

2020-03-03 20:22:54.204 ERROR 6992 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'replyComment' cannot be found on object of type 'com.myblog.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.EqualsExpression.executeEquals(EqualsExpression.java:73)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:95)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:22:54.246 ERROR 6992 --- [http-nio-8081-exec-3] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:24:29.141  INFO 13696 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13696 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:24:29.142 DEBUG 13696 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:24:29.142  INFO 13696 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:24:30.509  INFO 13696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:24:30.518  INFO 13696 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:24:30.518  INFO 13696 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:24:30.593  INFO 13696 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:24:30.593  INFO 13696 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1416 ms
2020-03-03 20:24:31.302  INFO 13696 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:24:31.406  INFO 13696 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:24:31.798  INFO 13696 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:24:31.865  INFO 13696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:24:31.868  INFO 13696 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.227 seconds (JVM running for 4.067)
2020-03-03 20:24:35.846  INFO 13696 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:24:35.846  INFO 13696 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:24:35.856  INFO 13696 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 20:24:35.901  INFO 13696 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:24:35.910  INFO 13696 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 20:24:35.946  INFO 13696 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 20:24:35.951  INFO 13696 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:24:35.953  WARN 13696 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:24:36.097  INFO 13696 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:24:36.429  INFO 13696 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 20:24:36.455  INFO 13696 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=9, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=9, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:24:36.602  INFO 13696 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 20:24:38.033  INFO 13696 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:24:38.063  INFO 13696 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:25:08.809  INFO 13696 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:25:08.842  INFO 13696 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:25:12.035  INFO 13696 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:25:12.063  INFO 13696 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:25:46.026  INFO 13696 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:25:46.055  INFO 13696 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:25:50.142  INFO 13696 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:25:50.180  INFO 13696 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:25:53.681  INFO 13696 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:25:53.716  INFO 13696 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:26:32.682  INFO 13696 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:26:32.717  INFO 13696 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:26:38.178  INFO 13696 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:26:38.207  INFO 13696 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:28:38.214  INFO 11408 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11408 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:28:38.215 DEBUG 11408 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:28:38.215  INFO 11408 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:28:39.589  INFO 11408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:28:39.600  INFO 11408 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:28:39.600  INFO 11408 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:28:39.673  INFO 11408 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:28:39.673  INFO 11408 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1417 ms
2020-03-03 20:28:40.419  INFO 11408 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:28:40.519  INFO 11408 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:28:40.912  INFO 11408 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:28:40.985  INFO 11408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:28:40.988  INFO 11408 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.236 seconds (JVM running for 4.076)
2020-03-03 20:28:49.235  INFO 11408 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:28:49.236  INFO 11408 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:28:49.246  INFO 11408 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 20:28:49.289  INFO 11408 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:28:49.303  INFO 11408 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:28:49.304  WARN 11408 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:28:49.435  INFO 11408 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:28:49.705  INFO 11408 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:28:50.079 ERROR 11408 --- [http-nio-8081-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 75 common frames omitted

2020-03-03 20:28:50.086 ERROR 11408 --- [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:28:50.138 ERROR 11408 --- [http-nio-8081-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:28:56.518  INFO 11408 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:28:56.582  INFO 11408 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:28:56.605 ERROR 11408 --- [http-nio-8081-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-8] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 75 common frames omitted

2020-03-03 20:28:56.607 ERROR 11408 --- [http-nio-8081-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:28:56.616 ERROR 11408 --- [http-nio-8081-exec-8] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:28:58.266  INFO 11408 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:28:58.304  INFO 11408 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:28:58.332 ERROR 11408 --- [http-nio-8081-exec-9] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-9] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.replyComments" (template: "blog" - line 200, col 26)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 75 common frames omitted

2020-03-03 20:28:58.333 ERROR 11408 --- [http-nio-8081-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'replyComments' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.NotEqualsExpression.executeNotEquals(NotEqualsExpression.java:74)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:98)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:28:58.339 ERROR 11408 --- [http-nio-8081-exec-9] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:29:37.061  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 6864 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:29:37.062 DEBUG 6864 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:29:37.062  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:29:38.431  INFO 6864 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:29:38.443  INFO 6864 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:29:38.443  INFO 6864 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:29:38.518  INFO 6864 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:29:38.518  INFO 6864 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1416 ms
2020-03-03 20:29:39.246  INFO 6864 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:29:39.346  INFO 6864 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:29:39.740  INFO 6864 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:29:39.811  INFO 6864 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:29:39.814  INFO 6864 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.302 seconds (JVM running for 4.203)
2020-03-03 20:29:43.381  INFO 6864 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:29:43.381  INFO 6864 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:29:43.391  INFO 6864 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 20:29:43.431  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:29:43.443  INFO 6864 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:29:43.445  WARN 6864 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:29:43.580  INFO 6864 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:29:43.816  INFO 6864 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:29:44.173 ERROR 6864 --- [http-nio-8081-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 69 common frames omitted

2020-03-03 20:29:44.224 ERROR 6864 --- [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:29:44.260 ERROR 6864 --- [http-nio-8081-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:29:46.538  INFO 6864 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:29:46.574  INFO 6864 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:29:46.594 ERROR 6864 --- [http-nio-8081-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-6] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 69 common frames omitted

2020-03-03 20:29:46.596 ERROR 6864 --- [http-nio-8081-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:29:46.600 ERROR 6864 --- [http-nio-8081-exec-6] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:30:18.680  INFO 2212 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2212 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:30:18.682 DEBUG 2212 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:30:18.682  INFO 2212 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:30:20.072  INFO 2212 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:30:20.090  INFO 2212 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:30:20.093  INFO 2212 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:30:20.180  INFO 2212 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:30:20.181  INFO 2212 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1449 ms
2020-03-03 20:30:21.027  INFO 2212 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:30:21.152  INFO 2212 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:30:21.586  INFO 2212 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:30:21.653  INFO 2212 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:30:21.661  INFO 2212 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.458 seconds (JVM running for 4.329)
2020-03-03 20:30:24.523  INFO 2212 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:30:24.523  INFO 2212 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:30:24.532  INFO 2212 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 20:30:24.562  INFO 2212 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:30:24.583  INFO 2212 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:30:24.584  WARN 2212 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:30:24.749  INFO 2212 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:30:25.007  INFO 2212 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:30:25.378 ERROR 2212 --- [http-nio-8081-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 69 common frames omitted

2020-03-03 20:30:25.384 ERROR 2212 --- [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:30:25.425 ERROR 2212 --- [http-nio-8081-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:30:31.863  INFO 2212 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@3a2db6]}
2020-03-03 20:30:32.053  INFO 2212 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 20:30:32.094  INFO 2212 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=23, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@3a2db6, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=23, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, content=null, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, content=null, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 20:30:32.158  INFO 2212 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 20:30:42.559  INFO 2212 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:30:42.591  INFO 2212 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:30:42.605 ERROR 2212 --- [http-nio-8081-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-6] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "blog" - line 188, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 69 common frames omitted

2020-03-03 20:30:42.613 ERROR 2212 --- [http-nio-8081-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.processExpression(AbstractStandardInliner.java:528)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.performInlining(AbstractStandardInliner.java:389)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:283)
	at org.thymeleaf.standard.processor.StandardInliningCommentProcessor.doProcess(StandardInliningCommentProcessor.java:55)
	at org.thymeleaf.processor.comment.AbstractCommentProcessor.process(AbstractCommentProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$CommentProcessorWrapper.process(ProcessorConfigurationUtils.java:681)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleComment(ProcessorTemplateHandler.java:665)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleComment(TemplateHandlerAdapterMarkupHandler.java:205)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.HtmlMarkupHandler.handleComment(HtmlMarkupHandler.java:195)
	at org.attoparser.AbstractChainedMarkupHandler.handleComment(AbstractChainedMarkupHandler.java:193)
	at org.attoparser.ParsingCommentMarkupUtil.parseComment(ParsingCommentMarkupUtil.java:54)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:753)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:30:42.619 ERROR 2212 --- [http-nio-8081-exec-6] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:31:30.748  INFO 2212 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:31:30.783  INFO 2212 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:31:31.921  INFO 2212 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:31:31.956  INFO 2212 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:32:56.446  INFO 2212 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:32:56.477  INFO 2212 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:33:00.037  INFO 2212 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:33:00.071  INFO 2212 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:35:39.035  INFO 2212 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:35:39.063  INFO 2212 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:35:39.077 ERROR 2212 --- [http-nio-8081-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-10] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${}" (template: "blog" - line 194, col 47)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${}" (template: "blog" - line 194, col 47)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted

2020-03-03 20:35:39.079 ERROR 2212 --- [http-nio-8081-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${}" (template: "blog" - line 194, col 47)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:35:39.095 ERROR 2212 --- [http-nio-8081-exec-10] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:36:05.566  INFO 10128 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10128 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 20:36:05.567 DEBUG 10128 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 20:36:05.567  INFO 10128 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 20:36:06.951  INFO 10128 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 20:36:06.959  INFO 10128 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 20:36:06.959  INFO 10128 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 20:36:07.035  INFO 10128 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 20:36:07.035  INFO 10128 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1429 ms
2020-03-03 20:36:07.775  INFO 10128 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 20:36:07.874  INFO 10128 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 20:36:08.281  INFO 10128 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 20:36:08.348  INFO 10128 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 20:36:08.352  INFO 10128 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.261 seconds (JVM running for 4.119)
2020-03-03 20:36:10.460  INFO 10128 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 20:36:10.460  INFO 10128 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 20:36:10.475  INFO 10128 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-03-03 20:36:10.512  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:36:10.534  INFO 10128 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 20:36:10.535  WARN 10128 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 20:36:10.694  INFO 10128 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 20:36:10.967  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:39:03.369  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:39:03.412  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:39:08.372  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:39:08.410  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:39:29.850  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:39:29.891  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:39:32.672  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:39:32.708  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:40:23.112  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:40:23.142  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:40:24.555  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:40:24.587  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:45:25.234  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:45:25.270  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:45:25.302 ERROR 10128 --- [http-nio-8081-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-7] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.comments" (template: "blog" - line 202, col 47)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.comments" (template: "blog" - line 202, col 47)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'comments' cannot be found on object of type 'com.myblog.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-03-03 20:45:25.305 ERROR 10128 --- [http-nio-8081-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'comments' cannot be found on object of type 'com.myblog.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 20:45:25.317 ERROR 10128 --- [http-nio-8081-exec-7] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 20:45:28.154  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:45:28.186  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:48:23.795  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:48:23.827  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:48:25.864  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:48:25.904  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:48:41.917  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:48:41.951  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:48:42.849  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:48:42.881  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:49:21.061  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:49:21.085  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:49:21.953  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:49:21.983  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:49:25.276  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:49:25.311  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:57:09.817  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:57:09.849  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:57:12.399  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:57:12.437  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:57:12.996  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:57:13.024  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 20:57:13.613  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 20:57:13.647  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:00:18.810  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:00:18.837  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:00:29.527  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:00:29.564  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:02:17.429  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:02:17.460  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:02:20.879  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:02:20.915  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:02:21.875  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:02:21.902  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:03:18.385  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:03:18.422  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:03:20.285  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:03:20.318  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:03:23.915  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:03:23.957  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:03:25.477  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:03:25.513  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:04:35.416  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:04:35.453  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:04:37.541  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:04:37.576  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:04:38.382  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:04:38.420  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:08:37.922  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:08:37.959  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:10:29.082  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:10:29.111  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:06.243  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:06.284  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:07.506  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:07.543  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:08.090  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:08.126  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:31.703  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:31.732  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:48.410  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:48.444  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:49.208  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:49.243  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:16:50.086  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:16:50.132  INFO 10128 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:20:10.705  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:20:10.741  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:20:10.754 ERROR 10128 --- [http-nio-8081-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-7] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 21:20:10.754 ERROR 10128 --- [http-nio-8081-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] with root cause

org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:20:10.766 ERROR 10128 --- [http-nio-8081-exec-7] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:20:11.666  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:20:11.710  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:20:11.724 ERROR 10128 --- [http-nio-8081-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-3] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 21:20:11.725 ERROR 10128 --- [http-nio-8081-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] with root cause

org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:20:11.733 ERROR 10128 --- [http-nio-8081-exec-3] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:20:57.464  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:20:57.490  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:20:57.502 ERROR 10128 --- [http-nio-8081-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-7] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted

2020-03-03 21:20:57.503 ERROR 10128 --- [http-nio-8081-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] with root cause

org.attoparser.ParseException: (Line = 230, Column = 85) Malformed markup: Attribute "id" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:20:57.509 ERROR 10128 --- [http-nio-8081-exec-7] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]" - line 230, col 85)] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:20:58.737  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:20:58.769  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:21:00.156  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:21:00.193  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:21:28.160  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:21:28.195  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:21:28.943  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:21:28.975  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:21:33.381  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:21:33.404  INFO 10128 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:23:28.142  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:23:28.173  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:23:29.218  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:23:29.259  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:26:56.699  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:26:56.728  INFO 10128 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:26:57.752  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:26:57.790  INFO 10128 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:26:58.475  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:26:58.509  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:26:59.071  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:26:59.109  INFO 10128 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:26:59.480  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:26:59.516  INFO 10128 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:27:15.435  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:27:15.466  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:27:41.189  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:27:41.221  INFO 10128 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:27:41.920  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:27:41.950  INFO 10128 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:27:44.347  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:27:44.384  INFO 10128 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:27:45.196  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:27:45.237  INFO 10128 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:29:52.484  INFO 10292 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10292 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 21:29:52.485 DEBUG 10292 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 21:29:52.486  INFO 10292 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 21:29:53.880  INFO 10292 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 21:29:53.892  INFO 10292 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 21:29:53.892  INFO 10292 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 21:29:53.967  INFO 10292 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 21:29:53.967  INFO 10292 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1442 ms
2020-03-03 21:29:54.740  INFO 10292 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 21:29:54.848  INFO 10292 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 21:29:55.298  INFO 10292 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 21:29:55.375  INFO 10292 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 21:29:55.378  INFO 10292 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.404 seconds (JVM running for 4.253)
2020-03-03 21:30:09.643  INFO 10292 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 21:30:09.643  INFO 10292 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 21:30:09.660  INFO 10292 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-03-03 21:30:09.695  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:09.708  INFO 10292 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 21:30:09.709  WARN 10292 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 21:30:09.852  INFO 10292 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 21:30:09.977  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:30:36.770  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:36.807  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:30:37.652  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:37.693  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:30:45.271  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:45.304  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:30:46.120  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:46.159  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:30:46.720  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:30:46.762  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:37:41.129  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:37:41.158  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:37:42.379  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:37:42.418  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:37:42.447 ERROR 10292 --- [http-nio-8081-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-8] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	... 81 common frames omitted

2020-03-03 21:37:42.450 ERROR 10292 --- [http-nio-8081-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:37:42.495 ERROR 10292 --- [http-nio-8081-exec-8] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:38:23.371  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:38:23.404  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:38:23.422 ERROR 10292 --- [http-nio-8081-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-10] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	... 81 common frames omitted

2020-03-03 21:38:23.423 ERROR 10292 --- [http-nio-8081-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:38:23.429 ERROR 10292 --- [http-nio-8081-exec-10] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:38:24.238  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:38:24.290  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:38:24.308 ERROR 10292 --- [http-nio-8081-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-8] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "replycomment.nickname==null?'匿名',replycomment.nickname" (template: "blog" - line 208, col 55)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	... 81 common frames omitted

2020-03-03 21:38:24.309 ERROR 10292 --- [http-nio-8081-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelParseException: Expression [replycomment.nickname==null?'匿名',replycomment.nickname] @32: EL1043E: Unexpected token. Expected 'colon(:)' but was 'comma(,)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:181)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 21:38:24.317 ERROR 10292 --- [http-nio-8081-exec-8] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/blog/1] and exception [An error happened during template parsing (template: "class path resource [templates/blog.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-03 21:38:25.416  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:38:25.447  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:39:04.939  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:39:04.980  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:39:09.563  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:39:09.597  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:43:28.666  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:43:28.693  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:46:46.153  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:46:46.187  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:46:47.658  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:46:47.709  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:46:48.423  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:46:48.463  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:49:36.795  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:49:36.823  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 21:49:37.783  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 21:49:37.811  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:01:02.754  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:01:02.787  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:01:04.321  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:01:04.347  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:01:47.856  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:01:47.885  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:01:48.719  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:01:48.766  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:01:48.772 ERROR 10292 --- [http-nio-8081-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8081-exec-10] Exception processing template "blog": Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 22:01:48.773 ERROR 10292 --- [http-nio-8081-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-03-03 22:01:49.067 ERROR 10292 --- [http-nio-8081-exec-3] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/lib/qrcode/qrcode.min.js,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "lib"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 22:01:49.074  WARN 10292 --- [http-nio-8081-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"]
2020-03-03 22:01:52.497  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:01:52.536  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:02:30.110  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:02:30.142  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:02:31.526  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:02:31.552  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:03:01.272  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:03:01.306  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:03:02.094  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:03:02.133  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:03:08.327  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:03:08.363  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:08:53.993  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:08:54.031  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:08:55.613  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:08:55.657  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:09:25.127  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:09:25.161  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:09:26.848  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:09:26.884  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:09:27.436  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:09:27.471  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:09:28.019  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:09:28.070  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:09:29.028  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:09:29.063  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:06.045  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:06.070  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:06.908  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:06.943  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:07.677  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:07.712  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:11.109  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:11.136  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:12.102  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:12.139  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:56.482  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:56.513  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:57.154  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:57.195  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:57.815  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:57.858  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:58.411  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:58.451  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:10:59.031  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:10:59.062  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:14:47.469  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:14:47.506  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:14:48.062  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:14:48.100  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:15:07.519  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:15:07.549  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:15:08.349  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:15:08.390  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:15:08.928  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:15:08.970  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:17:18.863  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:17:18.886  INFO 10292 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:17:38.721  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:17:38.746  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:17:39.723  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:17:39.760  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:18:31.069  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:18:31.095  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:18:32.716  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:18:32.747  INFO 10292 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:20:25.827  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:20:25.846  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:20:26.663  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:20:26.701  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:20:27.409  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:20:27.454  INFO 10292 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:20:51.288  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:20:51.310  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:20:52.080  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:20:52.118  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:21.635  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:21.665  INFO 10292 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:22.240  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:22.309  INFO 10292 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:22.903  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:22.945  INFO 10292 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:23.366  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:23.392  INFO 10292 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:23.892  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:23.924  INFO 10292 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:24.475  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:24.502  INFO 10292 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:24.922  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:21:24.946  INFO 10292 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:21:52.061  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11056 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:21:52.062 DEBUG 11056 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:21:52.062  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:21:53.947  INFO 11056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:21:53.960  INFO 11056 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:21:53.960  INFO 11056 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:21:54.067  INFO 11056 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:21:54.067  INFO 11056 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1967 ms
2020-03-03 22:21:54.924  INFO 11056 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:21:55.067  INFO 11056 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:21:55.479  INFO 11056 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:21:55.560  INFO 11056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:21:55.564  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 4.086 seconds (JVM running for 5.377)
2020-03-03 22:22:00.168  INFO 11056 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 22:22:00.168  INFO 11056 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 22:22:00.177  INFO 11056 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 22:22:00.209  INFO 11056 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:22:00.220  INFO 11056 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 22:22:00.221  WARN 11056 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 22:22:00.482  INFO 11056 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 22:22:00.716  INFO 11056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:22:00.720  INFO 11056 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:22:00.832  INFO 11056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:22:01.290  INFO 11056 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:22:01.364  INFO 11056 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:26:04.707  INFO 11056 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:26:04.741  INFO 11056 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:26:05.573  INFO 11056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:26:05.598  INFO 11056 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:26:11.153  INFO 11056 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:26:11.183  INFO 11056 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:32:53.378  INFO 11056 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:32:53.379  INFO 11056 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 22:32:53.403  INFO 11056 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 22:32:53.891  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11056 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:32:53.891 DEBUG 11056 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:32:53.891  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:32:54.620  WARN 11056 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:32:54.666  INFO 11056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:32:54.667  INFO 11056 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:32:54.667  INFO 11056 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:32:54.685  INFO 11056 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:32:54.686  INFO 11056 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 791 ms
2020-03-03 22:32:55.090  INFO 11056 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:32:55.148  INFO 11056 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:32:55.450  INFO 11056 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:32:55.490  INFO 11056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:32:55.491  INFO 11056 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.672 seconds (JVM running for 665.138)
2020-03-03 22:32:55.492  INFO 11056 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:39:15.196  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2092 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:39:15.197 DEBUG 2092 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:39:15.197  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:39:16.741  INFO 2092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:39:16.752  INFO 2092 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:39:16.752  INFO 2092 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:39:16.878  INFO 2092 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:39:16.878  INFO 2092 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1633 ms
2020-03-03 22:39:17.619  INFO 2092 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:39:17.764  INFO 2092 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:39:18.161  INFO 2092 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:39:18.249  INFO 2092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:39:18.257  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.562 seconds (JVM running for 4.636)
2020-03-03 22:39:33.138  INFO 2092 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 22:39:33.138  INFO 2092 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 22:39:33.148  INFO 2092 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 22:39:33.209 ERROR 2092 --- [http-nio-8081-exec-1] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/1=,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1="
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "1="
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.valueOf(Long.java:803)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 22:39:33.213  WARN 2092 --- [http-nio-8081-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1="]
2020-03-03 22:39:33.711 ERROR 2092 --- [http-nio-8081-exec-8] c.m.handler.ControllerExceptionHandler   : requestURL: http://localhost:8081/blog/lib/qrcode/qrcode.min.js,Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "lib"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted

2020-03-03 22:39:33.711  WARN 2092 --- [http-nio-8081-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "lib"]
2020-03-03 22:39:35.090  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:39:35.106  INFO 2092 --- [http-nio-8081-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 22:39:35.110  WARN 2092 --- [http-nio-8081-exec-3] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 22:39:35.312  INFO 2092 --- [http-nio-8081-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 22:39:35.455  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:39:51.374  INFO 2092 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:51.375  INFO 2092 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:53.451  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:53.452  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:54.339  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:54.339  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:54.675  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:54.676  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:54.884  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:54.884  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.067  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.067  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.242  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.242  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.418  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.418  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.610  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.611  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.802  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.802  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:55.988  INFO 2092 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:55.988  INFO 2092 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.172  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.172  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.346  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.346  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.521  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.522  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.677  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.678  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.820  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.820  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:39:56.979  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:39:56.979  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:42:41.878  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:42:41.914  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:42:42.731  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:42:42.781  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:42:46.468  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:42:46.469  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:43:03.145  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:43:03.176  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:43:05.852  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:43:05.852  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:43:08.575  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:43:08.600  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:43:13.330  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:43:13.351  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:43:29.912  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:43:29.935  INFO 2092 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:43:35.270  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:43:35.271  INFO 2092 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:43:42.633  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:43:42.634  INFO 2092 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:43:51.077  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:43:51.120  INFO 2092 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:43:56.859  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-03 22:43:56.859  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-03 22:44:18.238  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:44:18.271  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:44:19.196  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:44:19.244  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:44:23.413  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.CommentController.addComment', args=[, , , 1, null]}
2020-03-03 22:44:23.417  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:44:29.457  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.CommentController.addComment', args=[, , , 1, null]}
2020-03-03 22:44:29.458  INFO 2092 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:44:31.575  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.CommentController.addComment', args=[, , , 1, null]}
2020-03-03 22:44:31.576  INFO 2092 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:45:18.672  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:45:18.698  INFO 2092 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:45:18.769  INFO 2092 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:45:18.770  INFO 2092 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 22:45:18.793  INFO 2092 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 22:45:19.428  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 2092 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:45:19.429 DEBUG 2092 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:45:19.429  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:45:19.975  WARN 2092 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:45:20.019  INFO 2092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:45:20.020  INFO 2092 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:45:20.020  INFO 2092 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:45:20.036  INFO 2092 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:45:20.036  INFO 2092 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 602 ms
2020-03-03 22:45:20.468  INFO 2092 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:45:20.530  INFO 2092 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:45:20.853  INFO 2092 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:45:20.905  INFO 2092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:45:20.906  INFO 2092 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.54 seconds (JVM running for 367.193)
2020-03-03 22:45:20.907  INFO 2092 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:45:21.117  INFO 2092 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 22:45:21.118  INFO 2092 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 22:45:21.130  INFO 2092 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-03-03 22:45:21.135  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:45:21.145  INFO 2092 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-03-03 22:45:21.146  WARN 2092 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 22:45:21.156  INFO 2092 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-03-03 22:45:21.187  INFO 2092 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:45:24.324  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[, , , 1, null]}
2020-03-03 22:45:24.328  INFO 2092 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:45:58.270  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:45:58.270 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:45:58.271  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:45:59.645  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:45:59.653  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:45:59.653  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:45:59.726  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:45:59.726  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1414 ms
2020-03-03 22:46:00.459  INFO 10936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:46:00.563  INFO 10936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:46:00.969  INFO 10936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:46:01.037  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:46:01.040  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.254 seconds (JVM running for 4.124)
2020-03-03 22:46:10.261  INFO 10936 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 22:46:10.261  INFO 10936 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 22:46:10.270  INFO 10936 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 22:46:10.302  INFO 10936 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:46:10.320  INFO 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 22:46:10.322  WARN 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 22:46:10.445  INFO 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 22:46:10.644  INFO 10936 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:46:14.129  INFO 10936 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[, , , 1, null]}
2020-03-03 22:46:14.133  INFO 10936 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:46:56.351  INFO 10936 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:46:56.377  INFO 10936 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:47:00.563  INFO 10936 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:47:00.564  INFO 10936 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 22:47:00.576  INFO 10936 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 22:47:01.011  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:47:01.011 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:47:01.011  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:47:01.439  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:47:01.474  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:47:01.474  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:47:01.475  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:47:01.491  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:47:01.491  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 477 ms
2020-03-03 22:47:01.886  INFO 10936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:47:01.943  INFO 10936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:47:02.286  INFO 10936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:47:02.348  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:47:02.349  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.38 seconds (JVM running for 65.417)
2020-03-03 22:47:02.351  INFO 10936 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:47:02.408  INFO 10936 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 22:47:02.409  INFO 10936 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 22:47:02.420  INFO 10936 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-03 22:47:02.431  INFO 10936 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:47:02.440  INFO 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-03-03 22:47:02.441  WARN 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 22:47:02.458  INFO 10936 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-03-03 22:47:02.511  INFO 10936 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:47:10.809  INFO 10936 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[123, 123, 哈哈哈哈哈, 1, null]}
2020-03-03 22:47:10.812  INFO 10936 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:47:20.731  INFO 10936 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 22:47:20.761  INFO 10936 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 22:47:30.347  INFO 10936 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[嗷嗷嗷, , 回复张三:啊实打实, 1, 1]}
2020-03-03 22:47:30.348  INFO 10936 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 22:50:03.175  INFO 10936 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:50:03.176  INFO 10936 --- [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2020-03-03 22:50:03.183  INFO 10936 --- [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2020-03-03 22:50:03.566  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:50:03.566 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:50:03.566  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:50:04.000  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:50:04.032  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:50:04.033  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:50:04.033  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:50:04.049  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:50:04.049  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 478 ms
2020-03-03 22:50:04.429  INFO 10936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:50:04.483  INFO 10936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:50:04.825  INFO 10936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:50:04.868  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:50:04.868  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.341 seconds (JVM running for 247.89)
2020-03-03 22:50:04.869  INFO 10936 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:51:09.599  INFO 10936 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:51:10.042  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:51:10.042 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:51:10.042  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:51:10.488  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:51:10.530  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:51:10.530  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:51:10.531  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:51:10.544  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:51:10.544  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 498 ms
2020-03-03 22:51:10.979  INFO 10936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:51:11.038  INFO 10936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:51:11.340  INFO 10936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:51:11.384  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:51:11.385  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.381 seconds (JVM running for 314.39)
2020-03-03 22:51:11.386  INFO 10936 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:56:16.403  INFO 10936 --- [Thread-19] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:56:16.767  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:56:16.768 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:56:16.768  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:56:17.084  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:56:17.114  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:56:17.115  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:56:17.115  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:56:17.129  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:56:17.129  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 359 ms
2020-03-03 22:56:17.471  INFO 10936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 22:56:17.526  INFO 10936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 22:56:17.848  INFO 10936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 22:56:17.887  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 22:56:17.888  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.152 seconds (JVM running for 620.816)
2020-03-03 22:56:17.889  INFO 10936 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 22:58:10.772  INFO 10936 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 22:58:11.254  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:58:11.254 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:58:11.254  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:58:11.651  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:58:11.685  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:58:11.686  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:58:11.687  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:58:11.701  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 22:58:11.701  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 444 ms
2020-03-03 22:58:11.946  WARN 10936 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.myblog.service.CommentService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-03 22:58:11.947  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-03 22:58:11.953  INFO 10936 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-03 22:58:12.244 ERROR 10936 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field commentService in com.myblog.controller.CommentController required a bean of type 'com.myblog.service.CommentService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.myblog.service.CommentService' in your configuration.

2020-03-03 22:58:31.113  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10936 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 22:58:31.114 DEBUG 10936 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 22:58:31.114  INFO 10936 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 22:58:31.503  WARN 10936 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 22:58:31.571  INFO 10936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 22:58:31.572  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 22:58:31.572  INFO 10936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 22:58:31.587  INFO 10936 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-03 22:58:31.587  INFO 10936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 471 ms
2020-03-03 22:58:31.769  WARN 10936 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.myblog.service.CommentService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-03 22:58:31.770  INFO 10936 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-03 22:58:31.779  INFO 10936 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-03 22:58:31.854 ERROR 10936 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field commentService in com.myblog.controller.CommentController required a bean of type 'com.myblog.service.CommentService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.myblog.service.CommentService' in your configuration.

2020-03-03 23:01:23.850  INFO 11984 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11984 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:01:23.851 DEBUG 11984 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:01:23.851  INFO 11984 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:01:25.202  INFO 11984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:01:25.213  INFO 11984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:01:25.214  INFO 11984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:01:25.287  INFO 11984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:01:25.287  INFO 11984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1400 ms
2020-03-03 23:01:25.792  WARN 11984 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.myblog.service.CommentService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-03 23:01:25.795  INFO 11984 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-03 23:01:25.804  INFO 11984 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-03 23:01:25.920 ERROR 11984 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field commentService in com.myblog.controller.CommentController required a bean of type 'com.myblog.service.CommentService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.myblog.service.CommentService' in your configuration.

2020-03-03 23:03:04.758  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7484 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:03:04.759 DEBUG 7484 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:03:04.759  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:03:06.133  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:03:06.141  INFO 7484 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:03:06.142  INFO 7484 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:03:06.217  INFO 7484 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:03:06.217  INFO 7484 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1420 ms
2020-03-03 23:03:06.956  INFO 7484 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:03:07.054  INFO 7484 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:03:07.470  INFO 7484 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:03:07.538  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:03:07.541  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.329 seconds (JVM running for 4.183)
2020-03-03 23:03:10.971  INFO 7484 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 23:03:10.971  INFO 7484 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 23:03:10.980  INFO 7484 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-03 23:03:11.012  INFO 7484 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:03:11.029  INFO 7484 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 23:03:11.030  WARN 7484 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 23:03:11.144  INFO 7484 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 23:03:11.273  INFO 7484 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:03:36.331  INFO 7484 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[白峰源, 377092613@qq.com, 回复张三:这是一个测试, 1, 1]}
2020-03-03 23:03:36.389  INFO 7484 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 23:07:29.374  INFO 7484 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 23:07:29.375  INFO 7484 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 23:07:29.383  INFO 7484 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 23:07:29.781  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7484 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:07:29.782 DEBUG 7484 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:07:29.782  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:07:30.175  WARN 7484 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 23:07:30.210  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:07:30.211  INFO 7484 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:07:30.211  INFO 7484 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:07:30.225  INFO 7484 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:07:30.225  INFO 7484 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 440 ms
2020-03-03 23:07:30.599  INFO 7484 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:07:30.658  INFO 7484 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:07:30.977  INFO 7484 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:07:31.019  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:07:31.020  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.276 seconds (JVM running for 267.595)
2020-03-03 23:07:31.022  INFO 7484 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 23:07:44.212  INFO 4124 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 4124 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:07:44.213 DEBUG 4124 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:07:44.214  INFO 4124 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-03 23:07:46.776  INFO 4124 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:07:47.005  INFO 4124 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:07:47.587  INFO 4124 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.887 seconds (JVM running for 5.366)
2020-03-03 23:07:48.232  INFO 4124 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:00.962  INFO 11692 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11692 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:08:00.966 DEBUG 11692 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:08:00.967  INFO 11692 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-03 23:08:03.443  INFO 11692 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:03.593  INFO 11692 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:08:04.151  INFO 11692 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.651 seconds (JVM running for 4.703)
2020-03-03 23:08:04.379  INFO 11692 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:18.945  INFO 7484 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:19.343  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 7484 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:08:19.343 DEBUG 7484 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:08:19.344  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:08:19.719  WARN 7484 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 23:08:19.753  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:08:19.754  INFO 7484 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:08:19.754  INFO 7484 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:08:19.768  INFO 7484 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:08:19.769  INFO 7484 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 421 ms
2020-03-03 23:08:20.138  INFO 7484 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:20.197  INFO 7484 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:08:20.514  INFO 7484 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:08:20.555  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:08:20.556  INFO 7484 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.264 seconds (JVM running for 317.119)
2020-03-03 23:08:20.557  INFO 7484 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 23:08:41.938  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 3504 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:08:41.939 DEBUG 3504 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:08:41.939  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:08:43.306  INFO 3504 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:08:43.314  INFO 3504 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:08:43.314  INFO 3504 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:08:43.390  INFO 3504 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:08:43.390  INFO 3504 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1410 ms
2020-03-03 23:08:44.166  INFO 3504 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:08:44.270  INFO 3504 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:08:44.671  INFO 3504 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:08:44.744  INFO 3504 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:08:44.747  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.281 seconds (JVM running for 4.169)
2020-03-03 23:08:47.793  INFO 3504 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 23:08:47.794  INFO 3504 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 23:08:47.804  INFO 3504 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 23:08:47.837  INFO 3504 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:08:47.847  INFO 3504 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 23:08:47.848  WARN 3504 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 23:08:47.963  INFO 3504 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 23:08:48.151  INFO 3504 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:09:07.107  INFO 3504 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[白峰源, 377092613@qq.com, 回复张三:测试, 1, 1]}
2020-03-03 23:09:07.125  INFO 3504 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 23:09:15.647  INFO 3504 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:09:15.681  INFO 3504 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:11:25.709  INFO 3504 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:11:25.747  INFO 3504 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:11:27.267  INFO 3504 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:11:27.309  INFO 3504 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:11:28.047  INFO 3504 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:11:28.092  INFO 3504 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:11:39.828  INFO 3504 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.CommentController.addComment', args=[哈哈哈, 123@qq.com, 测试, 1, null]}
2020-03-03 23:11:39.843  INFO 3504 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:哈哈哈
2020-03-03 23:11:49.483  INFO 3504 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:11:49.541  INFO 3504 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:16:11.542  INFO 3504 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-03 23:16:11.543  INFO 3504 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-03 23:16:11.551  INFO 3504 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-03 23:16:11.964  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 3504 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:16:11.964 DEBUG 3504 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:16:11.964  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:16:12.369  WARN 3504 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-03 23:16:12.404  INFO 3504 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:16:12.404  INFO 3504 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:16:12.405  INFO 3504 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:16:12.421  INFO 3504 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:16:12.422  INFO 3504 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 455 ms
2020-03-03 23:16:12.805  INFO 3504 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:16:12.862  INFO 3504 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:16:13.172  INFO 3504 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:16:13.214  INFO 3504 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:16:13.214  INFO 3504 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.296 seconds (JVM running for 452.523)
2020-03-03 23:16:13.216  INFO 3504 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-03 23:16:34.232  INFO 10800 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10800 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-03 23:16:34.233 DEBUG 10800 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-03 23:16:34.233  INFO 10800 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-03 23:16:35.608  INFO 10800 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-03 23:16:35.616  INFO 10800 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-03 23:16:35.616  INFO 10800 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-03 23:16:35.690  INFO 10800 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-03 23:16:35.690  INFO 10800 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1406 ms
2020-03-03 23:16:36.420  INFO 10800 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-03 23:16:36.526  INFO 10800 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-03 23:16:36.928  INFO 10800 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-03 23:16:37.002  INFO 10800 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-03 23:16:37.005  INFO 10800 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.235 seconds (JVM running for 4.221)
2020-03-03 23:16:42.113  INFO 10800 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-03 23:16:42.114  INFO 10800 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-03 23:16:42.125  INFO 10800 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-03 23:16:42.164  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:16:42.174  INFO 10800 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-03 23:16:42.176  WARN 10800 --- [http-nio-8081-exec-1] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-03 23:16:42.370  INFO 10800 --- [http-nio-8081-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-03 23:16:42.492  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:16:54.397  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.CommentController.addComment', args=[123, , 哈哈哈哈, 1, null, org.apache.catalina.connector.ResponseFacade@e8561]}
2020-03-03 23:16:54.414  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:null
2020-03-03 23:17:14.949  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:17:14.987  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:17:28.734  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@9d2fab, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:28.747  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:type/1/10/true/1
2020-03-03 23:17:28.770  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1;jsessionid=484DDB3BC4D8D66887150654069E4D6D', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@9d2fab]}
2020-03-03 23:17:28.911  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 23:17:28.939  INFO 10800 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@9d2fab, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:28.991  INFO 10800 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:types
2020-03-03 23:17:29.832  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.apache.catalina.session.StandardSessionFacade@9d2fab, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:29.927  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:tag/1/10/true/1
2020-03-03 23:17:29.939  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@9d2fab]}
2020-03-03 23:17:30.014  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-03 23:17:30.020  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@9d2fab, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:30.047  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:tags
2020-03-03 23:17:30.738  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toArchives', args=[{}]}
2020-03-03 23:17:30.879  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:archives
2020-03-03 23:17:37.390  INFO 10800 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/about', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toAbout', args=[]}
2020-03-03 23:17:37.391  INFO 10800 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:about
2020-03-03 23:17:40.114  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:40.115  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-03 23:17:40.125  INFO 10800 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-03 23:17:40.185  INFO 10800 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-03 23:17:40.191  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:40.281  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-03 23:17:41.873  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@9d2fab]}
2020-03-03 23:17:41.932  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-03 23:17:41.937  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@9d2fab, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=189, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-03 23:17:41.988  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:types
2020-03-03 23:19:26.777  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:19:26.807  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:19:33.193  INFO 10800 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:19:33.224  INFO 10800 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:19:34.027  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:19:34.063  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:19:35.135  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:19:35.168  INFO 10800 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:19:49.896  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[456, , 回复123:好的测试, 1, 7, org.apache.catalina.connector.ResponseFacade@9c8a1a]}
2020-03-03 23:19:49.907  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:null
2020-03-03 23:19:50.018  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:19:50.053  INFO 10800 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:23.098  INFO 10800 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:23.127  INFO 10800 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:24.070  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:24.111  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:34.628  INFO 10800 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[789, , 回复123:新的测试, 1, 7, org.apache.catalina.connector.ResponseFacade@1f1965a]}
2020-03-03 23:21:34.636  INFO 10800 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:null
2020-03-03 23:21:34.651  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:34.670  INFO 10800 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:52.669  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:52.694  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:53.466  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:53.506  INFO 10800 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:21:54.169  INFO 10800 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:21:54.215  INFO 10800 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-03 23:22:06.365  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/addComment', ip='127.0.0.1', classMethod='com.myblog.controller.CommentController.addComment', args=[123, , 回复哈哈哈:我的, 1, 6, org.apache.catalina.connector.ResponseFacade@1a51568]}
2020-03-03 23:22:06.374  INFO 10800 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:null
2020-03-03 23:22:06.395  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='127.0.0.1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-03 23:22:06.420  INFO 10800 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
