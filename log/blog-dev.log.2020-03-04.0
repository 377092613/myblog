2020-03-04 09:35:19.371  INFO 2056 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 2056 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:35:19.411 DEBUG 2056 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:35:19.411  INFO 2056 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 09:35:24.642  INFO 2056 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:35:24.882  INFO 2056 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:35:25.682  INFO 2056 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 7.456 seconds (JVM running for 11.347)
2020-03-04 09:35:26.242  INFO 2056 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 09:50:49.789  INFO 11080 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11080 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:50:49.799 DEBUG 11080 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:50:49.799  INFO 11080 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 09:50:54.349  INFO 11080 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:50:54.539  INFO 11080 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:50:55.269  INFO 11080 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 6.57 seconds (JVM running for 8.894)
2020-03-04 09:50:55.789  INFO 11080 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 09:51:33.238  INFO 9364 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 9364 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:51:33.248 DEBUG 9364 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:51:33.248  INFO 9364 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 09:51:35.608  INFO 9364 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:51:35.770  INFO 9364 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:51:36.271  INFO 9364 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.479 seconds (JVM running for 4.439)
2020-03-04 09:51:36.551  INFO 9364 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 09:52:58.734  INFO 9760 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 9760 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:52:58.734 DEBUG 9760 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:52:58.734  INFO 9760 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 09:53:00.884  INFO 9760 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:53:01.014  INFO 9760 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:53:01.474  INFO 9760 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.192 seconds (JVM running for 4.157)
2020-03-04 09:53:01.664  INFO 9760 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 09:53:51.157  INFO 1252 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 1252 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:53:51.167 DEBUG 1252 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:53:51.167  INFO 1252 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 09:53:53.411  INFO 1252 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:53:53.551  INFO 1252 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:53:54.021  INFO 1252 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.303 seconds (JVM running for 4.224)
2020-03-04 09:53:54.211  INFO 1252 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 09:59:38.686  INFO 10216 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10216 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 09:59:38.686 DEBUG 10216 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 09:59:38.686  INFO 10216 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 09:59:40.236  INFO 10216 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 09:59:40.246  INFO 10216 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 09:59:40.246  INFO 10216 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 09:59:40.356  INFO 10216 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 09:59:40.356  INFO 10216 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1630 ms
2020-03-04 09:59:41.086  INFO 10216 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 09:59:41.186  INFO 10216 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 09:59:41.866  INFO 10216 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 09:59:41.976  INFO 10216 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 09:59:41.976  INFO 10216 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.851 seconds (JVM running for 4.786)
2020-03-04 10:01:18.160  INFO 10216 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 10:01:18.160  INFO 10216 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 10:01:18.194  INFO 10216 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 34 ms
2020-03-04 10:01:18.266  INFO 10216 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:18.281  INFO 10216 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:01:18.313  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:01:18.351  INFO 10216 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 10:01:18.353  WARN 10216 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 10:01:18.568  INFO 10216 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 10:01:19.079  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:01:19.132  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/;jsessionid=EA3BB76B5488F1933B6E1B267D7DD3FB', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:19.320  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:01:24.715  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:24.717  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:01:24.729  INFO 10216 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:01:24.815  INFO 10216 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:01:24.822  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:24.943  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:01:31.166  INFO 10216 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:01:31.233  INFO 10216 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:01:31.240  INFO 10216 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:31.352  INFO 10216 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:01:36.987  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:01:37.061  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:01:37.066  INFO 10216 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:01:37.185  INFO 10216 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:02:20.986  INFO 10216 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:02:20.987  INFO 10216 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:02:20.995  INFO 10216 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:02:21.055  INFO 10216 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:02:21.061  INFO 10216 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:02:21.157  INFO 10216 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:02:25.816  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:02:25.886  INFO 10216 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:02:25.892  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:02:26.031  INFO 10216 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:03:44.501  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11852 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:03:44.501 DEBUG 11852 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:03:44.501  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:03:45.771  INFO 11852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:03:45.771  INFO 11852 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:03:45.771  INFO 11852 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:03:45.841  INFO 11852 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:03:45.841  INFO 11852 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1310 ms
2020-03-04 10:03:46.521  INFO 11852 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:03:46.611  INFO 11852 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:03:46.971  INFO 11852 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:03:47.041  INFO 11852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:03:47.051  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.069 seconds (JVM running for 3.94)
2020-03-04 10:05:00.221  INFO 11852 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 10:05:00.221  INFO 11852 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 10:05:00.230  INFO 11852 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-04 10:05:00.264  INFO 11852 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:05:00.269  INFO 11852 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:05:00.294  INFO 11852 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:05:00.303  INFO 11852 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 10:05:00.304  WARN 11852 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 10:05:00.426  INFO 11852 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 10:05:00.701  INFO 11852 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:05:00.720  INFO 11852 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=0, endRow=9, total=10, pages=1, list=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:05:00.868  INFO 11852 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:08:40.969  INFO 11852 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:08:40.969  INFO 11852 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-04 10:08:40.979  INFO 11852 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-04 10:08:41.350  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11852 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:08:41.350 DEBUG 11852 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:08:41.350  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:08:41.720  WARN 11852 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:08:41.750  INFO 11852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:08:41.750  INFO 11852 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:08:41.750  INFO 11852 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:08:41.770  INFO 11852 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:08:41.770  INFO 11852 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 410 ms
2020-03-04 10:08:42.130  INFO 11852 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:08:42.190  INFO 11852 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:08:42.500  INFO 11852 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:08:42.540  INFO 11852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:08:42.540  INFO 11852 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.231 seconds (JVM running for 299.416)
2020-03-04 10:08:42.550  INFO 11852 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:09:46.129  INFO 10736 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10736 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:09:46.129 DEBUG 10736 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:09:46.129  INFO 10736 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:09:47.419  INFO 10736 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:09:47.429  INFO 10736 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:09:47.429  INFO 10736 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:09:47.499  INFO 10736 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:09:47.499  INFO 10736 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1340 ms
2020-03-04 10:09:48.189  INFO 10736 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:09:48.279  INFO 10736 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:09:48.629  INFO 10736 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:09:48.699  INFO 10736 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:09:48.709  INFO 10736 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.069 seconds (JVM running for 3.889)
2020-03-04 10:09:54.917  INFO 10736 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 10:09:54.917  INFO 10736 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 10:09:54.927  INFO 10736 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-04 10:09:54.959  INFO 10736 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:09:54.965  INFO 10736 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:09:54.990  INFO 10736 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:09:54.999  INFO 10736 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 10:09:55.000  WARN 10736 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 10:09:55.108  INFO 10736 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 10:09:55.375  INFO 10736 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:09:55.394  INFO 10736 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:09:55.634  INFO 10736 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:11:33.740  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10132 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:11:33.740 DEBUG 10132 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:11:33.740  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:11:35.043  INFO 10132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:11:35.053  INFO 10132 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:11:35.053  INFO 10132 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:11:35.133  INFO 10132 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:11:35.133  INFO 10132 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1353 ms
2020-03-04 10:11:35.863  INFO 10132 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:11:35.963  INFO 10132 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:11:36.333  INFO 10132 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:11:36.403  INFO 10132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:11:36.413  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.149 seconds (JVM running for 4.056)
2020-03-04 10:11:43.093  INFO 10132 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:11:43.468  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10132 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:11:43.468 DEBUG 10132 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:11:43.468  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:11:43.798  WARN 10132 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:11:43.838  INFO 10132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:11:43.838  INFO 10132 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:11:43.838  INFO 10132 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:11:43.848  INFO 10132 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:11:43.848  INFO 10132 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 380 ms
2020-03-04 10:11:44.198  INFO 10132 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:11:44.248  INFO 10132 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:11:44.528  INFO 10132 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:11:44.578  INFO 10132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:11:44.578  INFO 10132 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.143 seconds (JVM running for 12.219)
2020-03-04 10:11:44.578  INFO 10132 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:11:46.872  INFO 10132 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 10:11:46.872  INFO 10132 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 10:11:46.884  INFO 10132 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-04 10:11:46.917  INFO 10132 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:11:46.922  INFO 10132 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:11:46.958  INFO 10132 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:11:46.964  INFO 10132 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 10:11:46.965  WARN 10132 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 10:11:47.078  INFO 10132 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 10:11:47.269  INFO 10132 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:11:47.291  INFO 10132 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:11:47.486  INFO 10132 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:11:51.975  INFO 10132 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:11:51.975  INFO 10132 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:11:51.991  INFO 10132 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:11:52.057  INFO 10132 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:11:52.063  INFO 10132 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:11:52.159  INFO 10132 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:12:02.344  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:12:02.344 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:12:02.344  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:12:03.757  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:12:03.767  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:12:03.767  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:12:03.847  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:12:03.857  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1473 ms
2020-03-04 10:12:04.619  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:12:04.729  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:12:05.120  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:12:05.200  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:12:05.200  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.365 seconds (JVM running for 4.248)
2020-03-04 10:12:07.231  INFO 10492 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 10:12:07.232  INFO 10492 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 10:12:07.242  INFO 10492 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-03-04 10:12:07.276  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:12:07.282  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:12:07.309  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:12:07.313  INFO 10492 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 10:12:07.314  WARN 10492 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 10:12:07.429  INFO 10492 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 10:12:07.688  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:12:07.714  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:12:07.853  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:12:10.256  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:12:10.257  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:12:10.269  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:12:10.352  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:12:10.358  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=18, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=18, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=20, title=四级过了, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8081/img/upload/1583226131824英语四级.png), firstPicture=http://localhost:8081/img/upload/1583225832712英语四级.png, description=哈哈哈哈哈四级过了, flag=原创, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-03-03 17:32:02, updateTime=2020-03-03 18:36:30, type=Type(id=6, name=未来展望, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:12:10.447  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:12:13.721  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[20, {}]}
2020-03-04 10:12:13.741  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:12:36.564  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 10:12:36.564  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 10:12:43.075  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:43.114  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:44.473  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:44.510  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:44.880  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:44.910  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:45.469  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:45.537  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:46.248  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:46.279  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:47.944  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/deleteblog/20/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.deleteBlogByid', args=[20, 4, org.apache.catalina.connector.RequestFacade@1a1d173]}
2020-03-04 10:12:47.972  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/4/5/true
2020-03-04 10:12:47.979  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:48.006  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:49.093  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/deleteblog/19/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.deleteBlogByid', args=[19, 4, org.apache.catalina.connector.RequestFacade@1a1d173]}
2020-03-04 10:12:49.122  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/4/5/true
2020-03-04 10:12:49.129  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:49.151  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:54.967  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:54.996  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:58.800  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:58.837  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:59.292  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:59.318  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:12:59.613  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:12:59.647  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:13:00.092  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/4/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[4, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:00.121  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:13:06.622  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:13:06.626  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:13:06.642  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:13:06.719  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:13:06.725  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=201, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:13:06.830  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:13:16.193  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:13:16.227  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:13:17.821  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:13:17.850  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:13:20.004  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/4', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 4, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:20.097  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-04 10:13:20.110  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=203, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.apache.catalina.session.StandardSessionFacade@97af08, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=11, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=11, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=203, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:13:20.192  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:types
2020-03-04 10:13:24.033  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/type/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTypeController.toTypes', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:24.052  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/types
2020-03-04 10:13:24.063  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/types', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTypes', args=[PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@97af08, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=2, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:13:24.109  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:types
2020-03-04 10:13:26.477  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:13:26.505  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:13:30.494  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tag/1/10/true/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.VisitorTagController.toTags', args=[1, 10, true, 1, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:30.598  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/tags
2020-03-04 10:13:30.607  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toTags', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=204, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.apache.catalina.session.StandardSessionFacade@97af08, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=10, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=10, pages=1, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
    ```java
public static void main(String[] args){}
```
![](http://localhost:8080/img/upload/yemian.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=204, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-03 20:49:22, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=8, title=sadwqaweq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖去二多群二无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=false, recommened=false, createTime=2020-01-29 13:16:30, updateTime=2020-01-29 13:16:30, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:13:30.633  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:tags
2020-03-04 10:13:37.528  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:13:37.559  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:13:41.641  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/3/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[3, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:41.666  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:13:42.681  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/2/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[2, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:42.708  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:13:43.319  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:43.354  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:13:44.680  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/1/1/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[1, 1, 1, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:13:44.695  INFO 10492 --- [http-nio-8081-exec-5] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-04 10:14:25.084  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 1, 4, org.apache.catalina.session.StandardSessionFacade@97af08, update]}
2020-03-04 10:14:25.102  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-04 10:14:25.109  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:14:25.145  INFO 10492 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:14:28.246  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:14:28.246  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:14:28.254  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:14:28.297  INFO 10492 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:14:28.302  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=205, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:25:14, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=205, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:25:14, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:14:28.382  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:14:29.571  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:14:29.607  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:15:05.148  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/editblog/1/1/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.editBlog', args=[1, 1, 1, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:15:05.164  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/createblog/1
2020-03-04 10:15:39.714  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/insertblog', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.insertblog', args=[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=null, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=null, updateTime=null, type=null, tags=null, userid=1, comments=null), 1, 4, org.apache.catalina.session.StandardSessionFacade@97af08, update]}
2020-03-04 10:15:39.735  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogpage/1/5/true
2020-03-04 10:15:39.744  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@97af08]}
2020-03-04 10:15:39.779  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 10:15:42.887  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:15:42.888  INFO 10492 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 10:15:42.901  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 10:15:42.954  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:15:42.959  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=206, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=206, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:15:43.055  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:15:43.599  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlog', args=[1, {}]}
2020-03-04 10:15:43.627  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:blog
2020-03-04 10:15:55.011  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-04 10:15:55.048  INFO 10492 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:15:55.057  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:15:55.153  INFO 10492 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:15:56.788  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-04 10:15:56.833  INFO 10492 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:15:56.839  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:15:56.939  INFO 10492 --- [http-nio-8081-exec-10] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:15:58.860  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/2/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[2, 10, true, {}]}
2020-03-04 10:15:58.909  INFO 10492 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 10:15:58.915  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=2, pageSize=10, size=7, startRow=11, endRow=17, total=17, pages=2, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=14, title=其问题无前儿童, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=爱过他是法人, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:12:33, updateTime=2020-01-29 13:12:33, type=Type(id=4, name=技能提升, blogs=null), tags=[], userid=1, comments=[]), Blog(id=7, title=wawsdeawq, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=sarfqaw , flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:04:04, updateTime=2020-01-29 13:04:04, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=6, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=无IQ安尔碘我爱渠道和耦合 , flag=原创, views=3, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:18:44, updateTime=2020-01-28 21:18:44, type=Type(id=13, name=职场知识, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=5, title=这是一个测试, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    ![](http://localhost:8080/img/upload/头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试，请看, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 21:00:42, updateTime=2020-01-28 21:00:42, type=Type(id=9, name=求职技巧, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null), Tag(id=6, name=javaScript, blogs=null)], userid=1, comments=[]), Blog(id=4, title=Java中测试, content=# Java中测试
哈哈哈哈**哈哈哈哈**, firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=4, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-28 14:52:02, updateTime=2020-01-28 14:52:02, type=Type(id=14, name=人生感悟, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=3, title=12345, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    
safdasfasfa
![](http://localhost:8080/img/upload/touxiuang.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=这是一个测试, flag=原创, views=18, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 21:20:47, updateTime=2020-01-27 21:20:47, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=2, title=Java中的数据类型, content=# Java中的数据类型
我们知道Java是强类型语言，那么肯定对应的也就有弱类型语言，以下介绍强类型语言与弱类型语言的区别：
　　强类型语言：
　　　　强类型语言也就是强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过转换，那么该变量就永远是此数据类型了。（如：定义一个整型变量叫“a”，程序也只会认为“a”这个变量是整型，并且不可能把它来当作字符来处理。）强类型语言也是类型安全的语言。

　　弱类型语言：

　　　　弱类型语言也就是同强类型语言相对的语言，也就是说它的数据类型是可以被忽略的语言。它与强类型语言定义的语言完全是相反的，它的一个变量可以被定义为多种数据类型，而且不用进行转换。（如：定义一个变量“a”，这个“a”可以被赋值整型，又可以被赋值字符型，还可以被赋值为其他类型。）弱类型语言对应的是类型不安全的语言。

　　强类型语言在速度上可能会稍逊色于弱类型语言，但是强类型语言带来的严谨性能够有效的避免许多错误的发生。（另外，判断一个语言是不是类型安全的与该语言是不是动态类型的没有关系。）

　　（如：Java是静态语言，是强类型语言（是类型安全的语言）。Python是动态语言，是强类型语言（是类型安全的语言）。JavaScript是动态语言，是弱类型语言（是类型不安全的语言）。）

 

Java中的数据类型：

　　Java中的数据类型分为两类：

 

　　　　基本数据类型（Primitive Type） 

　　　　引用数据类型（Reference Type）

 

　　

 

　　基本数据类型：

　　　　基本类型共有八种，其中包括六种数值型与两个非数值型。基本数据类型的信息如下：

 
Java中基本数据类型 数据类型 	大小（单位：bit/位） 	所属包装类 	最小范围 	最大范围
byte 	8 	java.lang.Byte 	-128 	+127
short 	2byte = 16 	java.langShort 	-32768 	+32767
int 	4byte = 32 	java.lang.Integer 	-2^31 	+2^31-1
long 	8byte = 64 	java.lang.Long 	-2^63 	+2^63-1
float 	4buye = 32 	java.lang.Float 	-3.4 * 10^38 	+3.4 * 10^38
double 	8byte = 64 	java.lang.Double 	-1.7 * 10^308 	+1.7 * 10^308
char 	2byte = 16 	java.lang.Character 	0 	65535
boolean 	所占大小不明确 	java.lang.Boolean 	只有"true"和"false"两个取值

（注解：内存的存储最小单位是“bit/位”，1byte/字节 = 8bit/位）

 

 

（注意：在Java中定义的八种基本数据类型中，除了其它七种类型都有明确的内存占用字节数外，boolean类型没有给出明确的占用字节数，因为对虚拟机来说根本就不存在 boolean 这个类型，在虚拟机中boolean类型的值：false/true是用0/1来表示的，所以不确定。原因如下：）

　　大小为1bit：

　　　　boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。

　　大小为1byte：

　　　　虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。

　　大小为4byte：

　　　　来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。

　　显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。所以boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。

　　

 

　　整数类型：

　　　　Java中整数类型一般默认为int型，整型有四种表示形式：①二进制（锋二进一）、②八进制（锋八进一）、③十进制（也就是我们生活中所表达的类型，锋十进一）、④十六进制（锋十六进一）；

　　　　（注意：十六进制从第十位开始就不是数字了，而是字母，如：10就为A,11为B，16为10，28为1C）

　　　　声明long型需要在后面加上“L”。

　　　　如：long a = 5555555555L;

　　　　（注意：若声明了long类型，且该值在int范围内，则后面可以不加“L”）

　　浮点类型：

　　　　Java中浮点类型一般默认为double型

　　　　　　float：单精度浮点（小数点后可精确到7位有效数字）

　　　　　　double：双精度浮点（小数点后可精确到float的二倍有效数字）

　　　　声明float型需要在后面加上“f”或“F”，如：3.14f 或 3.14F；

　　　　（注意：浮点类型存在舍入误差，如果需要不产生误差的小数类型用来精确计算可以使用java.math包下的BigDecimal类）

　　字符型：

　　　　我们知道Java中的字符是基于Unicode码表的，所以字符型是用来表示Unicode编码中的字符的，范围在：“0 - 65535”，也就是说char也可以用数字来表示；

　　　　字符型在赋值的时候与其他类型有点区别，char作为单个字符型，在赋值时要加上单引号。

　　　　如：char a = 'A';

　　布尔型：

　　　　boolean型只有两个值，true（正确/真）和false（错误/假）；一般用boolean来做判断或者接收判断结果；
, firstPicture=https://unsplash.it/800/450?image=1005, description=Java的基本数据类型也叫做内置类型是java语言本身提供的数据类型，是引用其他类型的基础。Java的基本数据类型分为：整数类型、浮点类型、字符类型、布尔类型这四个类型。, flag=原创, views=19, appreciation=true, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-27 16:46:40, updateTime=2020-01-27 16:46:40, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[])], prePage=1, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 10:15:59.004  INFO 10492 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:index
2020-03-04 10:16:24.879  INFO 10492 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:16:24.879  INFO 10492 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-04 10:16:24.889  INFO 10492 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-04 10:16:25.300  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:16:25.300 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:16:25.300  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:16:25.630  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:16:25.680  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:16:25.680  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:16:25.680  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:16:25.690  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 10:16:25.690  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 390 ms
2020-03-04 10:16:25.730  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f78258]
2020-03-04 10:16:25.730  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 10:16:25.740  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 10:16:25.790 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f78258]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f78258]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f78258]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/myblog/pojo/Comment
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 38 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.myblog.pojo.Comment
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:148)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 42 common frames omitted

2020-03-04 10:16:29.470  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:16:29.470 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:16:29.470  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:16:29.860  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:16:29.900  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:16:29.900  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:16:29.900  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:16:29.910  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:16:29.910  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 440 ms
2020-03-04 10:16:30.340  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:16:30.400  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:16:30.670  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:16:30.710  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:16:30.710  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.286 seconds (JVM running for 269.738)
2020-03-04 10:16:30.710  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:16:33.233  INFO 11220 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11220 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:16:33.233 DEBUG 11220 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:16:33.233  INFO 11220 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 10:16:36.273  INFO 11220 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:16:36.453  INFO 11220 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:16:36.913  INFO 11220 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 4.192 seconds (JVM running for 5.433)
2020-03-04 10:16:37.606  INFO 11220 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:48:54.016  INFO 10492 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:48:54.677  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:48:54.677 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:48:54.687  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:48:57.616  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:48:57.676  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:48:57.676  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:48:57.677  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:48:57.707  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:48:57.708  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3018 ms
2020-03-04 10:48:58.219  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:48:58.278  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:48:58.574  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:48:58.638  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:48:58.641  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 4.126 seconds (JVM running for 2217.528)
2020-03-04 10:48:58.642  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:49:02.221  INFO 10492 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:49:02.613  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:49:02.614 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:49:02.614  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:49:02.849  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:49:02.882  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:49:02.882  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:49:02.883  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:49:02.895  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:49:02.896  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 279 ms
2020-03-04 10:49:02.907  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3a60d4]
2020-03-04 10:49:02.907  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 10:49:02.913  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 10:49:02.914 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3a60d4]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'commentServiceImpl': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3a60d4]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.myblog.service.CommentServiceImpl] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3a60d4]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/myblog/pojo/Comment
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 38 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.myblog.pojo.Comment
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:148)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 42 common frames omitted

2020-03-04 10:49:06.059  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:49:06.059 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:49:06.059  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:49:06.385  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:49:06.420  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:49:06.421  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:49:06.421  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:49:06.435  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:49:06.435  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 374 ms
2020-03-04 10:49:06.789  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:49:06.840  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:49:07.139  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:49:07.193  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:49:07.194  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.172 seconds (JVM running for 2226.081)
2020-03-04 10:49:07.195  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:49:10.599  INFO 11040 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11040 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:49:10.600 DEBUG 11040 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:49:10.600  INFO 11040 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 10:49:14.390  INFO 11040 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:49:14.622  INFO 11040 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:49:15.272  INFO 11040 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 5.477 seconds (JVM running for 7.066)
2020-03-04 10:49:15.753  INFO 11040 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:00.206  INFO 10492 --- [Thread-22] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:08.959  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:50:08.959 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:50:08.959  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:50:09.157  WARN 10492 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 10:50:09.204  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:50:09.237  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:50:09.238  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:50:09.238  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:50:09.259  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:50:09.259  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 297 ms
2020-03-04 10:50:09.334  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:09.352  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:50:09.437  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 10:50:09.437  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:09.437  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 10:50:09.443  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 10:50:09.445 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd$$FastClassBySpringCGLIB$$9e64ba0a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 10:50:13.209  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:50:13.268 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:50:13.268  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:50:13.544  WARN 10492 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 10:50:13.680  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:50:13.719  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:50:13.719  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:50:13.720  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:50:13.734  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-4].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:50:13.734  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 463 ms
2020-03-04 10:50:13.791  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.myblog.service.BlogService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-04 10:50:13.791  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 10:50:13.797  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 10:50:13.957 ERROR 10492 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field blogService in com.myblog.controller.BlogController required a bean of type 'com.myblog.service.BlogService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.myblog.service.BlogService' in your configuration.

2020-03-04 10:50:16.955  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:50:16.955 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:50:16.956  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:50:17.170  WARN 10492 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 10:50:17.223  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:50:17.257  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:50:17.257  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:50:17.258  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:50:17.274  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-5].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:50:17.274  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 316 ms
2020-03-04 10:50:17.341  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:17.438  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:50:17.503  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 10:50:17.503  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:17.504  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 10:50:17.508  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 10:50:17.510 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd$$FastClassBySpringCGLIB$$9e64ba0a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 10:50:20.014  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:50:20.015 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:50:20.015  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 10:50:20.389  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 10:50:20.424  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 10:50:20.425  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 10:50:20.425  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 10:50:20.445  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-6].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 10:50:20.445  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 428 ms
2020-03-04 10:50:20.852  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:20.908  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:50:21.203  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 10:50:21.267  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 10:50:21.268  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.286 seconds (JVM running for 2300.15)
2020-03-04 10:50:21.269  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 10:50:22.653  INFO 13756 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13756 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 10:50:22.654 DEBUG 13756 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 10:50:22.654  INFO 13756 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 10:50:25.709  INFO 13756 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 10:50:25.920  INFO 13756 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 10:50:26.441  INFO 13756 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 4.489 seconds (JVM running for 5.617)
2020-03-04 10:50:26.700  INFO 13756 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:11:45.638  INFO 10492 --- [Thread-30] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:11:46.060  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:11:46.061 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:11:46.061  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:11:47.061  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:11:47.109  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:11:47.109  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:11:47.110  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:11:47.132  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-6].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:11:47.132  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1068 ms
2020-03-04 11:11:47.572  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:11:47.629  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:11:47.932  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:11:47.996  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:11:47.997  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.988 seconds (JVM running for 3586.79)
2020-03-04 11:11:47.998  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:12:08.681  INFO 10492 --- [Thread-47] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:12:09.065  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:12:09.066 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:12:09.066  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:12:09.400  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:12:09.430  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:12:09.431  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:12:09.431  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:12:09.444  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-6].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:12:09.444  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 376 ms
2020-03-04 11:12:09.780  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:12:09.830  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:12:10.099  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:12:10.184  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:12:10.185  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.151 seconds (JVM running for 3608.976)
2020-03-04 11:12:10.186  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:12:23.423  INFO 10492 --- [Thread-52] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:12:23.855  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:12:23.855 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:12:23.855  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:12:24.184  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:12:24.214  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:12:24.215  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:12:24.215  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:12:24.229  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-6].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:12:24.229  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 371 ms
2020-03-04 11:12:24.580  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:12:24.631  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:12:24.906  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:12:24.960  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:12:24.960  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.133 seconds (JVM running for 3623.75)
2020-03-04 11:12:24.961  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:14:46.836  INFO 10492 --- [Thread-57] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:14:47.286  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:14:47.286 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:14:47.286  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:14:48.047  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:14:48.089  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:14:48.089  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:14:48.089  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:14:48.104  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-6].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:14:48.104  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 815 ms
2020-03-04 11:14:48.583  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:14:48.643  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:14:48.934  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:14:49.010  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:14:49.011  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.777 seconds (JVM running for 3767.791)
2020-03-04 11:14:49.012  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:15:32.295  INFO 10492 --- [Thread-62] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:15:49.230  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:15:49.231 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:15:49.231  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:15:49.451  WARN 10492 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 11:15:49.494  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:15:49.526  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:15:49.527  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:15:49.527  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:15:49.547  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-7].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:15:49.547  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 314 ms
2020-03-04 11:15:49.556  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogInputController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.controller.BlogInputController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@da6c2e]
2020-03-04 11:15:49.557  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 11:15:49.561  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 11:15:49.562 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogInputController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.myblog.controller.BlogInputController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@da6c2e]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.myblog.controller.BlogInputController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@da6c2e]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/myblog/pojo/Blog
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.myblog.pojo.Blog
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:148)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 29 common frames omitted

2020-03-04 11:15:54.239  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:15:54.239 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:15:54.240  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:15:54.622  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:15:54.655  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:15:54.656  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:15:54.656  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:15:54.677  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-8].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:15:54.677  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 435 ms
2020-03-04 11:15:55.069  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:15:55.132  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:15:55.433  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:15:55.499  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:15:55.500  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.292 seconds (JVM running for 3834.275)
2020-03-04 11:15:55.502  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:15:58.019  INFO 4432 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 4432 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:15:58.020 DEBUG 4432 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:15:58.021  INFO 4432 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 11:16:02.235  INFO 4432 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:16:02.439  INFO 4432 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:16:02.936  INFO 4432 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 5.371 seconds (JVM running for 7.599)
2020-03-04 11:16:03.693  INFO 4432 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:18:40.053  INFO 10492 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat-8].[localhost].[/]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 11:18:40.053  INFO 10492 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 11:18:40.062  INFO 10492 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-04 11:21:53.245  INFO 10492 --- [Thread-67] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:09.614  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:22:09.614 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:22:09.615  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:22:09.818  WARN 10492 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 11:22:09.867  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:22:09.899  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:22:09.900  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:22:09.900  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:22:09.914  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-9].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 11:22:09.914  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 297 ms
2020-03-04 11:22:09.971  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:09.985  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:22:10.059  WARN 10492 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 11:22:10.059  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:10.060  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 11:22:10.065  INFO 10492 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 11:22:10.066 ERROR 10492 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd$$FastClassBySpringCGLIB$$9e64ba0a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a9c41ccd.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 11:22:17.237  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:22:17.238 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:22:17.238  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:22:17.614  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:22:17.666  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:22:17.667  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:22:17.667  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:22:17.682  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-10].[localhost].[/]    : Initializing Spring embedded WebApplicationContext
2020-03-04 11:22:17.682  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 442 ms
2020-03-04 11:22:18.189  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:18.246  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:22:18.515  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:22:18.606  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:22:18.607  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.4 seconds (JVM running for 4217.356)
2020-03-04 11:22:18.608  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:22:20.783  INFO 3812 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 3812 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:22:20.784 DEBUG 3812 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:22:20.784  INFO 3812 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 11:22:23.572  INFO 3812 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:23.781  INFO 3812 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:22:24.293  INFO 3812 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.925 seconds (JVM running for 5.13)
2020-03-04 11:22:24.895  INFO 3812 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:35.705  INFO 10492 --- [Thread-78] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:36.098  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:22:36.098 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:22:36.098  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:22:36.445  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:22:36.486  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:22:36.487  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:22:36.487  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:22:36.508  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-10].[localhost].[/]    : Initializing Spring embedded WebApplicationContext
2020-03-04 11:22:36.508  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 407 ms
2020-03-04 11:22:36.864  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:22:36.914  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:22:37.176  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:22:37.228  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:22:37.229  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.162 seconds (JVM running for 4235.976)
2020-03-04 11:22:37.230  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:25:59.318  INFO 10492 --- [Thread-89] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:25:59.753  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:25:59.754 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:25:59.754  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:26:00.118  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:26:00.151  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:26:00.151  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:26:00.152  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:26:00.165  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-10].[localhost].[/]    : Initializing Spring embedded WebApplicationContext
2020-03-04 11:26:00.166  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 409 ms
2020-03-04 11:26:00.609  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:26:00.666  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:26:00.954  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:26:01.004  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:26:01.004  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.306 seconds (JVM running for 4439.738)
2020-03-04 11:26:01.005  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:26:12.098  INFO 10492 --- [Thread-94] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:26:12.555  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 10492 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:26:12.555 DEBUG 10492 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:26:12.555  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:26:12.989  WARN 10492 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:26:13.035  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:26:13.037  INFO 10492 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:26:13.038  INFO 10492 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:26:13.053  INFO 10492 --- [restartedMain] o.a.c.c.C.[Tomcat-10].[localhost].[/]    : Initializing Spring embedded WebApplicationContext
2020-03-04 11:26:13.054  INFO 10492 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 495 ms
2020-03-04 11:26:13.595  INFO 10492 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:26:13.664  INFO 10492 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:26:14.099  INFO 10492 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:26:14.146  INFO 10492 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:26:14.146  INFO 10492 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.622 seconds (JVM running for 4452.879)
2020-03-04 11:26:14.148  INFO 10492 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:26:38.366  INFO 12448 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12448 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:26:38.367 DEBUG 12448 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:26:38.367  INFO 12448 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:26:39.980  INFO 12448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:26:39.992  INFO 12448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:26:39.992  INFO 12448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:26:40.080  INFO 12448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 11:26:40.081  INFO 12448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1672 ms
2020-03-04 11:26:40.843  INFO 12448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:26:40.975  INFO 12448 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:26:41.410  INFO 12448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:26:41.486  INFO 12448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:26:41.489  INFO 12448 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.595 seconds (JVM running for 4.638)
2020-03-04 11:27:02.920  INFO 12448 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 11:27:02.920  INFO 12448 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 11:27:02.929  INFO 12448 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-03-04 11:27:02.968  INFO 12448 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 11:27:02.973  INFO 12448 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 11:27:03.016  INFO 12448 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 11:27:03.021  INFO 12448 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 11:27:03.022  WARN 12448 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 11:27:03.204  INFO 12448 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 11:27:03.499  INFO 12448 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 11:27:03.552  INFO 12448 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/;jsessionid=942CFCBAAE946548B7BD58702B4FAC8D', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 11:27:03.733  INFO 12448 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 11:27:08.829  INFO 12448 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 11:27:08.830  INFO 12448 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 11:27:14.559  INFO 12448 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@163a9d8]}
2020-03-04 11:27:14.621  INFO 12448 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 11:27:24.478  INFO 12448 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1874f4e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@19e713c]}
2020-03-04 11:27:24.493  INFO 12448 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583292444484Headportrait.jpg}
2020-03-04 11:29:10.194  INFO 13044 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13044 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:29:10.199 DEBUG 13044 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:29:10.199  INFO 13044 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 11:29:12.584  INFO 13044 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:29:12.846  INFO 13044 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:29:13.793  INFO 13044 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 4.026 seconds (JVM running for 5.219)
2020-03-04 11:29:14.459  INFO 13044 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:42:43.604  INFO 12520 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 12520 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:42:43.606 DEBUG 12520 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:42:43.606  INFO 12520 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 11:42:45.861  INFO 12520 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:42:46.047  INFO 12520 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:42:46.527  INFO 12520 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.32 seconds (JVM running for 4.207)
2020-03-04 11:42:46.746  INFO 12520 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:47:30.414  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:47:30.415 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:47:30.415  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:47:31.902  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:47:31.913  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:47:31.913  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:47:31.986  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 11:47:31.987  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1531 ms
2020-03-04 11:47:32.732  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:47:32.835  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:47:33.212  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:47:33.296  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:47:33.301  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.367 seconds (JVM running for 4.275)
2020-03-04 11:47:50.925  INFO 12332 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 11:47:50.925  INFO 12332 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 11:47:50.933  INFO 12332 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-03-04 11:47:50.971  INFO 12332 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 11:47:50.977  INFO 12332 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 11:47:51.021  INFO 12332 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 11:47:51.028  INFO 12332 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 11:47:51.029  WARN 12332 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 11:47:51.166  INFO 12332 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 11:47:51.430  INFO 12332 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 11:47:51.524  INFO 12332 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 11:47:51.693  INFO 12332 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 11:47:55.650  INFO 12332 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 11:47:55.651  INFO 12332 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 11:49:20.776  INFO 12332 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@12e904a]}
2020-03-04 11:49:20.825  INFO 12332 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 11:49:42.122  INFO 12332 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f43d37, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@175cce1]}
2020-03-04 11:49:42.127  INFO 12332 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=0:0:0:0:0:0:0:1:8081/img/upload/1583293782126}
2020-03-04 11:49:48.223  INFO 12332 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1a20bd, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@a78eee]}
2020-03-04 11:49:48.226  INFO 12332 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=0:0:0:0:0:0:0:1:8081/img/upload/1583293788223Headportrait.jpg}
2020-03-04 11:51:49.616  INFO 12332 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:51:49.617  INFO 12332 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-04 11:51:49.666  INFO 12332 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-04 11:51:50.174  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:51:50.175 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:51:50.175  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:51:51.025  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:51:51.093  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:51:51.094  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:51:51.094  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:51:51.119  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 11:51:51.119  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 941 ms
2020-03-04 11:51:51.564  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:51:51.625  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:51:51.927  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:51:51.982  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:51:51.983  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.884 seconds (JVM running for 262.939)
2020-03-04 11:51:51.985  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 11:53:06.444  INFO 12332 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 11:53:06.825  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 11:53:06.825 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 11:53:06.825  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 11:53:07.228  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 11:53:07.261  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 11:53:07.262  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 11:53:07.262  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 11:53:07.288  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 11:53:07.288  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 459 ms
2020-03-04 11:53:07.667  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 11:53:07.721  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 11:53:07.995  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 11:53:08.048  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 11:53:08.048  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.263 seconds (JVM running for 338.999)
2020-03-04 11:53:08.049  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:36:28.533  INFO 12332 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:36:28.953  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:36:28.953 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:36:28.953  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:36:29.812  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:36:29.852  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:36:29.853  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:36:29.853  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:36:29.874  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 13:36:29.875  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 919 ms
2020-03-04 13:36:30.330  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:36:30.389  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:36:30.676  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:36:30.729  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:36:30.729  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.844 seconds (JVM running for 6541.25)
2020-03-04 13:36:30.731  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:39:30.140  INFO 13688 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13688 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:39:30.141 DEBUG 13688 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:39:30.141  INFO 13688 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 13:39:32.750  INFO 13688 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:39:32.974  INFO 13688 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:39:33.493  INFO 13688 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.851 seconds (JVM running for 5.075)
2020-03-04 13:39:34.069  INFO 13688 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:40:44.804  INFO 11360 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11360 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:40:44.805 DEBUG 11360 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:40:44.806  INFO 11360 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 13:40:47.122  INFO 11360 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:40:47.268  INFO 11360 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:40:47.780  INFO 11360 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.452 seconds (JVM running for 4.37)
2020-03-04 13:40:47.994  INFO 11360 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:49:42.985  INFO 13592 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13592 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:49:42.986 DEBUG 13592 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:49:42.986  INFO 13592 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 13:49:45.369  INFO 13592 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:49:45.514  INFO 13592 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:49:46.033  INFO 13592 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.487 seconds (JVM running for 4.448)
2020-03-04 13:49:46.243  INFO 13592 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:50:17.053  INFO 12332 --- [Thread-19] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:50:17.413  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:50:17.414 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:50:17.414  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:50:17.752  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:50:17.785  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:50:17.786  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:50:17.786  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:50:17.804  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 13:50:17.804  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 387 ms
2020-03-04 13:50:18.179  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:50:18.233  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:50:18.520  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:50:18.571  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:50:18.572  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.193 seconds (JVM running for 7369.035)
2020-03-04 13:50:18.573  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:51:45.111  INFO 12332 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:51:45.493  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:51:45.493 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:51:45.493  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:51:45.830  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:51:45.862  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:51:45.863  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:51:45.863  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:51:45.882  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 13:51:45.882  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 386 ms
2020-03-04 13:51:46.221  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:51:46.275  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:51:46.573  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:51:46.630  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:51:46.630  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.174 seconds (JVM running for 7457.088)
2020-03-04 13:51:46.631  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:54:26.670  INFO 12332 --- [Thread-29] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:54:27.021  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:54:27.022 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:54:27.022  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:54:27.372  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:54:27.404  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:54:27.405  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:54:27.405  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:54:27.424  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 13:54:27.424  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 399 ms
2020-03-04 13:54:27.761  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:54:27.813  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:54:28.093  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:54:28.145  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:54:28.146  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.162 seconds (JVM running for 7618.592)
2020-03-04 13:54:28.147  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:54:30.028  INFO 14060 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 14060 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:54:30.029 DEBUG 14060 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:54:30.029  INFO 14060 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 13:54:32.350  INFO 14060 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:54:32.495  INFO 14060 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:54:33.009  INFO 14060 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.439 seconds (JVM running for 4.491)
2020-03-04 13:54:33.226  INFO 14060 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:55:44.874  INFO 12332 --- [Thread-34] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:55:45.239  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:55:45.240 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:55:45.240  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:55:45.612  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:55:45.647  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:55:45.647  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:55:45.647  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:55:45.667  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 13:55:45.667  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 424 ms
2020-03-04 13:55:46.037  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:55:46.096  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:55:46.389  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:55:46.441  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:55:46.441  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.24 seconds (JVM running for 7696.882)
2020-03-04 13:55:46.442  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:57:38.457  INFO 12332 --- [Thread-39] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:57:49.014  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:57:49.015 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:57:49.015  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:57:49.272  WARN 12332 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 13:57:49.316  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:57:49.347  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:57:49.347  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:57:49.347  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:57:49.364  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 13:57:49.364  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 347 ms
2020-03-04 13:57:49.423  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:57:49.435  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:57:49.498  WARN 12332 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 13:57:49.498  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:57:49.499  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 13:57:49.504  INFO 12332 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 13:57:49.526 ERROR 12332 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$830dd8d1.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$830dd8d1$$FastClassBySpringCGLIB$$69a2f4be.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$830dd8d1.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 13:57:53.906  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:57:53.906 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:57:53.908  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:57:54.367  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:57:54.418  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:57:54.418  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:57:54.419  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:57:54.437  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 13:57:54.437  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 517 ms
2020-03-04 13:57:55.340  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:57:55.457  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:57:56.086  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:57:56.146  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:57:56.147  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 2.28 seconds (JVM running for 7826.579)
2020-03-04 13:57:56.150  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:58:17.023  INFO 12332 --- [Thread-44] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:58:17.868  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:58:17.868 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:58:17.868  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:58:18.437  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:58:18.493  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:58:18.494  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:58:18.494  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:58:18.541  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 13:58:18.542  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 671 ms
2020-03-04 13:58:19.175  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:58:19.269  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:58:19.688  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:58:19.789  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:58:19.790  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.995 seconds (JVM running for 7850.22)
2020-03-04 13:58:19.791  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:58:24.467  INFO 12332 --- [Thread-55] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 13:58:25.379  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:58:25.379 DEBUG 12332 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:58:25.379  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 13:58:25.836  WARN 12332 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 13:58:25.928  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 13:58:25.930  INFO 12332 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 13:58:25.931  INFO 12332 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 13:58:25.960  INFO 12332 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 13:58:25.960  INFO 12332 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 578 ms
2020-03-04 13:58:26.489  INFO 12332 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:58:26.564  INFO 12332 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:58:26.965  INFO 12332 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 13:58:27.032  INFO 12332 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 13:58:27.034  INFO 12332 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.691 seconds (JVM running for 7857.463)
2020-03-04 13:58:27.037  INFO 12332 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 13:58:31.507  INFO 6428 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 6428 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 13:58:31.512 DEBUG 6428 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 13:58:31.514  INFO 6428 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 13:58:35.545  INFO 6428 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 13:58:35.877  INFO 6428 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 13:58:36.670  INFO 6428 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 6.075 seconds (JVM running for 7.852)
2020-03-04 13:58:37.975  INFO 6428 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:11:36.906  INFO 11640 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 11640 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:11:36.907 DEBUG 11640 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:11:36.907  INFO 11640 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:11:39.047  INFO 11640 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:11:39.057  INFO 11640 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:11:39.057  INFO 11640 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:11:39.152  INFO 11640 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:11:39.153  INFO 11640 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2201 ms
2020-03-04 14:11:40.004  INFO 11640 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:11:40.159  INFO 11640 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:11:40.556  INFO 11640 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:11:40.673  INFO 11640 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:11:40.682  INFO 11640 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 4.383 seconds (JVM running for 5.457)
2020-03-04 14:11:52.569  INFO 11640 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 14:11:52.570  INFO 11640 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 14:11:52.581  INFO 11640 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-03-04 14:11:52.619  INFO 11640 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 14:11:52.625  INFO 11640 --- [http-nio-8081-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 14:11:52.680  INFO 11640 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 14:11:52.691  INFO 11640 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 14:11:52.692  WARN 11640 --- [http-nio-8081-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 14:11:52.906  INFO 11640 --- [http-nio-8081-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 14:11:53.239  INFO 11640 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 14:11:53.283  INFO 11640 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 14:11:53.485  INFO 11640 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 14:12:14.697  INFO 11640 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 14:12:14.697  INFO 11640 --- [http-nio-8081-exec-8] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 14:12:25.786  INFO 11640 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@34d6fd]}
2020-03-04 14:12:25.842  INFO 11640 --- [http-nio-8081-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 14:12:44.360  INFO 11640 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19e5355, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@169e01c]}
2020-03-04 14:12:44.369  INFO 11640 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=0:0:0:0:0:0:0:1:8081/img/upload/1583302364363Headportrait.jpg}
2020-03-04 14:12:52.359  INFO 11640 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@dd0594, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1a9db3]}
2020-03-04 14:12:52.361  INFO 11640 --- [http-nio-8081-exec-3] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=0:0:0:0:0:0:0:1:8081/img/upload/1583302372360Headportrait.jpg}
2020-03-04 14:13:52.687  INFO 14180 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 14180 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:13:52.688 DEBUG 14180 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:13:52.688  INFO 14180 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:13:54.502  INFO 14180 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:13:54.510  INFO 14180 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:13:54.510  INFO 14180 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:13:54.601  INFO 14180 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:13:54.601  INFO 14180 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1871 ms
2020-03-04 14:13:55.425  INFO 14180 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:13:55.574  INFO 14180 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:13:55.994  INFO 14180 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:13:56.097  INFO 14180 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:13:56.100  INFO 14180 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.91 seconds (JVM running for 4.897)
2020-03-04 14:14:57.471  INFO 14180 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 14:14:57.471  INFO 14180 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 14:14:57.485  INFO 14180 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-03-04 14:14:57.548  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 14:14:57.554  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 14:15:03.583  INFO 14180 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 14:15:03.584  WARN 14180 --- [http-nio-8081-exec-5] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 14:15:03.813  INFO 14180 --- [http-nio-8081-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 14:15:05.816  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@4a9358]}
2020-03-04 14:15:05.917  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 14:15:13.529  INFO 14180 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@90e35, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@f2608c]}
2020-03-04 14:15:13.539  INFO 14180 --- [http-nio-8081-exec-6] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=localhost:8081/img/upload/1583302513533Headportrait.jpg}
2020-03-04 14:15:26.544  INFO 14180 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1de3115, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1f645af]}
2020-03-04 14:15:26.546  INFO 14180 --- [http-nio-8081-exec-9] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=localhost:8081/img/upload/1583302526544QQ截图20200229224954.png}
2020-03-04 14:17:05.559  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@f70f66, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5ef322]}
2020-03-04 14:17:05.561  INFO 14180 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=localhost:8081/img/upload/1583302625559Sunny-Ngrok.png}
2020-03-04 14:21:19.807  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:21:19.808 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:21:19.809  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:21:21.823  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:21:21.834  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:21:21.834  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:21:21.933  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:21:21.934  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2089 ms
2020-03-04 14:21:22.776  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:21:22.881  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:21:23.282  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:21:23.411  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:21:23.414  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 4.138 seconds (JVM running for 5.404)
2020-03-04 14:21:37.169  INFO 13596 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 14:21:37.169  INFO 13596 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 14:21:37.184  INFO 13596 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-03-04 14:21:37.241  INFO 13596 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 14:21:37.247  INFO 13596 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 14:21:42.012  INFO 13596 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 14:21:42.014  WARN 13596 --- [http-nio-8081-exec-6] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 14:21:42.245  INFO 13596 --- [http-nio-8081-exec-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 14:21:43.945  INFO 13596 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@eabe07]}
2020-03-04 14:21:44.050  INFO 13596 --- [http-nio-8081-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 14:21:54.300  INFO 13596 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost:8081/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2e7c2e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1e09ea6]}
2020-03-04 14:21:54.306  INFO 13596 --- [http-nio-8081-exec-7] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:8081/img/upload/1583302914304Headportrait.jpg}
2020-03-04 14:22:14.927  INFO 13596 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:22:14.928  INFO 13596 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-04 14:22:14.941  INFO 13596 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-04 14:22:23.369  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:22:23.369 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:22:23.369  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:22:23.570  WARN 13596 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 14:22:23.615  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:22:23.646  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:22:23.647  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:22:23.647  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:22:23.661  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:22:23.661  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 289 ms
2020-03-04 14:22:23.725  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:22:23.737  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:22:23.799  WARN 13596 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 14:22:23.800  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:22:23.800  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:22:23.806  INFO 13596 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:22:25.036 ERROR 13596 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4$$FastClassBySpringCGLIB$$55bc19f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 14:22:30.238  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:22:30.239 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:22:30.239  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:22:30.683  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:22:30.713  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:22:30.713  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:22:30.714  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:22:30.728  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:22:30.729  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 487 ms
2020-03-04 14:22:31.429  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:22:31.488  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:22:31.796  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:22:31.845  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:22:31.845  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.64 seconds (JVM running for 73.831)
2020-03-04 14:22:31.847  INFO 13596 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 14:23:14.577  INFO 13596 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:23:14.950  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:23:14.950 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:23:14.950  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:23:15.294  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:23:15.330  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:23:15.330  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:23:15.331  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:23:15.349  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:23:15.349  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 396 ms
2020-03-04 14:23:15.730  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:23:15.787  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:23:16.061  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:23:16.112  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:23:16.112  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.196 seconds (JVM running for 118.095)
2020-03-04 14:23:16.113  INFO 13596 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 14:23:18.570  INFO 13596 --- [Thread-20] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:23:18.951  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:23:18.952 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:23:18.952  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:23:19.300  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:23:19.330  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-03-04 14:23:19.331  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:23:19.331  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:23:19.350  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:23:19.350  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 395 ms
2020-03-04 14:23:19.717  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:23:19.763  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:23:20.000  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:23:20.053  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-03-04 14:23:20.054  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.135 seconds (JVM running for 122.036)
2020-03-04 14:23:20.056  INFO 13596 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 14:23:20.764  INFO 14176 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 14176 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:23:20.765 DEBUG 14176 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:23:20.765  INFO 14176 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:23:23.307  INFO 14176 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:23:23.567  INFO 14176 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:23:24.085  INFO 14176 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.749 seconds (JVM running for 4.929)
2020-03-04 14:23:26.530  INFO 14176 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:36.729  INFO 13596 --- [Thread-25] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:37.159  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:28:37.159 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:28:37.159  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:28:37.351  WARN 13596 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.myblog]' package. Please check your configuration.
2020-03-04 14:28:37.399  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:28:37.431  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:28:37.431  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:28:37.432  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:28:37.445  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:28:37.446  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 284 ms
2020-03-04 14:28:37.512  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:37.527  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:28:37.583  WARN 13596 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
2020-03-04 14:28:37.584  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:37.584  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:28:37.590  INFO 13596 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:28:37.591 ERROR 13596 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.myblog.MyblogApplication.main(MyblogApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4$$FastClassBySpringCGLIB$$55bc19f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$651e6ee4.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\java\project in idea\Project with SpringBoot\myblog\target\classes\Mapper\BlogRepository.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:253)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:245)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'Comment'.  Cause: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: Comment
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-03-04 14:28:41.858  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:28:41.858 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:28:41.858  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:28:42.292  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:28:42.327  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:28:42.328  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:28:42.329  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:28:42.342  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:28:42.342  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 482 ms
2020-03-04 14:28:42.875  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:42.933  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:28:43.282  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:28:43.317  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:28:43.322  INFO 13596 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:28:43.323 ERROR 13596 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 80 was already in use.

Action:

Identify and stop the process that's listening on port 80 or configure this application to listen on another port.

2020-03-04 14:28:43.324  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:55.371  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:28:55.371 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:28:55.371  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:28:55.734  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:28:55.768  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:28:55.769  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:28:55.769  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:28:55.784  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-4].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:28:55.785  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 411 ms
2020-03-04 14:28:56.210  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:56.276  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:28:56.557  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:28:56.593  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:28:56.601  INFO 13596 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:28:56.602 ERROR 13596 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 80 was already in use.

Action:

Identify and stop the process that's listening on port 80 or configure this application to listen on another port.

2020-03-04 14:28:56.605  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:28:59.211  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 13596 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:28:59.212 DEBUG 13596 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:28:59.213  INFO 13596 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:28:59.881  WARN 13596 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:28:59.924  INFO 13596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:28:59.925  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:28:59.925  INFO 13596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:28:59.946  INFO 13596 --- [restartedMain] o.a.c.c.C.[Tomcat-5].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-03-04 14:28:59.947  INFO 13596 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 731 ms
2020-03-04 14:29:00.549  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:29:00.700  INFO 13596 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:29:01.159  INFO 13596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:29:01.186  INFO 13596 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:29:01.194  INFO 13596 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:29:01.194 ERROR 13596 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 80 was already in use.

Action:

Identify and stop the process that's listening on port 80 or configure this application to listen on another port.

2020-03-04 14:29:01.196  INFO 13596 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:29:01.597  INFO 13652 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13652 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:29:01.598 DEBUG 13652 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:29:01.599  INFO 13652 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:29:06.034  INFO 13652 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:29:06.285  INFO 13652 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:29:07.284  INFO 13652 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 6.226 seconds (JVM running for 7.84)
2020-03-04 14:29:07.784  INFO 13652 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:33:07.902  INFO 12020 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 12020 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:33:07.903 DEBUG 12020 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:33:07.903  INFO 12020 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:33:09.321  INFO 12020 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:33:09.331  INFO 12020 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:33:09.331  INFO 12020 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:33:09.417  INFO 12020 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:33:09.417  INFO 12020 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1470 ms
2020-03-04 14:33:10.166  INFO 12020 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:33:10.269  INFO 12020 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:33:10.716  INFO 12020 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:33:10.762  INFO 12020 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-03-04 14:33:10.769  INFO 12020 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-04 14:33:10.777 ERROR 12020 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 80 was already in use.

Action:

Identify and stop the process that's listening on port 80 or configure this application to listen on another port.

2020-03-04 14:33:10.781  INFO 12020 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:33:49.253  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 14220 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:33:49.254 DEBUG 14220 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:33:49.255  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:33:50.633  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:33:50.641  INFO 14220 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:33:50.641  INFO 14220 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:33:50.715  INFO 14220 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:33:50.715  INFO 14220 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1421 ms
2020-03-04 14:33:51.483  INFO 14220 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:33:51.595  INFO 14220 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:33:52.026  INFO 14220 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:33:52.101  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2020-03-04 14:33:52.104  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.387 seconds (JVM running for 4.313)
2020-03-04 14:34:00.000  INFO 14220 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-04 14:34:00.001  INFO 14220 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-03-04 14:34:00.014  INFO 14220 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-03-04 14:34:00.066  INFO 14220 --- [http-nio-80-exec-1] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, {pageInfo=PageInfo{pageNum=0, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=0, list=null, prePage=0, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=false, navigatePages=0, navigateFirstPage=0, navigateLastPage=0, navigatepageNums=null}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 14:34:00.072  INFO 14220 --- [http-nio-80-exec-1] com.myblog.aspect.LogAspect              : result:redirect:/blog/1/10/true
2020-03-04 14:34:00.103  INFO 14220 --- [http-nio-80-exec-2] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/blog/1/10/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toBlogIndex', args=[1, 10, true, {}]}
2020-03-04 14:34:00.108  INFO 14220 --- [http-nio-80-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-04 14:34:00.109  WARN 14220 --- [http-nio-80-exec-2] com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-03-04 14:34:00.236  INFO 14220 --- [http-nio-80-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-04 14:34:00.465  INFO 14220 --- [http-nio-80-exec-2] com.myblog.aspect.LogAspect              : result:redirect:/
2020-03-04 14:34:00.486  INFO 14220 --- [http-nio-80-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/;jsessionid=290B31BE340F89CA852B2D2BC1617E1B', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toIndex', args=[PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, {pageInfo=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=17, pages=2, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=17, pages=2, reasonable=true, pageSizeZero=false}[Blog(id=1, title=Java中的关键字, content=# Java中的关键字
1. 访问控制
1) private 私有的
private 关键字是访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）。 只能在声明 private（内部）类、方法或字段的类中引用这些类、方法或字段。在类的外部或者对于子类而言，它们是不可见的。 所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2) protected 受保护的
protected 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。可以在声明 protected 类、方法或字段的类、同一个包中的其他任何类以及任何子类（无论子类是在哪个包中声明的）中引用这些类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
3) public 公共的
public 关键字是可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。 可能只会在其他任何类或包中引用 public 类、方法或字段。所有类成员的默认访问范围都是 package 访问，也就是说，除非存在特定的访问控制修饰符，否则，可以从同一个包中的任何类访问类成员。
2. 类、方法和变量修饰符
1) abstract 声明抽象
abstract关键字可以修改类或方法。abstract类可以扩展（增加子类），但不能直接实例化。abstract方法不在声明它的类中实现，但必须在某个子类中重写。采用 abstract方法的类本来就是抽象类，并且必须声明为abstract。 
2) class类
class 关键字用来声明新的 Java 类，该类是相关变量和/或方法的集合。类是面向对象的程序设计方法的基本构造单位。类通常代表某种实际实体，如几何形状或人。类是对象的模板。每个对象都是类的一个实例。要使用类，通常使用 new 操作符将类的对象实例化，然后调用类的方法来访问类的功能。
3) extends 继承、扩展
extends 关键字用在 class 或 interface 声明中，用于指示所声明的类或接口是其名称后跟有 extends 关键字的类或接口的子类。子类继承父类的所有 public 和 protected 变量和方法。 子类可以重写父类的任何非 final 方法。一个类只能扩展一个其他类。
4) final 最终、不可改变
final 关键字可以应用于类，以指示不能扩展该类（不能有子类）。final 关键字可以应用于方法，以指示在子类中不能重写此方法。一个类不能同时是 abstract 又是 final。abstract 意味着必须扩展类，final 意味着不能扩展类。一个方法不能同时是 abstract 又是 final。abstract 意味着必须重写方法，final 意味着不能重写方法。
5) implements实现
implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现。类必须提供在接口中所声明的所有方法的实现。一个类可以实现多个接口。
6) interface 接口
interface 关键字用来声明新的 Java 接口，接口是方法的集合。
接口是 Java 语言的一项强大功能。任何类都可声明它实现一个或多个接口，这意味着它实现了在这些接口中所定义的所有方法。 
实现了接口的任何类都必须提供在该接口中的所有方法的实现。一个类可以实现多个接口。
7) native 本地
native 关键字可以应用于方法，以指示该方法是用 Java 以外的语言实现的。
8) new 新,创建
new 关键字用于创建类的新实例。 
new 关键字后面的参数必须是类名，并且类名的后面必须是一组构造方法参数（必须带括号）。 
参数集合必须与类的构造方法的签名匹配。 
= 左侧的变量的类型必须与要实例化的类或接口具有赋值兼容关系。
9) static 静态
static 关键字可以应用于内部类（在另一个类中定义的类）、方法或字段（类的成员变量）。 
通常，static 关键字意味着应用它的实体在声明该实体的类的任何特定实例外部可用。
static（内部）类可以被其他类实例化和引用（即使它是顶级类）。在上面的示例中，另一个类中的代码可以实例化 MyStaticClass 类，方法是用包含它的类名来限定其名称，如 MyClass.MyStaticClass。 
static 字段（类的成员变量）在类的所有实例中只存在一次。 
可以从类的外部调用 static 方法，而不用首先实例化该类。这样的引用始终包括类名作为方法调用的限定符。
模式：public final static <type> varName = <value>; 通常用于声明可以在类的外部使用的类常量。在引用这样的类常量时需要用类名加以限定。在上面的示例中，另一个类可以用 MyClass.MAX_OBJECTS 形式来引用 MAX_OBJECTS 常量。
10) strictfp 严格,精准
strictfp的意思是FP-strict，也就是说精确浮点的意思。在Java虚拟机进行浮点运算时，如果没有指定strictfp关键字时，Java的编译器以及运行环境在对浮点运算的表达式是采取一种近似于我行我素的行为来完成这些操作，以致于得到的结果往往无法令人满意。而一旦使用了strictfp来声明一个类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果想让浮点运算更加精确，而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。
可以将一个类、接口以及方法声明为strictfp，但是不允许对接口中的方法以及构造函数声明strictfp关键字
11) synchronized线程、同步
synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护。 
synchronized 关键字可防止代码的关键代码段一次被多个线程执行。 
如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定。 
如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。 
如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。
12) transient 短暂
transient 关键字可以应用于类的成员变量，以便指出该成员变量不应在包含它的类实例已序列化时被序列化。
当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
Java的serialization提供了一种持久化对象实例的机制。当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。
     transient是Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。
13) volatile 易失
volatile 关键字用于表示可以被多个线程异步修改的成员变量。 
注意：volatile 关键字在许多 Java 虚拟机中都没有实现。 volatile 的目标用途是为了确保所有线程所看到的指定变量的值都是相同的。
Java 语言中的 volatile 变量可以被看作是一种 “程度较轻的 synchronized”；与 synchronized 块相比，volatile 变量所需的编码较少，并且运行时开销也较少，但是它所能实现的功能也仅是 synchronized 的一部分。
```java
HelloWorld
```
``哈哈哈哈``, firstPicture=https://unsplash.it/800/450?image=1005, description=Java关键字是电脑语言里事先定义的，有特别意义的标识符，有时又叫保留字，还有特别意义的变量。Java的关键字对Java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名和参数。, flag=转载, views=207, appreciation=true, shareStatement=false, commentable=true, published=true, recommened=true, createTime=2020-01-27 16:53:36, updateTime=2020-03-04 10:39:15, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null)], userid=1, comments=[Comment(id=1, nickname=张三, email=123@qq.com, avatar=asadasd, createTime=Wed Jan 22 05:03:02 CST 2020, blogid=1, replyComments=[Comment(id=2, nickname=李四, email=456@qq.com, avatar=sadasd, createTime=Wed Jan 22 05:03:50 CST 2020, blogid=1, replyComments=null), Comment(id=5, nickname=白峰源, email=377092613@qq.com, avatar=测试, createTime=Tue Mar 03 23:09:07 CST 2020, blogid=1, replyComments=null)]), Comment(id=6, nickname=哈哈哈, email=123@qq.com, avatar=测试, createTime=Tue Mar 03 23:11:40 CST 2020, blogid=1, replyComments=[Comment(id=10, nickname=123, email=, avatar=我的, createTime=Tue Mar 03 23:22:06 CST 2020, blogid=1, replyComments=null)]), Comment(id=7, nickname=123, email=, avatar=哈哈哈哈, createTime=Tue Mar 03 23:16:54 CST 2020, blogid=1, replyComments=[Comment(id=8, nickname=456, email=, avatar=好的测试, createTime=Tue Mar 03 23:19:50 CST 2020, blogid=1, replyComments=null), Comment(id=9, nickname=789, email=, avatar=新的测试, createTime=Tue Mar 03 23:21:35 CST 2020, blogid=1, replyComments=null)])]), Blog(id=18, title=哈啊哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    

![](http://localhost:8080/img/upload/1580458886900头像.jpg), firstPicture=https://unsplash.it/800/450?image=1005, description=第五期非让我去染头发, flag=原创, views=3, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 16:52:22, updateTime=2020-01-31 16:52:22, type=Type(id=1, name=人生哲理, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=17, title=Test, content=![](http://localhost:8080/img/upload/1580456737578面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=MyTest, flag=翻译, views=1, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:54:45, updateTime=2020-01-31 15:54:45, type=Type(id=2, name=学习方法, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=16, title=哈哈哈哈, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram；
						
						
						
						
						
![](http://localhost:8080/img/upload/1580455863675头像.jpg)
![](http://localhost:8080/img/upload/1580455923716面试.png), firstPicture=https://unsplash.it/800/450?image=1005, description=阿萨德无群, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-31 15:53:32, updateTime=2020-01-31 15:53:32, type=Type(id=5, name=高端技术, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=13, title=因果图认为一个吻, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=瓦尔全固态问题, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:53:32, updateTime=2020-01-29 13:53:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=1, name=Java, blogs=null), Tag(id=2, name=Spring, blogs=null)], userid=1, comments=[]), Blog(id=10, title=我确认无群若, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认太委屈而, flag=原创, views=2, appreciation=true, shareStatement=true, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:44:31, updateTime=2020-01-29 13:44:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[]), Blog(id=12, title=燃放胡椒粉低功耗, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=挖突然服务器而, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:33:32, updateTime=2020-01-29 13:33:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=9, title=王企鹅无群若无群, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我确认无群若无群, flag=原创, views=1, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:31:31, updateTime=2020-01-29 13:31:31, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=2, name=Spring, blogs=null), Tag(id=3, name=HTML, blogs=null)], userid=1, comments=[]), Blog(id=15, title=让个特点是五花肉发生的, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=我亲爱二无群, flag=原创, views=0, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:28:33, updateTime=2020-01-29 13:28:33, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=4, name=CSS, blogs=null), Tag(id=5, name=SpringBoot, blogs=null)], userid=1, comments=[]), Blog(id=11, title=w奇热, content=                        [TOC]
                        #### Disabled options
                        - TeX (Based on KaTeX);
                        - Emoji;
                        - Task lists;
                        - HTML tags decode;
                        - Flowchart and Sequence Diagram;
                    , firstPicture=https://unsplash.it/800/450?image=1005, description=带我去人范围确认, flag=原创, views=2, appreciation=false, shareStatement=false, commentable=false, published=true, recommened=true, createTime=2020-01-29 13:18:32, updateTime=2020-01-29 13:18:32, type=Type(id=4, name=技能提升, blogs=null), tags=[Tag(id=3, name=HTML, blogs=null), Tag(id=4, name=CSS, blogs=null)], userid=1, comments=[])], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.pageInfo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2020-03-04 14:34:00.644  INFO 14220 --- [http-nio-80-exec-3] com.myblog.aspect.LogAspect              : result:index
2020-03-04 14:34:06.888  INFO 14220 --- [http-nio-80-exec-6] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/login', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.toLogin', args=[]}
2020-03-04 14:34:06.888  INFO 14220 --- [http-nio-80-exec-6] com.myblog.aspect.LogAspect              : result:admin/login
2020-03-04 14:34:13.158  INFO 14220 --- [http-nio-80-exec-4] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/manage/blogpage/1/5/true', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogController.doPage', args=[1, 5, true, {}, org.apache.catalina.session.StandardSessionFacade@c5c14f]}
2020-03-04 14:34:13.208  INFO 14220 --- [http-nio-80-exec-4] com.myblog.aspect.LogAspect              : result:redirect:/manage/blogs
2020-03-04 14:34:22.915  INFO 14220 --- [http-nio-80-exec-3] com.myblog.aspect.LogAspect              : Request : RequestLog{url='http://localhost/manage/uploadImage', ip='0:0:0:0:0:0:0:1', classMethod='com.myblog.controller.BlogInputController.demo', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1b0925, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@6563cb]}
2020-03-04 14:34:22.920  INFO 14220 --- [http-nio-80-exec-3] com.myblog.aspect.LogAspect              : result:{success=1, message=上传成功！, url=http://localhost:80/img/upload/1583303662919Headportrait.jpg}
2020-03-04 14:35:50.355  INFO 14220 --- [Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:35:50.356  INFO 14220 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-03-04 14:35:50.365  INFO 14220 --- [Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-03-04 14:35:50.745  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 14220 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:35:50.745 DEBUG 14220 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:35:50.745  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:35:51.163  WARN 14220 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:35:51.201  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:35:51.202  INFO 14220 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:35:51.202  INFO 14220 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:35:51.219  INFO 14220 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:35:51.219  INFO 14220 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 470 ms
2020-03-04 14:35:51.609  INFO 14220 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:35:51.676  INFO 14220 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:35:51.997  INFO 14220 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:35:52.081  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2020-03-04 14:35:52.082  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.38 seconds (JVM running for 124.282)
2020-03-04 14:35:52.084  INFO 14220 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 14:38:42.376  INFO 14220 --- [Thread-9] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:38:42.766  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 14220 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:38:42.766 DEBUG 14220 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:38:42.766  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:38:43.177  WARN 14220 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-03-04 14:38:43.212  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:38:43.213  INFO 14220 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:38:43.213  INFO 14220 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:38:43.228  INFO 14220 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:38:43.228  INFO 14220 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 459 ms
2020-03-04 14:38:43.627  INFO 14220 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:38:43.683  INFO 14220 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:38:43.951  INFO 14220 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:38:43.991  INFO 14220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2020-03-04 14:38:43.991  INFO 14220 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 1.264 seconds (JVM running for 296.18)
2020-03-04 14:38:43.993  INFO 14220 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-03-04 14:40:48.382  INFO 12044 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 12044 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:40:48.386 DEBUG 12044 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:40:48.386  INFO 12044 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:40:50.688  INFO 12044 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:40:50.885  INFO 12044 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:40:51.360  INFO 12044 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.39 seconds (JVM running for 4.315)
2020-03-04 14:40:51.582  INFO 12044 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:51:59.784  INFO 11752 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 11752 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:51:59.786 DEBUG 11752 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:51:59.787  INFO 11752 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:52:02.152  INFO 11752 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:52:02.362  INFO 11752 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:52:02.839  INFO 11752 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.456 seconds (JVM running for 4.355)
2020-03-04 14:52:03.074  INFO 11752 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:52:56.209  INFO 6792 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 6792 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:52:56.211 DEBUG 6792 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:52:56.211  INFO 6792 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:52:58.430  INFO 6792 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:52:58.770  WARN 6792 --- [main] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-04 14:52:59.149  INFO 6792 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.351 seconds (JVM running for 4.269)
2020-03-04 14:52:59.490  INFO 6792 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:55:26.520  INFO 12916 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 12916 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:55:26.521 DEBUG 12916 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:55:26.522  INFO 12916 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:55:28.975  INFO 12916 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:55:29.191  INFO 12916 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:55:29.667  INFO 12916 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.675 seconds (JVM running for 4.783)
2020-03-04 14:55:29.878  INFO 12916 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:55:35.449  INFO 3528 --- [restartedMain] com.myblog.MyblogApplication             : Starting MyblogApplication on SKY-20160604CQO with PID 3528 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:55:35.450 DEBUG 3528 --- [restartedMain] com.myblog.MyblogApplication             : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:55:35.450  INFO 3528 --- [restartedMain] com.myblog.MyblogApplication             : The following profiles are active: dev
2020-03-04 14:55:36.923  INFO 3528 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2020-03-04 14:55:36.931  INFO 3528 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-03-04 14:55:36.932  INFO 3528 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-04 14:55:37.008  INFO 3528 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-03-04 14:55:37.008  INFO 3528 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1507 ms
2020-03-04 14:55:37.781  INFO 3528 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:55:37.893  INFO 3528 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:55:38.317  INFO 3528 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-03-04 14:55:38.389  INFO 3528 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2020-03-04 14:55:38.392  INFO 3528 --- [restartedMain] com.myblog.MyblogApplication             : Started MyblogApplication in 3.473 seconds (JVM running for 4.523)
2020-03-04 14:57:23.474  INFO 12332 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 12332 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:57:23.475 DEBUG 12332 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:57:23.475  INFO 12332 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:57:25.744  INFO 12332 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:57:25.939  INFO 12332 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:57:26.419  INFO 12332 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.344 seconds (JVM running for 4.238)
2020-03-04 14:57:26.638  INFO 12332 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 14:59:44.854  INFO 13088 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13088 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 14:59:44.856 DEBUG 13088 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 14:59:44.857  INFO 13088 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 14:59:47.402  INFO 13088 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 14:59:47.590  INFO 13088 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 14:59:48.191  INFO 13088 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.741 seconds (JVM running for 4.61)
2020-03-04 14:59:48.421  INFO 13088 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 15:00:07.749  INFO 3544 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 3544 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 15:00:07.751 DEBUG 3544 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 15:00:07.751  INFO 3544 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 15:00:10.615  INFO 3544 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 15:00:10.813  INFO 3544 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 15:00:11.281  INFO 3544 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 4.052 seconds (JVM running for 5.006)
2020-03-04 15:00:11.519  INFO 3544 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 15:04:33.416  INFO 8704 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 8704 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 15:04:33.417 DEBUG 8704 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 15:04:33.418  INFO 8704 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 15:04:35.755  INFO 8704 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 15:04:35.956  INFO 8704 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 15:04:36.437  INFO 8704 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.423 seconds (JVM running for 4.387)
2020-03-04 15:04:36.660  INFO 8704 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-04 15:10:19.542  INFO 13028 --- [main] com.myblog.MyblogApplicationTests        : Starting MyblogApplicationTests on SKY-20160604CQO with PID 13028 (started by Administrator in D:\java\project in idea\Project with SpringBoot\myblog)
2020-03-04 15:10:19.543 DEBUG 13028 --- [main] com.myblog.MyblogApplicationTests        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-03-04 15:10:19.543  INFO 13028 --- [main] com.myblog.MyblogApplicationTests        : The following profiles are active: dev
2020-03-04 15:10:21.796  INFO 13028 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-04 15:10:21.984  INFO 13028 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-03-04 15:10:22.463  INFO 13028 --- [main] com.myblog.MyblogApplicationTests        : Started MyblogApplicationTests in 3.315 seconds (JVM running for 4.194)
2020-03-04 15:10:22.684  INFO 13028 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
